!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A0	models/models.hpp	/^    Real A0,B0,X0;$/;"	m	class:PeroxideOxideEquation
AAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    AAlignment = traits<Derived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon104
ABx_lx	Eigen/src/Core/util/Constants.h	/^  ABx_lx              = 0x200,$/;"	e	enum:Eigen::DecompositionOptions
ADAPTIVE_METHODS_HPP	methods/adaptive_methods.hpp	2;"	d
ALIVE	Eigen/src/OrderingMethods/Eigen_Colamd.h	108;"	d
AMDOrdering	Eigen/src/OrderingMethods/Ordering.h	/^class AMDOrdering$/;"	c	namespace:Eigen
APIBase	Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseSolverBase<SparseLU<_MatrixType,_OrderingType> > APIBase;$/;"	t	class:Eigen::SparseLU
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	434;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	395;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	413;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	419;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	434;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	395;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	413;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	419;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
AbdulleGaregnaniMethod	core_methods.hpp	/^    AbdulleGaregnaniMethod(Model&m,double h0, StepIntegrator& base_integrator,RandomVariable& step_perturbator):NumericalMethod(m,h0,base_integrator),step_perturbator(step_perturbator){}$/;"	f	class:AbdulleGaregnaniMethod
AbdulleGaregnaniMethod	core_methods.hpp	/^class AbdulleGaregnaniMethod:public NumericalMethod$/;"	c
AbdulleGaregnaniMethod	methods/core_methods.hpp	/^    AbdulleGaregnaniMethod(Model&m,Real h0, StepIntegrator& base_integrator):FixedTimeSteppingMethod(m,h0,base_integrator),uniform_distribution(-1,1){}$/;"	f	class:AbdulleGaregnaniMethod
AbdulleGaregnaniMethod	methods/core_methods.hpp	/^class AbdulleGaregnaniMethod:public FixedTimeSteppingMethod$/;"	c
Abs2ReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> Abs2ReturnType;$/;"	t
AbsReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> AbsReturnType;$/;"	t
AccPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef ResPacket AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
AccPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccessorLevels	Eigen/src/Core/util/Constants.h	/^enum AccessorLevels {$/;"	g	namespace:Eigen
AcosReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_acos_op<Scalar>, const Derived> AcosReturnType;$/;"	t
Action	Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	g	namespace:Eigen
ActualCols	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualCols = Transpose ? MaxRows : MaxCols$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon297
ActualIndex	Eigen/src/Core/BandMatrix.h	/^        ActualIndex = ReturnOpposite ? -Index : Index,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon233
ActualLhs	Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1, SparseView<Lhs1> >::type ActualLhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualLhsType	Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::ExtractType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsType	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsType	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsTypeCleaned	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsTypeCleaned	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualMatrixType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef MatrixType ActualMatrixType;$/;"	t	class:Eigen::internal::generic_matrix_wrapper
ActualMatrixType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef Ref<const MatrixType> ActualMatrixType;$/;"	t	class:Eigen::internal::generic_matrix_wrapper
ActualMatrixType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixWrapper::ActualMatrixType ActualMatrixType;$/;"	t	class:Eigen::IterativeSolverBase
ActualMatrixType	Eigen/src/LU/arch/Inverse_SSE.h	/^  typedef typename conditional<(MatrixType::Flags&LinearAccessBit),MatrixType const &,typename MatrixType::PlainObject>::type ActualMatrixType;$/;"	t	struct:Eigen::internal::compute_inverse_size4
ActualPacketAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = 0x0;$/;"	m	namespace:Eigen
ActualPacketAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = PacketAccessBit;$/;"	m	namespace:Eigen
ActualPacketSize	Eigen/src/Core/AssignEvaluator.h	/^    ActualPacketSize    = int(Traversal)==LinearVectorizedTraversal ? LinearPacketSize$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon260
ActualRhs	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,LhsT,RhsT>::type ActualRhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualRhsType	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsType	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsType	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsTypeCleaned	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsTypeCleaned	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRows	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualRows = Transpose ? MaxCols : MaxRows,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon297
AdaptedClassicalNumericalMethod	core_methods.hpp	/^  AdaptedClassicalNumericalMethod(Model &m, double h0,StepIntegrator& base_integrator):NumericalMethod(m,h0,base_integrator){}$/;"	f	class:AdaptedClassicalNumericalMethod
AdaptedClassicalNumericalMethod	core_methods.hpp	/^class AdaptedClassicalNumericalMethod:public NumericalMethod$/;"	c
AddCost	Eigen/src/Core/NumTraits.h	/^    AddCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
AdjointReturnType	Eigen/src/Core/MatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::MatrixBase
AdjointReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const typename MatrixType::AdjointReturnType,TransposeMode> AdjointReturnType;$/;"	t	class:Eigen::SelfAdjointView
AdjointReturnType	Eigen/src/Core/SolverBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SolverBase
AdjointReturnType	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::AdjointReturnType,TransposeMode> AdjointReturnType;$/;"	t	class:Eigen::TriangularView
AdjointReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Affine	Eigen/src/Core/util/Constants.h	/^  Affine        = 0x2,$/;"	e	enum:Eigen::TransformTraits
Affine2d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Affine> Affine2d;$/;"	t	namespace:Eigen
Affine2f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Affine> Affine2f;$/;"	t	namespace:Eigen
Affine3d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Affine> Affine3d;$/;"	t	namespace:Eigen
Affine3f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Affine> Affine3f;$/;"	t	namespace:Eigen
AffineCompact	Eigen/src/Core/util/Constants.h	/^  AffineCompact = 0x10 | Affine,$/;"	e	enum:Eigen::TransformTraits
AffineCompact2d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,AffineCompact> AffineCompact2d;$/;"	t	namespace:Eigen
AffineCompact2f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,AffineCompact> AffineCompact2f;$/;"	t	namespace:Eigen
AffineCompact3d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,AffineCompact> AffineCompact3d;$/;"	t	namespace:Eigen
AffineCompact3f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,AffineCompact> AffineCompact3f;$/;"	t	namespace:Eigen
AffinePart	Eigen/src/Geometry/Transform.h	/^                              Block<MatrixType,Dim,HDim> >::type AffinePart;$/;"	t	class:Eigen::Transform
AffinePart	Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::AffinePart AffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
AffineTransformType	Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Affine> AffineTransformType;$/;"	t	class:Eigen::Translation
AleksaRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^    AleksaRandomPathsAdaptiveScheme(Model&m, Real h0, StepIntegrator& base_integrator, Real tol, int no_paths):NumericalMethod(m,h0,base_integrator),tol(tol),no_paths(no_paths)$/;"	f	class:AleksaRandomPathsAdaptiveScheme
AleksaRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^class AleksaRandomPathsAdaptiveScheme:public NumericalMethod$/;"	c
AliasFreeProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
Aligned	Eigen/src/Core/util/Constants.h	/^  Aligned=16,         \/**< \\deprecated Synonym for Aligned16. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned128	Eigen/src/Core/util/Constants.h	/^  Aligned128=128,     \/**< Data pointer is aligned on a 128 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned16	Eigen/src/Core/util/Constants.h	/^  Aligned16=16,       \/**< Data pointer is aligned on a 16 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned32	Eigen/src/Core/util/Constants.h	/^  Aligned32=32,       \/**< Data pointer is aligned on a 32 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned64	Eigen/src/Core/util/Constants.h	/^  Aligned64=64,       \/**< Data pointer is aligned on a 64 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned8	Eigen/src/Core/util/Constants.h	/^  Aligned8=8,         \/**< Data pointer is aligned on a 8 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
AlignedBit	Eigen/src/Core/util/Constants.h	/^EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;$/;"	m	namespace:Eigen
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox(const OtherVectorType1& _min, const OtherVectorType2& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(Index _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(const MatrixBase<Derived>& p) : m_min(p), m_max(m_min)$/;"	f	class:Eigen::AlignedBox
AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedMapType	Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, AlignedMax> AlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
AlignedMask	Eigen/src/Core/util/Constants.h	/^  AlignedMask=255,$/;"	e	enum:Eigen::AlignmentType
AlignedMax	Eigen/src/Core/util/Constants.h	/^  AlignedMax = Aligned128$/;"	e	enum:Eigen::AlignmentType
AlignedOnScalar	Eigen/src/Core/GenericPacketMath.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon583
AlignedOnScalar	Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
AlignedOnScalar	Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
AlignedOnScalar	Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
AlignedOnScalar	Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
AlignedOnScalar	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
AlignedOnScalar	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
AlignedOnScalar	Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
AlignedOnScalar	Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
AlignedOnScalar	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
AlignedOnScalar	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
AlignedOnScalar	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
AlignedOnScalar	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
AlignedOnScalar	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
AlignedOnScalar	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
AlignedOnScalar	Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
AlignedOnScalar	Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
AlignedOnScalar	Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
AlignedOnScalar	Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon503
AlignedOnScalar	Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
AlignedOnScalar	Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
AlignedOnScalar	Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
AlignedOnScalar	Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
AlignedOnScalar	Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
AlignedOnScalar	Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon534
AlignedOnScalar	Eigen/src/Core/arch/ZVector/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
AlignedOnScalar	Eigen/src/Core/arch/ZVector/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
AlignedOnScalar	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
AlignedOnScalar	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
AlignedOnScalar	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
AlignedScaling2d	Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,2> AlignedScaling2d;$/;"	t	namespace:Eigen
AlignedScaling2f	Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 2> AlignedScaling2f;$/;"	t	namespace:Eigen
AlignedScaling3d	Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,3> AlignedScaling3d;$/;"	t	namespace:Eigen
AlignedScaling3f	Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 3> AlignedScaling3f;$/;"	t	namespace:Eigen
Alignment	Eigen/src/Core/Block.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::traits::__anon245
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME in some rare cases, Alignment could be preserved, like a Vector4f.$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME it is not very clear why alignment is necessarily lost...$/;"	e	enum:Eigen::internal::unary_evaluator::__anon310
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME this will need to be improved once PartialReduxExpr is vectorized$/;"	e	enum:Eigen::internal::evaluator::__anon320
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator::__anon323
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator_base::__anon303
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = AlignedMax$/;"	e	enum:Eigen::internal::evaluator::__anon306
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN($/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ArgType>::Alignment, Alignment0)$/;"	e	enum:Eigen::internal::evaluator::__anon314
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<Lhs>::Alignment,evaluator<Rhs>::Alignment)$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ThenMatrixType>::Alignment, evaluator<ElseMatrixType>::Alignment)$/;"	e	enum:Eigen::internal::evaluator::__anon316
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon321
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon305
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon307
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgTypeNestedCleaned>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon318
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon313
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = int(MapOptions)&int(AlignedMask)$/;"	e	enum:Eigen::internal::evaluator::__anon312
Alignment	Eigen/src/Core/CoreEvaluators.h	/^    Alignment = traits<Derived>::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon304
Alignment	Eigen/src/Core/Map.h	/^    Alignment = int(MapOptions)&int(AlignedMask),$/;"	e	enum:Eigen::internal::traits::__anon275
Alignment	Eigen/src/Core/Matrix.h	/^    Alignment = actual_alignment$/;"	e	enum:Eigen::internal::traits::__anon451
Alignment	Eigen/src/Core/ProductEvaluators.h	/^    Alignment = bool(CanVectorizeLhs) ? (LhsOuterStrideBytes<=0 || (int(LhsOuterStrideBytes) % EIGEN_PLAIN_ENUM_MAX(1,LhsAlignment))!=0 ? 0 : LhsAlignment)$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
Alignment	Eigen/src/Core/ProductEvaluators.h	/^    Alignment = evaluator<MatrixType>::Alignment$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
Alignment	Eigen/src/Core/Redux.h	/^    Alignment = evaluator<XprType>::Alignment$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
Alignment	Eigen/src/Core/Ref.h	/^    Alignment = traits<Map<_PlainObjectType, _Options, _StrideType> >::Alignment$/;"	e	enum:Eigen::internal::traits::__anon455
Alignment	Eigen/src/Geometry/Quaternion.h	/^    Alignment = internal::traits<Coefficients>::Alignment,$/;"	e	enum:Eigen::internal::traits::__anon82
Alignment	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon60
Alignment	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon59
Alignment0	Eigen/src/Core/CoreEvaluators.h	/^    Alignment0 = (InnerPanel && (OuterStrideAtCompileTime!=Dynamic) && (((OuterStrideAtCompileTime * int(sizeof(Scalar))) % int(PacketAlignment)) == 0)) ? int(PacketAlignment) : 0,$/;"	e	enum:Eigen::internal::evaluator::__anon314
AlignmentMask	Eigen/src/Cholesky/LLT.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::LLT::__anon666
AlignmentMatch	Eigen/src/Core/Ref.h	/^      AlignmentMatch = (int(traits<PlainObjectType>::Alignment)==int(Unaligned)) || (DerivedAlignment >= int(Alignment)), \/\/ FIXME the first condition is not very clear, it should be replaced by the required alignment$/;"	e	enum:Eigen::internal::traits::match::__anon456
AlignmentType	Eigen/src/Core/util/Constants.h	/^enum AlignmentType {$/;"	g	namespace:Eigen
AllAtOnceTraversal	Eigen/src/Core/util/Constants.h	/^  AllAtOnceTraversal$/;"	e	enum:Eigen::TraversalType
AllReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_all>::Type AllReturnType;$/;"	t	class:Eigen::VectorwiseOp
AltiVec	Eigen/src/Core/util/Constants.h	/^    AltiVec = 0x2,$/;"	e	enum:Eigen::Architecture::Type
AmbiVector	Eigen/src/SparseCore/AmbiVector.h	/^    explicit AmbiVector(Index size)$/;"	f	class:Eigen::internal::AmbiVector
AmbiVector	Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector$/;"	c	namespace:Eigen::internal
AmbiVectorMode	Eigen/src/Core/util/Constants.h	/^enum AmbiVectorMode {$/;"	g	namespace:Eigen
AmbientDimAtCompileTime	Eigen/src/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon109
AmbientDimAtCompileTime	Eigen/src/Geometry/Hyperplane.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::Hyperplane::__anon95
AmbientDimAtCompileTime	Eigen/src/Geometry/ParametrizedLine.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::ParametrizedLine::__anon100
Ancestor	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_all<Lhs>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
Ancestor	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_all<Arg1>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const QuaternionBase<QuatDerived>& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^  inline AngleAxis(const Scalar& angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	Eigen/src/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxisType	Eigen/src/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::QuaternionBase
AngleAxisType	Eigen/src/Geometry/Quaternion.h	/^  typedef typename Base::AngleAxisType AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisd	Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisf	Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
AnyReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_any>::Type AnyReturnType;$/;"	t	class:Eigen::VectorwiseOp
Architecture	Eigen/src/Core/util/Constants.h	/^namespace Architecture$/;"	n	namespace:Eigen
Arg1	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg1Type>::type Arg1;$/;"	t	class:Eigen::CwiseTernaryOp
Arg1Flags	Eigen/src/Core/CoreEvaluators.h	/^    Arg1Flags = evaluator<Arg1>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Arg1Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg1::Nested Arg1Nested;$/;"	t	struct:Eigen::internal::traits
Arg1Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg1Type>::type Arg1Nested;$/;"	t	class:Eigen::CwiseTernaryOp
Arg2	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg2Type>::type Arg2;$/;"	t	class:Eigen::CwiseTernaryOp
Arg2Flags	Eigen/src/Core/CoreEvaluators.h	/^    Arg2Flags = evaluator<Arg2>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Arg2Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg2::Nested Arg2Nested;$/;"	t	struct:Eigen::internal::traits
Arg2Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg2Type>::type Arg2Nested;$/;"	t	class:Eigen::CwiseTernaryOp
Arg3	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg3Type>::type Arg3;$/;"	t	class:Eigen::CwiseTernaryOp
Arg3Flags	Eigen/src/Core/CoreEvaluators.h	/^    Arg3Flags = evaluator<Arg3>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Arg3Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg3::Nested Arg3Nested;$/;"	t	struct:Eigen::internal::traits
Arg3Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg3Type>::type Arg3Nested;$/;"	t	class:Eigen::CwiseTernaryOp
ArgReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_arg_op<Scalar>, const Derived> ArgReturnType;$/;"	t
ArgType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename remove_all<typename XprType::NestedExpressionType>::type ArgType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
ArgTypeIsRowMajor	Eigen/src/Core/CoreEvaluators.h	/^    ArgTypeIsRowMajor = (int(evaluator<ArgType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::evaluator::__anon314
ArgTypeNested	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::nested_eval<ArgType,1>::type ArgTypeNested;$/;"	t	struct:Eigen::internal::evaluator
ArgTypeNested	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::nested_eval<ArgType,Factor>::type ArgTypeNested;$/;"	t	struct:Eigen::internal::unary_evaluator
ArgTypeNestedCleaned	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<ArgTypeNested>::type ArgTypeNestedCleaned;$/;"	t	struct:Eigen::internal::evaluator
ArgTypeNestedCleaned	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<ArgTypeNested>::type ArgTypeNestedCleaned;$/;"	t	struct:Eigen::internal::unary_evaluator
Array	Eigen/src/Core/Array.h	/^    Array(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array() : Base()$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Array& other)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const EigenBase<OtherDerived> &other,$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2, const Scalar& val3)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const T0& val0, const T1& val1)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array(const T& x)$/;"	f	class:Eigen::Array
Array	Eigen/src/Core/Array.h	/^class Array$/;"	c	namespace:Eigen
ArrayBase	Eigen/src/Core/ArrayBase.h	/^    ArrayBase() : Base() {}$/;"	f	class:Eigen::ArrayBase
ArrayBase	Eigen/src/Core/ArrayBase.h	/^template<typename Derived> class ArrayBase$/;"	c	namespace:Eigen
ArrayRef	Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXr> ArrayRef;$/;"	t	class:Eigen::BDCSVD
ArrayWrapper	Eigen/src/Core/ArrayWrapper.h	/^    explicit EIGEN_STRONG_INLINE ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ArrayWrapper
ArrayWrapper	Eigen/src/Core/ArrayWrapper.h	/^class ArrayWrapper : public ArrayBase<ArrayWrapper<ExpressionType> >$/;"	c	namespace:Eigen
ArrayXI	Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<StorageIndex,Dynamic,1> ArrayXI;$/;"	t	struct:Eigen::internal::Assignment
ArrayXS	Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<Scalar,Dynamic,1> ArrayXS;$/;"	t	struct:Eigen::internal::Assignment
ArrayXi	Eigen/src/SVD/BDCSVD.h	/^  typedef Array<Index,1,Dynamic> ArrayXi;$/;"	t	class:Eigen::BDCSVD
ArrayXpr	Eigen/src/Core/util/Constants.h	/^struct ArrayXpr {};$/;"	s	namespace:Eigen
ArrayXr	Eigen/src/SVD/BDCSVD.h	/^  typedef Array<RealScalar, Dynamic, 1> ArrayXr;$/;"	t	class:Eigen::BDCSVD
AsinReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_asin_op<Scalar>, const Derived> AsinReturnType;$/;"	t
AssignOpType	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> AssignOpType;$/;"	t	struct:Eigen::internal::Assignment
Assignment	Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Dense, Weak>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, EigenBase2EigenBase, Weak>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/DiagonalMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, CwiseBinaryOp<internal::scalar_product_op<ScalarBis,Scalar>, const CwiseNullaryOp<internal::scalar_constant_op<ScalarBis>,Plain>,$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::add_assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::sub_assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<CwiseUnaryOp<internal::scalar_conjugate_op<typename DecType::Scalar>, const Transpose<const DecType> >,RhsType>,$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<Transpose<const DecType>,RhsType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::add_assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::sub_assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Horizontal>, internal::assign_op<Scalar,typename ArgType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Vertical>, internal::assign_op<Scalar,typename ArgType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct Assignment<DstXprType, SolveWithGuess<DecType,RhsType,GuessType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/LU/FullPivLU.h	/^struct Assignment<DstXprType, Inverse<FullPivLU<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename FullPivLU<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/LU/InverseImpl.h	/^struct Assignment<DstXprType, Inverse<XprType>, internal::assign_op<typename DstXprType::Scalar,typename XprType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/LU/PartialPivLU.h	/^struct Assignment<DstXprType, Inverse<PartialPivLU<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename PartialPivLU<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/QR/ColPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<ColPivHouseholderQR<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename ColPivHouseholderQR<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^struct Assignment<DstXprType, Inverse<CompleteOrthogonalDecomposition<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename CompleteOrthogonalDecomposition<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/QR/FullPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<FullPivHouseholderQR<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename FullPivHouseholderQR<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar,Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::add_assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::sub_assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SparseSymmetricPermutationProduct<MatrixType,Mode>, internal::assign_op<Scalar,typename MatrixType::Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SrcXprType, Functor, SparseSelfAdjoint2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar,typename DstXprType::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar,typename DstXprType::Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseTriangularShape> { typedef Sparse2Dense  Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentTraits	Eigen/src/Core/AssignEvaluator.h	/^  typedef copy_using_evaluator_traits<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor> AssignmentTraits;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
AssignmentTraits	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AssignmentTraits	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AtanReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_atan_op<Scalar>, const Derived> AtanReturnType;$/;"	t
AutoAlign	Eigen/src/Core/util/Constants.h	/^  AutoAlign = 0,$/;"	e	enum:Eigen::StorageOptions
Ax_lBx	Eigen/src/Core/util/Constants.h	/^  Ax_lBx              = 0x100,$/;"	e	enum:Eigen::DecompositionOptions
B0	models/models.hpp	/^    Real A0,B0,X0;$/;"	m	class:PeroxideOxideEquation
BAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    BAlignment = traits<OtherDerived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon104
BAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    BAlignment = traits<OtherDerived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon107
BAx_lx	Eigen/src/Core/util/Constants.h	/^  BAx_lx              = 0x400,$/;"	e	enum:Eigen::DecompositionOptions
BDCSVD	Eigen/src/SVD/BDCSVD.h	/^  BDCSVD() : m_algoswap(16), m_numIters(0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	Eigen/src/SVD/BDCSVD.h	/^class BDCSVD : public SVDBase<BDCSVD<_MatrixType> >$/;"	c	namespace:Eigen
BLASFUNC	Eigen/src/misc/blas.h	9;"	d
BLASLONG	Eigen/src/misc/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	Eigen/src/misc/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASULONG	Eigen/src/misc/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	Eigen/src/misc/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLAS_H	Eigen/src/misc/blas.h	2;"	d
BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER	Eigen/src/Core/util/StaticAssert.h	/^        BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
BandMatrix	Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrix(Index rows=Rows, Index cols=Cols, Index supers=Supers, Index subs=Subs)$/;"	f	class:Eigen::internal::BandMatrix
BandMatrix	Eigen/src/Core/BandMatrix.h	/^class BandMatrix : public BandMatrixBase<BandMatrix<_Scalar,Rows,Cols,Supers,Subs,Options> >$/;"	c	namespace:Eigen::internal
BandMatrixBase	Eigen/src/Core/BandMatrix.h	/^class BandMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen::internal
BandMatrixWrapper	Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrixWrapper(const CoefficientsType& coeffs, Index rows=_Rows, Index cols=_Cols, Index supers=_Supers, Index subs=_Subs)$/;"	f	class:Eigen::internal::BandMatrixWrapper
BandMatrixWrapper	Eigen/src/Core/BandMatrix.h	/^class BandMatrixWrapper : public BandMatrixBase<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	c	namespace:Eigen::internal
BandShape	Eigen/src/Core/BandMatrix.h	/^struct BandShape {};$/;"	s	namespace:Eigen::internal
BandShape	Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	s	namespace:Eigen
Base	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodDecomposition> Base;$/;"	t	class:Eigen::CholmodDecomposition
Base	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLDLT
Base	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLLT
Base	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT> Base;$/;"	t	class:Eigen::CholmodSupernodalLLT
Base	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::CholmodBase
Base	Eigen/src/Core/Array.h	/^    typedef PlainObjectBase<Array> Base;$/;"	t	class:Eigen::Array
Base	Eigen/src/Core/ArrayBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::ArrayBase
Base	Eigen/src/Core/ArrayWrapper.h	/^    typedef ArrayBase<ArrayWrapper> Base;$/;"	t	class:Eigen::ArrayWrapper
Base	Eigen/src/Core/ArrayWrapper.h	/^    typedef MatrixBase<MatrixWrapper<ExpressionType> > Base;$/;"	t	class:Eigen::MatrixWrapper
Base	Eigen/src/Core/BandMatrix.h	/^    typedef BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor> Base;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Base	Eigen/src/Core/BandMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::internal::BandMatrixBase
Base	Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::Block
Base	Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::BlockImpl
Base	Eigen/src/Core/Block.h	/^    typedef MapBase<BlockType> Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	Eigen/src/Core/Block.h	/^    typedef typename internal::dense_xpr_base<BlockType>::type Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	Eigen/src/Core/CoreEvaluators.h	/^  typedef binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/CoreEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/CoreEvaluators.h	/^  typedef ternary_evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename dense_xpr_base<EvalToTemp>::type Base;$/;"	t	class:Eigen::internal::EvalToTemp
Base	Eigen/src/Core/CoreEvaluators.h	/^  typedef unary_evaluator<T> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/CoreIterators.h	/^  typedef typename evaluator<XprType>::InnerIterator Base;$/;"	t	class:Eigen::internal::inner_iterator_selector
Base	Eigen/src/Core/CwiseBinaryOp.h	/^                                                      BinaryOp>::ret>::Base Base;$/;"	t	class:Eigen::CwiseBinaryOp
Base	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	Eigen/src/Core/CwiseNullaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;$/;"	t	class:Eigen::CwiseNullaryOp
Base	Eigen/src/Core/CwiseTernaryOp.h	/^      CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> >::type Base;$/;"	t	class:Eigen::CwiseTernaryOpImpl
Base	Eigen/src/Core/CwiseTernaryOp.h	/^      typename internal::traits<Arg1Type>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseTernaryOp
Base	Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryOp
Base	Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Base	Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp, MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryView
Base	Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::dense_xpr_base< CwiseUnaryView<ViewOp, MatrixType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryView<ViewOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	Eigen/src/Core/DenseBase.h	/^    typedef DenseCoeffsBase<Derived> Base;$/;"	t	class:Eigen::DenseBase
Base	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, WriteAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	Eigen/src/Core/Diagonal.h	/^    typedef typename internal::dense_xpr_base<Diagonal>::type Base;$/;"	t	class:Eigen::Diagonal
Base	Eigen/src/Core/ForceAlignedAccess.h	/^    typedef typename internal::dense_xpr_base<ForceAlignedAccess>::type Base;$/;"	t	class:Eigen::ForceAlignedAccess
Base	Eigen/src/Core/Inverse.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	Eigen/src/Core/Inverse.h	/^  typedef typename internal::generic_xpr_base<Inverse<XprType> >::type Base;$/;"	t	class:Eigen::InverseImpl
Base	Eigen/src/Core/Map.h	/^    typedef MapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::MapBase
Base	Eigen/src/Core/MapBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::MapBase
Base	Eigen/src/Core/Matrix.h	/^    typedef PlainObjectBase<Matrix> Base;$/;"	t	class:Eigen::Matrix
Base	Eigen/src/Core/MatrixBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::MatrixBase
Base	Eigen/src/Core/NestByValue.h	/^    typedef typename internal::dense_xpr_base<NestByValue>::type Base;$/;"	t	class:Eigen::NestByValue
Base	Eigen/src/Core/PermutationMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::PermutationBase
Base	Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<Map> Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationMatrix> Base;$/;"	t	class:Eigen::PermutationMatrix
Base	Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationWrapper> Base;$/;"	t	class:Eigen::PermutationWrapper
Base	Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::PlainObjectBase
Base	Eigen/src/Core/Product.h	/^                                                        internal::product_type<Lhs,Rhs>::ret>::ret>::Base Base;$/;"	t	class:Eigen::Product
Base	Eigen/src/Core/Product.h	/^    typedef typename internal::dense_product_base<Lhs, Rhs, Option> Base;$/;"	t	class:Eigen::ProductImpl
Base	Eigen/src/Core/Product.h	/^    typedef typename internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::ProductImpl
Base	Eigen/src/Core/Product.h	/^  typedef typename internal::dense_xpr_base<ProductXpr>::type Base;$/;"	t	class:Eigen::internal::dense_product_base
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Lhs, typename Rhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheRight> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Rhs, typename Lhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheLeft> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Diagonal<const Product<Lhs, Rhs, LazyProduct>, DiagIndex> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Product<EIGEN_SCALAR_BINARYOP_EXPR_RETURN_TYPE(Scalar1,Lhs,product), Rhs, DefaultProduct> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<BaseProduct, CoeffBasedProductMode, DenseShape, DenseShape> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<XprType> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/Ref.h	/^    typedef RefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	Eigen/src/Core/Ref.h	/^  typedef MapBase<Derived> Base;$/;"	t	class:Eigen::RefBase
Base	Eigen/src/Core/Replicate.h	/^    typedef typename internal::dense_xpr_base<Replicate>::type Base;$/;"	t	class:Eigen::Replicate
Base	Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::dense_xpr_base<ReturnByValue>::type Base;$/;"	t	class:Eigen::ReturnByValue
Base	Eigen/src/Core/ReturnByValue.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/Reverse.h	/^    typedef typename internal::dense_xpr_base<Reverse>::type Base;$/;"	t	class:Eigen::Reverse
Base	Eigen/src/Core/Select.h	/^    typedef typename internal::dense_xpr_base<Select>::type Base;$/;"	t	class:Eigen::Select
Base	Eigen/src/Core/SelfAdjointView.h	/^    typedef TriangularBase<SelfAdjointView> Base;$/;"	t	class:Eigen::SelfAdjointView
Base	Eigen/src/Core/SelfAdjointView.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	Eigen/src/Core/Solve.h	/^    typedef typename internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::SolveImpl
Base	Eigen/src/Core/Solve.h	/^  typedef MatrixBase<Solve<Decomposition,RhsType> > Base;$/;"	t	class:Eigen::SolveImpl
Base	Eigen/src/Core/Solve.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/Core/SolveTriangular.h	/^  typedef ReturnByValue<triangular_solve_retval> Base;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Base	Eigen/src/Core/SolverBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SolverBase
Base	Eigen/src/Core/Stride.h	/^    typedef Stride<0, Value> Base;$/;"	t	class:Eigen::InnerStride
Base	Eigen/src/Core/Stride.h	/^    typedef Stride<Value, 0> Base;$/;"	t	class:Eigen::OuterStride
Base	Eigen/src/Core/Swap.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, BuiltIn> Base;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Base	Eigen/src/Core/Transpose.h	/^    typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::Transpose
Base	Eigen/src/Core/Transpose.h	/^    typedef typename internal::TransposeImpl_base<MatrixType>::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	Eigen/src/Core/Transpose.h	/^  typedef typename internal::generic_xpr_base<Transpose<XprType> >::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Map> Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Transpositions> Base;$/;"	t	class:Eigen::Transpositions
Base	Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<TranspositionsWrapper> Base;$/;"	t	class:Eigen::TranspositionsWrapper
Base	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularBase<TriangularViewType> Base;$/;"	t	class:Eigen::TriangularViewImpl
Base	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularViewImpl<_MatrixType, _Mode, typename internal::traits<_MatrixType>::StorageKind > Base;$/;"	t	class:Eigen::TriangularView
Base	Eigen/src/Core/TriangularMatrix.h	/^  typedef evaluator<typename internal::remove_all<MatrixType>::type> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	Eigen/src/Core/TriangularMatrix.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	Eigen/src/Core/VectorBlock.h	/^                     internal::traits<VectorType>::Flags & RowMajorBit ? Size : 1> Base;$/;"	t	class:Eigen::VectorBlock
Base	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::dense_xpr_base<PartialReduxExpr>::type Base;$/;"	t	class:Eigen::PartialReduxExpr
Base	Eigen/src/Core/util/BlasUtil.h	/^  typedef blas_traits<NestedXpr> Base;$/;"	t	struct:Eigen::internal::blas_traits
Base	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef SelfAdjointEigenSolver<_MatrixType> Base;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Base	Eigen/src/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixBase<Homogeneous> Base;$/;"	t	class:Eigen::Homogeneous
Base	Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<RefactoredXpr> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/Geometry/Quaternion.h	/^  typedef QuaternionBase<Quaternion<_Scalar,_Options> > Base;$/;"	t	class:Eigen::Quaternion
Base	Eigen/src/Geometry/Quaternion.h	/^  typedef RotationBase<Derived, 3> Base;$/;"	t	class:Eigen::QuaternionBase
Base	Eigen/src/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef DiagonalPreconditioner<_Scalar> Base;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Base	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef IterativeSolverBase<BiCGSTAB> Base;$/;"	t	class:Eigen::BiCGSTAB
Base	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef IterativeSolverBase<ConjugateGradient> Base;$/;"	t	class:Eigen::ConjugateGradient
Base	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> > Base;$/;"	t	class:Eigen::IncompleteCholesky
Base	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseSolverBase<IncompleteLUT> Base;$/;"	t	class:Eigen::IncompleteLUT
Base	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::IterativeSolverBase
Base	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef IterativeSolverBase<LeastSquaresConjugateGradient> Base;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Base	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type Base;$/;"	t	class:Eigen::SolveWithGuess
Base	Eigen/src/LU/FullPivLU.h	/^    typedef SolverBase<FullPivLU> Base;$/;"	t	class:Eigen::FullPivLU
Base	Eigen/src/LU/PartialPivLU.h	/^    typedef SolverBase<PartialPivLU> Base;$/;"	t	class:Eigen::PartialPivLU
Base	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLDLT<MatrixType, _UpLo> > Base; $/;"	t	class:Eigen::PastixLDLT
Base	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLLT<MatrixType, _UpLo> > Base;$/;"	t	class:Eigen::PastixLLT
Base	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLU<MatrixType> > Base;$/;"	t	class:Eigen::PastixLU
Base	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PastixBase
Base	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLDLT<MatrixType,Options> > Base;$/;"	t	class:Eigen::PardisoLDLT
Base	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLLT<MatrixType,_UpLo> > Base;$/;"	t	class:Eigen::PardisoLLT
Base	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl<PardisoLU> Base;$/;"	t	class:Eigen::PardisoLU
Base	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PardisoImpl
Base	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseSolverBase<SPQR<_MatrixType> > Base;$/;"	t	class:Eigen::SPQR
Base	Eigen/src/SVD/BDCSVD.h	/^  typedef SVDBase<BDCSVD> Base;$/;"	t	class:Eigen::BDCSVD
Base	Eigen/src/SVD/JacobiSVD.h	/^    typedef SVDBase<JacobiSVD> Base;$/;"	t	class:Eigen::JacobiSVD
Base	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialCholesky> Base;$/;"	t	class:Eigen::SimplicialCholesky
Base	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLDLT> Base;$/;"	t	class:Eigen::SimplicialLDLT
Base	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLLT> Base;$/;"	t	class:Eigen::SimplicialLLT
Base	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SimplicialCholeskyBase
Base	Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef Map<SparseMatrix<_Scalar, _Flags, _StorageIndex> > Base;$/;"	t	class:Eigen::MappedSparseMatrix
Base	Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseCompressedBase<Block<SparseMatrixType,BlockRows,BlockCols,true> > Base;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
Base	Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseMatrixBase<BlockType> Base;$/;"	t	class:Eigen::BlockImpl
Base	Eigen/src/SparseCore/SparseBlock.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	Eigen/src/SparseCore/SparseBlock.h	/^  typedef internal::sparse_matrix_block_impl<SparseMatrixType,BlockRows,BlockCols> Base;$/;"	t	class:Eigen::BlockImpl
Base	Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef SparseMatrixBase<Derived> Base;$/;"	t	class:Eigen::SparseCompressedBase
Base	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef SparseMatrixBase<Derived> Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef sparse_conjunction_evaluator<XprType> Base;$/;"	t	struct:Eigen::internal::binary_evaluator
Base	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Lhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Rhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Lhs, Transpose<const typename Rhs::DiagonalVectorType>, Lhs::Flags&RowMajorBit?SDP_AsCwiseProduct:SDP_AsScalarProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Rhs, typename Lhs::DiagonalVectorType, Rhs::Flags&RowMajorBit?SDP_AsScalarProduct:SDP_AsCwiseProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseCompressedBase<Derived> Base;$/;"	t	class:Eigen::SparseMapBase
Base	Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::SparseMapBase
Base	Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseCompressedBase<SparseMatrix> Base;$/;"	t	class:Eigen::SparseMatrix
Base	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<SparseMatrix<_Scalar,_Options,_StorageIndex> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SparseMatrixBase
Base	Eigen/src/SparseCore/SparsePermutation.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseProduct.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::SparseRefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMapBase<Derived> Base;$/;"	t	class:Eigen::internal::SparseRefBase
Base	Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef EigenBase<SparseSelfAdjointView> Base;$/;"	t	class:Eigen::SparseSelfAdjointView
Base	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef SparseCompressedBase<Transpose<MatrixType> > Base;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Base	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef internal::SparseTransposeImpl<MatrixType> Base;$/;"	t	class:Eigen::TransposeImpl
Base	Eigen/src/SparseCore/SparseTriangularView.h	/^      typedef EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef SparseMatrixBase<TriangularViewType> Base;$/;"	t	class:Eigen::TriangularViewImpl
Base	Eigen/src/SparseCore/SparseVector.h	/^    typedef SparseCompressedBase<SparseVector> Base;$/;"	t	class:Eigen::SparseVector
Base	Eigen/src/SparseCore/SparseVector.h	/^  typedef evaluator_base<SparseVectorType> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	Eigen/src/SparseCore/SparseView.h	/^  typedef SparseMatrixBase<SparseView > Base;$/;"	t	class:Eigen::SparseView
Base	Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::SparseLUImpl<Scalar, StorageIndex> Base;$/;"	t	class:Eigen::SparseLU
Base	Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseSolverBase<SparseQR<_MatrixType,_OrderingType> > Base;$/;"	t	class:Eigen::SparseQR
Base	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SuperLUBase
Base	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperILU> Base;$/;"	t	class:Eigen::SuperILU
Base	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperLU> Base;$/;"	t	class:Eigen::SuperLU
Base	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseSolverBase<UmfPackLU<_MatrixType> > Base;$/;"	t	class:Eigen::UmfPackLU
Base	Eigen/src/misc/Image.h	/^  typedef ReturnByValue<image_retval_base> Base;$/;"	t	struct:Eigen::internal::image_retval_base
Base	Eigen/src/misc/Kernel.h	/^  typedef ReturnByValue<kernel_retval_base> Base;$/;"	t	struct:Eigen::internal::kernel_retval_base
BaseProduct	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> BaseProduct;$/;"	t	struct:Eigen::internal::product_evaluator
BaseTraits	Eigen/src/Core/Inverse.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	Eigen/src/Core/Solve.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	Eigen/src/LU/PartialPivLU.h	/^  typedef traits<_MatrixType> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BasisReturnType	Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime> BasisReturnType;$/;"	t	class:Eigen::MatrixBase
BiCGSTAB	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB() : Base() {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  explicit BiCGSTAB(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^class BiCGSTAB : public IterativeSolverBase<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
BidiagonalType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef BandMatrix<RealScalar, ColsAtCompileTime, ColsAtCompileTime, 1, 0, RowMajor> BidiagonalType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
BinaryOp	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Functor BinaryOp;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
BlasIndex	Eigen/src/Core/util/MKL_support.h	/^typedef MKL_INT BlasIndex;$/;"	t	namespace:Eigen
BlasIndex	Eigen/src/Core/util/MKL_support.h	/^typedef int BlasIndex;$/;"	t	namespace:Eigen
BlasLinearMapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE BlasLinearMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasLinearMapper
BlasLinearMapper	Eigen/src/Core/util/BlasUtil.h	/^class BlasLinearMapper {$/;"	c	namespace:Eigen::internal
BlasVectorMapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE BlasVectorMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasVectorMapper
BlasVectorMapper	Eigen/src/Core/util/BlasUtil.h	/^class BlasVectorMapper {$/;"	c	namespace:Eigen::internal
Block	Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index i) : Impl(xpr,i)$/;"	f	class:Eigen::Block
Block	Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::Block
Block	Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr,$/;"	f	class:Eigen::Block
Block	Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block$/;"	c	namespace:Eigen
BlockImpl	Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index startRow, Index startCol) : Impl(xpr, startRow, startCol) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/Core/Block.h	/^class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>$/;"	c	namespace:Eigen
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(XprType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,InnerPanel,Sparse>$/;"	c	namespace:Eigen
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl_dense	Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index i)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr,$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	Eigen/src/Core/Block.h	/^class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>$/;"	c	namespace:Eigen::internal
BlockImpl_dense	Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense$/;"	c	namespace:Eigen::internal
BlockIndexVector	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<StorageIndex,Dynamic,1> > BlockIndexVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockScalarVector	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<Scalar,Dynamic,1> > BlockScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockSize	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^    BlockSize  = meta_least_common_multiple<EIGEN_PLAIN_ENUM_MAX(mr,nr),EIGEN_PLAIN_ENUM_MIN(mr,nr)>::ret$/;"	e	enum:Eigen::internal::tribb_kernel::__anon287
BlockType	Eigen/src/Core/Block.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::internal::BlockImpl_dense
BlockType	Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MatrixType,Dynamic,Dynamic> BlockType;$/;"	t	struct:Eigen::internal::partial_lu_impl
BlockType	Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<SparseMatrixType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
BlockType	Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockType	Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived> BlockXpr;$/;"	t
BlueNormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_blueNorm,RealScalar>::Type BlueNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
BooleanNotReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_boolean_not_op<Scalar>, const Derived> BooleanNotReturnType;$/;"	t
BothDirections	Eigen/src/Core/util/Constants.h	/^  BothDirections $/;"	e	enum:Eigen::DirectionType
BottomLeft	Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomLeft	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftCeil	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftFloor	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRight	Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomRight	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightCeil	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightFloor	Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
Brusselator	models/models.cpp	/^Brusselator::Brusselator(int disc_nodes) :Equation(2*(disc_nodes)+1),dn(disc_nodes){$/;"	f	class:Brusselator
Brusselator	models/models.hpp	/^class Brusselator:public Equation$/;"	c
BrusselatorInverse	models/inverse_model.hpp	/^    BrusselatorInverse(const std::vector<Real> & parameters, const std::vector< Real>& t_obs ,$/;"	f	class:BrusselatorInverse
BrusselatorInverse	models/inverse_model.hpp	/^class BrusselatorInverse:public InverseProblem$/;"	c
BuildType	Eigen/src/Core/BandMatrix.h	/^      typedef Block<CoefficientsType,1, DiagonalSize> BuildType;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
BuiltIn	Eigen/src/Core/util/Constants.h	/^  BuiltIn$/;"	e	enum:Eigen::SpecializedType
CHOLMOD_SUPPORTS_DOUBLE_PRECISION_ONLY	Eigen/src/Core/util/StaticAssert.h	/^        CHOLMOD_SUPPORTS_DOUBLE_PRECISION_ONLY$/;"	e	enum:Eigen::internal::static_assertion::__anon132
CJMADD	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1672;"	d
CJMADD	Eigen/src/Core/products/GeneralBlockPanelKernel.h	311;"	d
CJMADD	Eigen/src/Core/products/GeneralBlockPanelKernel.h	336;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/aleksa\/Dropbox\/master\/code\/build$/;"	m
CMAKE_BINARY_DIR	cmake-build-debug/Makefile	/^CMAKE_BINARY_DIR = \/home\/aleksa\/Dropbox\/master\/code\/cmake-build-debug$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	cmake-build-debug/Makefile	/^CMAKE_COMMAND = \/home\/aleksa\/opt\/clion\/bin\/cmake\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/aleksa\/Dropbox\/master\/code$/;"	m
CMAKE_SOURCE_DIR	cmake-build-debug/Makefile	/^CMAKE_SOURCE_DIR = \/home\/aleksa\/Dropbox\/master\/code$/;"	m
COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED	Eigen/src/Core/util/StaticAssert.h	/^        COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
COLAMDOrdering	Eigen/src/OrderingMethods/Ordering.h	/^class COLAMDOrdering$/;"	c	namespace:Eigen
COLAMD_ASSERT	Eigen/src/OrderingMethods/Eigen_Colamd.h	239;"	d
COLAMD_DEBUG0	Eigen/src/OrderingMethods/Eigen_Colamd.h	233;"	d
COLAMD_DEBUG1	Eigen/src/OrderingMethods/Eigen_Colamd.h	234;"	d
COLAMD_DEBUG2	Eigen/src/OrderingMethods/Eigen_Colamd.h	235;"	d
COLAMD_DEBUG3	Eigen/src/OrderingMethods/Eigen_Colamd.h	236;"	d
COLAMD_DEBUG4	Eigen/src/OrderingMethods/Eigen_Colamd.h	237;"	d
COLAMD_DEFRAG_COUNT	Eigen/src/OrderingMethods/Eigen_Colamd.h	72;"	d
COLAMD_DENSE_COL	Eigen/src/OrderingMethods/Eigen_Colamd.h	69;"	d
COLAMD_DENSE_ROW	Eigen/src/OrderingMethods/Eigen_Colamd.h	66;"	d
COLAMD_EMPTY	Eigen/src/OrderingMethods/Eigen_Colamd.h	105;"	d
COLAMD_ERROR_A_not_present	Eigen/src/OrderingMethods/Eigen_Colamd.h	85;"	d
COLAMD_ERROR_A_too_small	Eigen/src/OrderingMethods/Eigen_Colamd.h	91;"	d
COLAMD_ERROR_col_length_negative	Eigen/src/OrderingMethods/Eigen_Colamd.h	92;"	d
COLAMD_ERROR_internal_error	Eigen/src/OrderingMethods/Eigen_Colamd.h	95;"	d
COLAMD_ERROR_ncol_negative	Eigen/src/OrderingMethods/Eigen_Colamd.h	88;"	d
COLAMD_ERROR_nnz_negative	Eigen/src/OrderingMethods/Eigen_Colamd.h	89;"	d
COLAMD_ERROR_nrow_negative	Eigen/src/OrderingMethods/Eigen_Colamd.h	87;"	d
COLAMD_ERROR_out_of_memory	Eigen/src/OrderingMethods/Eigen_Colamd.h	94;"	d
COLAMD_ERROR_p0_nonzero	Eigen/src/OrderingMethods/Eigen_Colamd.h	90;"	d
COLAMD_ERROR_p_not_present	Eigen/src/OrderingMethods/Eigen_Colamd.h	86;"	d
COLAMD_ERROR_row_index_out_of_bounds	Eigen/src/OrderingMethods/Eigen_Colamd.h	93;"	d
COLAMD_INFO1	Eigen/src/OrderingMethods/Eigen_Colamd.h	78;"	d
COLAMD_INFO2	Eigen/src/OrderingMethods/Eigen_Colamd.h	79;"	d
COLAMD_INFO3	Eigen/src/OrderingMethods/Eigen_Colamd.h	80;"	d
COLAMD_KNOBS	Eigen/src/OrderingMethods/Eigen_Colamd.h	60;"	d
COLAMD_NDEBUG	Eigen/src/OrderingMethods/Eigen_Colamd.h	53;"	d
COLAMD_OK	Eigen/src/OrderingMethods/Eigen_Colamd.h	83;"	d
COLAMD_OK_BUT_JUMBLED	Eigen/src/OrderingMethods/Eigen_Colamd.h	84;"	d
COLAMD_STATS	Eigen/src/OrderingMethods/Eigen_Colamd.h	63;"	d
COLAMD_STATUS	Eigen/src/OrderingMethods/Eigen_Colamd.h	75;"	d
COL_IS_ALIVE	Eigen/src/OrderingMethods/Eigen_Colamd.h	120;"	d
COL_IS_DEAD	Eigen/src/OrderingMethods/Eigen_Colamd.h	119;"	d
COL_IS_DEAD_PRINCIPAL	Eigen/src/OrderingMethods/Eigen_Colamd.h	121;"	d
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONFIG_H	config.h	2;"	d
CORE_METHODS_H	methods/core_methods.hpp	2;"	d
C_DIALECT	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
C_DIALECT	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
C_DIALECT	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	527;"	d	file:
C_DIALECT	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	529;"	d	file:
C_DIALECT	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	527;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	529;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
CacheSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  CacheSizes(): m_l1(-1),m_l2(-1),m_l3(-1) {$/;"	f	struct:Eigen::internal::CacheSizes
CacheSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct CacheSizes {$/;"	s	namespace:Eigen::internal
CanVectorizeInner	Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeInner =    SameType$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
CanVectorizeLhs	Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeLhs = (!LhsRowMajor) && (LhsFlags & PacketAccessBit) && (RowsAtCompileTime!=1),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
CanVectorizeRhs	Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeRhs = bool(RhsRowMajor) && (RhsFlags & PacketAccessBit) && (ColsAtCompileTime!=1),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
CastXpr	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	s
CeilReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_ceil_op<Scalar>, const Derived> CeilReturnType;$/;"	t
CholMatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef MatrixType CholMatrixType;$/;"	t	class:Eigen::CholmodBase
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLLT
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholesky
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialLDLT
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>            CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholMatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>        CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholmodAuto	Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodBase	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase()$/;"	f	class:Eigen::CholmodBase
CholmodBase	Eigen/src/CholmodSupport/CholmodSupport.h	/^    explicit CholmodBase(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
CholmodBase	Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
CholmodDecomposition	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition() : Base() { init(); }$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodDecomposition : public CholmodBase<_MatrixType, _UpLo, CholmodDecomposition<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodLDLt	Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodMode	Eigen/src/CholmodSupport/CholmodSupport.h	/^enum CholmodMode {$/;"	g	namespace:Eigen
CholmodSimplicialLDLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLDLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLt	Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodSupernodalLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSupernodalLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSupernodalLLt	Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
ClassicalAdaptiveScheme	methods/adaptive_methods.hpp	/^    ClassicalAdaptiveScheme(Model&m, Real h0, StepIntegrator& base_integrator, Real tol):NumericalMethod(m,h0,base_integrator),tol(tol)$/;"	f	class:ClassicalAdaptiveScheme
ClassicalAdaptiveScheme	methods/adaptive_methods.hpp	/^class ClassicalAdaptiveScheme:public NumericalMethod$/;"	c
ClassicalNumericalMethod	core_methods.hpp	/^    ClassicalNumericalMethod(Model&m, double h0, StepIntegrator& base_integrator):NumericalMethod(m,h0,base_integrator){};$/;"	f	class:ClassicalNumericalMethod
ClassicalNumericalMethod	core_methods.hpp	/^class ClassicalNumericalMethod:public NumericalMethod$/;"	c
ClassicalNumericalMethod	methods/core_methods.hpp	/^    ClassicalNumericalMethod(Model&m, Real h0, StepIntegrator& base_integrator):FixedTimeSteppingMethod(m,h0,base_integrator){};$/;"	f	class:ClassicalNumericalMethod
ClassicalNumericalMethod	methods/core_methods.hpp	/^class ClassicalNumericalMethod:public FixedTimeSteppingMethod$/;"	c
CodType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef CompleteOrthogonalDecomposition<MatrixType> CodType;$/;"	t	struct:Eigen::internal::Assignment
CoeffBasedProductMode	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
CoeffReadCost	Eigen/src/Core/BandMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
CoeffReadCost	Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon234
CoeffReadCost	Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = internal::traits<_CoefficientsType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon235
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon311
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon304
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = TraversalSize==Dynamic ? HugeCost$/;"	e	enum:Eigen::internal::evaluator::__anon320
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<Arg1>::CoeffReadCost + evaluator<Arg2>::CoeffReadCost + evaluator<Arg3>::CoeffReadCost + functor_traits<TernaryOp>::Cost,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon307
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon310
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,    $/;"	e	enum:Eigen::internal::unary_evaluator::__anon305
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon314
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon323
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon321
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgTypeNestedCleaned>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon318
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ConditionMatrixType>::CoeffReadCost$/;"	e	enum:Eigen::internal::evaluator::__anon316
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
CoeffReadCost	Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = internal::functor_traits<NullaryOp>::Cost,$/;"	e	enum:Eigen::internal::evaluator::__anon306
CoeffReadCost	Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = InnerSize==0 ? NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
CoeffReadCost	Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::MulCost + evaluator<MatrixType>::CoeffReadCost + evaluator<DiagonalType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
CoeffReadCost	Eigen/src/Core/Redux.h	/^    CoeffReadCost = evaluator<XprType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
CoeffReadCost	Eigen/src/Core/Solve.h	/^    CoeffReadCost = HugeCost$/;"	e	enum:Eigen::internal::traits::__anon428
CoeffReadCost	Eigen/src/Core/Visitor.h	/^    CoeffReadCost = internal::evaluator<XprType>::CoeffReadCost$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon248
CoeffReadCost	Eigen/src/LU/PartialPivLU.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon641
CoeffReadCost	Eigen/src/SparseCore/SparseBlock.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
CoeffReadCost	Eigen/src/SparseCore/SparseCompressedBase.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon57
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon29
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon31
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon33
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon34
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon36
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon38
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon15
CoeffReadCost	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<ViewOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon16
CoeffReadCost	Eigen/src/SparseCore/SparseDenseProduct.h	/^    CoeffReadCost = HugeCost$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon41
CoeffReadCost	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon60
CoeffReadCost	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon59
CoeffReadCost	Eigen/src/SparseCore/SparseTranspose.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon64
CoeffReadCost	Eigen/src/SparseCore/SparseTriangularView.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon56
CoeffReadCost	Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<_Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon14
CoeffReadCost	Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon26
CoeffReadCost	Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon28
CoeffReturnType	Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::ArrayBase
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::binary_evaluator
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::ternary_evaluator
CoeffReturnType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::unary_evaluator
CoeffReturnType	Eigen/src/Core/DenseBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::DenseBase
CoeffReturnType	Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type CoeffReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
CoeffReturnType	Eigen/src/Core/MapBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MapBase
CoeffReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MatrixBase
CoeffReturnType	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::product_evaluator
CoeffReturnType	Eigen/src/Core/Redux.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
CoeffReturnType	Eigen/src/Core/SolverBase.h	/^    typedef Scalar CoeffReturnType;$/;"	t	class:Eigen::SolverBase
CoeffReturnType	Eigen/src/Core/Visitor.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::visitor_evaluator
CoeffReturnType	Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename DenseCoeffsBase<Derived,ReadOnlyAccessors>::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::conditional<_HasDirectAccess, const Scalar&, Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::SparseMatrixBase
CoeffVectorType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::HessenbergDecomposition
CoeffVectorType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::Tridiagonalization
CoeffVectorType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::CoeffVectorType CoeffVectorType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Coefficients	Eigen/src/Geometry/Hyperplane.h	/^                        : Index(AmbientDimAtCompileTime)+1,1,Options> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	Eigen/src/Geometry/Quaternion.h	/^    typedef Map<Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	Eigen/src/Geometry/Quaternion.h	/^    typedef Map<const Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	Eigen/src/Geometry/Quaternion.h	/^    typedef typename internal::traits<Map>::Coefficients Coefficients;$/;"	t	class:Eigen::Map
Coefficients	Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<_Scalar,4,1,_Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Coefficients Coefficients;$/;"	t	class:Eigen::QuaternionBase
Coefficients	Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Quaternion>::Coefficients Coefficients;$/;"	t	class:Eigen::Quaternion
CoefficientsType	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrix
CoefficientsType	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixWrapper
CoefficientsType	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixBase
CoefficientsType	Eigen/src/Core/BandMatrix.h	/^  typedef Matrix<Scalar,DataRowsAtCompileTime,ColsAtCompileTime,Options&RowMajor?RowMajor:ColMajor> CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoefficientsType	Eigen/src/Core/BandMatrix.h	/^  typedef _CoefficientsType CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoherentAccessPattern	Eigen/src/SparseCore/SparseUtil.h	/^const int CoherentAccessPattern     = 0x1;$/;"	m	namespace:Eigen
ColMajor	Eigen/src/Core/util/Constants.h	/^  ColMajor = 0,$/;"	e	enum:Eigen::StorageOptions
ColPivHouseholderQR	Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR()$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	Eigen/src/QR/ColPivHouseholderQR.h	/^    explicit ColPivHouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	Eigen/src/QR/ColPivHouseholderQR.h	/^    explicit ColPivHouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> class ColPivHouseholderQR$/;"	c	namespace:Eigen
ColPivHouseholderQRPreconditioner	Eigen/src/Core/util/Constants.h	/^  ColPivHouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
ColSpMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor> ColSpMatrix;$/;"	t	class:Eigen::PastixBase
ColSpMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLDLT
ColSpMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLLT
ColSpMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLU
ColType	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColType;$/;"	t	class:Eigen::JacobiSVD
ColVectorType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
ColVectorType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
ColXpr	Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ColXpr ColXpr;$/;"	t	class:Eigen::MatrixBase
ColXpr	Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ColXpr;$/;"	t
Colamd_Row	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct Colamd_Row$/;"	s	namespace:internal
Cols	Eigen/src/Core/GeneralProduct.h	/^    Cols    = traits<_Rhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
Cols	Eigen/src/Geometry/Homogeneous.h	/^    Cols = Rhs::ColsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon99
ColsAtCompileTime	Eigen/src/Cholesky/LDLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon667
ColsAtCompileTime	Eigen/src/Cholesky/LLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon665
ColsAtCompileTime	Eigen/src/CholmodSupport/CholmodSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::CholmodBase::__anon128
ColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
ColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon234
ColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon235
ColsAtCompileTime	Eigen/src/Core/Block.h	/^    ColsAtCompileTime = MatrixCols == 0 ? 0 : BlockCols,$/;"	e	enum:Eigen::internal::traits::__anon245
ColsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = PlainObjectType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon304
ColsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = XprType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon311
ColsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon314
ColsAtCompileTime	Eigen/src/Core/CwiseBinaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon226
ColsAtCompileTime	Eigen/src/Core/CwiseTernaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon273
ColsAtCompileTime	Eigen/src/Core/DenseBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
ColsAtCompileTime	Eigen/src/Core/Diagonal.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon271
ColsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^      ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon457
ColsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^    ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon459
ColsAtCompileTime	Eigen/src/Core/MapBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon431
ColsAtCompileTime	Eigen/src/Core/Matrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon451
ColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = PermTraits::ColsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon244
ColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon242
ColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^    ColsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon243
ColsAtCompileTime	Eigen/src/Core/Product.h	/^    ColsAtCompileTime    = RhsTraits::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon423
ColsAtCompileTime	Eigen/src/Core/ProductEvaluators.h	/^    ColsAtCompileTime = RhsNestedCleaned::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon443
ColsAtCompileTime	Eigen/src/Core/Replicate.h	/^    ColsAtCompileTime = ColFactor==Dynamic || int(MatrixType::ColsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon270
ColsAtCompileTime	Eigen/src/Core/Reverse.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon453
ColsAtCompileTime	Eigen/src/Core/Select.h	/^    ColsAtCompileTime = ConditionMatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon131
ColsAtCompileTime	Eigen/src/Core/SolverBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
ColsAtCompileTime	Eigen/src/Core/Transpose.h	/^    ColsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon438
ColsAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
ColsAtCompileTime	Eigen/src/Core/VectorwiseOp.h	/^    ColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon432
ColsAtCompileTime	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon634
ColsAtCompileTime	Eigen/src/Eigenvalues/ComplexSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon640
ColsAtCompileTime	Eigen/src/Eigenvalues/EigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon633
ColsAtCompileTime	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon635
ColsAtCompileTime	Eigen/src/Eigenvalues/RealQZ.h	/^        ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon632
ColsAtCompileTime	Eigen/src/Eigenvalues/RealSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon636
ColsAtCompileTime	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon631
ColsAtCompileTime	Eigen/src/Geometry/Homogeneous.h	/^    ColsAtCompileTime = Direction==Horizontal ? ColsPlusOne : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon96
ColsAtCompileTime	Eigen/src/Geometry/Transform.h	/^    ColsAtCompileTime = Dim1,$/;"	e	enum:Eigen::internal::traits::__anon87
ColsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^      ColsAtCompileTime = internal::traits<HouseholderSequence>::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon126
ColsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^    ColsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon125
ColsAtCompileTime	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::DiagonalPreconditioner::__anon656
ColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::IncompleteCholesky::__anon663
ColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::IncompleteLUT::__anon664
ColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::IterativeSolverBase::__anon661
ColsAtCompileTime	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::PastixBase::__anon76
ColsAtCompileTime	Eigen/src/PardisoSupport/PardisoSupport.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::PardisoImpl::__anon115
ColsAtCompileTime	Eigen/src/QR/ColPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon670
ColsAtCompileTime	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon674
ColsAtCompileTime	Eigen/src/QR/FullPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon672
ColsAtCompileTime	Eigen/src/QR/HouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon668
ColsAtCompileTime	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SPQR::__anon114
ColsAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon629
ColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon628
ColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon625
ColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon626
ColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon627
ColsAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon621
ColsAtCompileTime	Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon630
ColsAtCompileTime	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon66
ColsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon43
ColsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon42
ColsAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
ColsAtCompileTime	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSelfAdjointView>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon39
ColsAtCompileTime	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon40
ColsAtCompileTime	Eigen/src/SparseCore/SparseVector.h	/^    ColsAtCompileTime = IsColVector ? 1 : Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon10
ColsAtCompileTime	Eigen/src/SparseLU/SparseLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseLU::__anon120
ColsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^      ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon73
ColsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseQR::__anon74
ColsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^    ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon75
ColsAtCompileTime	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SuperLUBase::__anon113
ColsAtCompileTime	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::UmfPackLU::__anon1
ColsAtCompileTimeMinusOne	Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTimeMinusOne = internal::decrement_size<ColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon630
ColsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ColsBlockXpr;$/;"	t
ColsPlusOne	Eigen/src/Geometry/Homogeneous.h	/^    ColsPlusOne = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon96
ColumnVectorType	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::EigenSolver
ColumnVectorType	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealQZ
ColumnVectorType	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealSchur
ColwiseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Vertical> ColwiseReturnType;$/;"	t	class:Eigen::DenseBase
CommaInitializer	Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(const CommaInitializer& o)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	Eigen/src/Core/CommaInitializer.h	/^struct CommaInitializer$/;"	s	namespace:Eigen
ComparisonName	Eigen/src/Core/util/Constants.h	/^enum ComparisonName {$/;"	g	namespace:Eigen::internal
CompleteOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition() : m_cpqr(), m_zCoeffs(), m_temp() {}$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition(Index rows, Index cols)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  explicit CompleteOrthogonalDecomposition(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  explicit CompleteOrthogonalDecomposition(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^class CompleteOrthogonalDecomposition {$/;"	c	namespace:Eigen
CompleteUnrolling	Eigen/src/Core/util/Constants.h	/^  CompleteUnrolling$/;"	e	enum:Eigen::UnrollingType
ComplexEigenSolver	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver()$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(Index size)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(const EigenBase<InputType>& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^template<typename _MatrixType> class ComplexEigenSolver$/;"	c	namespace:Eigen
ComplexMatrixType	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> ComplexMatrixType;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	struct:Eigen::internal::stem_function
ComplexScalar	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexEigenSolver
ComplexScalar	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::EigenSolver
ComplexScalar	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
ComplexScalar	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealQZ
ComplexScalar	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealSchur
ComplexSchur	Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(const EigenBase<InputType>& matrix, bool computeU = true)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	Eigen/src/Eigenvalues/ComplexSchur.h	/^template<typename _MatrixType> class ComplexSchur$/;"	c	namespace:Eigen
ComplexVectorType	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ComplexVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
CompressedAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int CompressedAccessBit = 0x400;$/;"	m	namespace:Eigen
CompressedStorage	Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	Eigen/src/SparseCore/CompressedStorage.h	/^    explicit CompressedStorage(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	Eigen/src/SparseCore/CompressedStorage.h	/^class CompressedStorage$/;"	c	namespace:Eigen::internal
ComputationInfo	Eigen/src/Core/util/Constants.h	/^enum ComputationInfo {$/;"	g	namespace:Eigen
ComputeEigenvectors	Eigen/src/Core/util/Constants.h	/^  ComputeEigenvectors = 0x80,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullU	Eigen/src/Core/util/Constants.h	/^  ComputeFullU        = 0x04,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullV	Eigen/src/Core/util/Constants.h	/^  ComputeFullV        = 0x10,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinU	Eigen/src/Core/util/Constants.h	/^  ComputeThinU        = 0x08,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinV	Eigen/src/Core/util/Constants.h	/^  ComputeThinV        = 0x20,$/;"	e	enum:Eigen::DecompositionOptions
ConditionMatrixNested	Eigen/src/Core/Select.h	/^  typedef typename ConditionMatrixType::Nested ConditionMatrixNested;$/;"	t	struct:Eigen::internal::traits
Conj	Eigen/src/Core/functors/BinaryFunctors.h	/^    Conj = NumTraits<LhsScalar>::IsComplex$/;"	e	enum:Eigen::internal::scalar_conj_product_op::__anon362
ConjLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
ConjLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
ConjLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
ConjLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
ConjRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
ConjRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
ConjRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
ConjRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
Conjugate	Eigen/src/Core/BandMatrix.h	/^        Conjugate = ReturnOpposite && NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon233
ConjugateGradient	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient() : Base() {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  explicit ConjugateGradient(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^class ConjugateGradient : public IterativeSolverBase<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
ConjugateReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const MatrixConjugateReturnType,Mode> ConjugateReturnType;$/;"	t	class:Eigen::SelfAdjointView
ConjugateReturnType	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const MatrixConjugateReturnType,Mode> ConjugateReturnType;$/;"	t	class:Eigen::TriangularView
ConjugateReturnType	Eigen/src/Householder/HouseholderSequence.h	/^    > ConjugateReturnType;$/;"	t	class:Eigen::HouseholderSequence
ConjugateReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type ConjugateReturnType;$/;"	t
ConradNumericalMethod	core_methods.hpp	/^    ConradNumericalMethod(Model&m, double h0, StepIntegrator& base_integrator, RandomVariable& step_perturbator):NumericalMethod(m,h0,base_integrator), step_perturbator(step_perturbator){};$/;"	f	class:ConradNumericalMethod
ConradNumericalMethod	core_methods.hpp	/^class ConradNumericalMethod:public NumericalMethod$/;"	c
ConradNumericalMethod	methods/core_methods.hpp	/^    ConradNumericalMethod(Model&m, Real h0, StepIntegrator& base_integrator, RandomVariable& step_perturbator):FixedTimeSteppingMethod(m,h0,base_integrator), step_perturbator(step_perturbator){};$/;"	f	class:ConradNumericalMethod
ConradNumericalMethod	methods/core_methods.hpp	/^class ConradNumericalMethod:public FixedTimeSteppingMethod $/;"	c
ConstAffinePart	Eigen/src/Geometry/Transform.h	/^                              const Block<const MatrixType,Dim,HDim> >::type ConstAffinePart;$/;"	t	class:Eigen::Transform
ConstAffinePart	Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::ConstAffinePart ConstAffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
ConstAlignedMapType	Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, AlignedMax> ConstAlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstBlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived> ConstBlockXpr;$/;"	t
ConstCholMatrixPtr	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	class:Eigen::SimplicialCholeskyBase
ConstCholMatrixPtr	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstColXpr	Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ConstColXpr;$/;"	t
ConstColsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ConstColsBlockXpr;$/;"	t
ConstColwiseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Vertical> ConstColwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstDiagonalDynamicIndexReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived,DynamicIndex> >::type ConstDiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalIndexReturnType	Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
ConstDiagonalReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived> >::type ConstDiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalReturnType	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<const SparseMatrix> ConstDiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
ConstFixedBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct ConstFixedBlockXpr { typedef Block<const Derived,Rows,Cols> Type; };$/;"	s
ConstFixedSegmentReturnType	Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	s
ConstInnerVectorReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<const Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true> ConstInnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstInnerVectorsReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<const Derived,Dynamic,Dynamic,true> ConstInnerVectorsReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstLinearPart	Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstMapType	Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Unaligned> ConstMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstMatrixPtr	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef MatrixType const * ConstMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstMatrixType	Eigen/src/Geometry/Transform.h	/^  typedef const MatrixType ConstMatrixType;$/;"	t	class:Eigen::Transform
ConstNColsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
ConstNRowsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
ConstNormalReturnType	Eigen/src/Geometry/Hyperplane.h	/^  typedef const Block<const Coefficients,AmbientDimAtCompileTime,1> ConstNormalReturnType;$/;"	t	class:Eigen::Hyperplane
ConstReverseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef const Reverse<const Derived, BothDirections> ConstReverseReturnType;$/;"	t	class:Eigen::DenseBase
ConstReverseReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef Reverse<const ExpressionType, Direction> ConstReverseReturnType;$/;"	t	class:Eigen::VectorwiseOp
ConstRowXpr	Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowXpr;$/;"	t
ConstRowsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowsBlockXpr;$/;"	t
ConstRowwiseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Horizontal> ConstRowwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstSegmentReturnType	Eigen/src/plugins/BlockMethods.h	/^typedef const VectorBlock<const Derived> ConstSegmentReturnType;$/;"	t
ConstSelfAdjointViewReturnType	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
ConstSelfAdjointViewReturnType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<int UpLo> struct ConstSelfAdjointViewReturnType {$/;"	s	class:Eigen::internal::generic_matrix_wrapper
ConstSelfAdjointViewReturnType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<int UpLo> struct ConstSelfAdjointViewReturnType$/;"	s	class:Eigen::internal::generic_matrix_wrapper
ConstSelfAdjointViewReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
ConstStartMinusOne	Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime==1 ? 1 : SizeMinusOne> ConstStartMinusOne;$/;"	t	class:Eigen::MatrixBase
ConstTranslationPart	Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTransposeReturnType	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::DenseBase
ConstTransposeReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ConstTransposeReturnType ConstTransposeReturnType;$/;"	t	class:Eigen::MatrixBase
ConstTransposeReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const typename MatrixType::ConstTransposeReturnType,TransposeMode> ConstTransposeReturnType;$/;"	t	class:Eigen::SelfAdjointView
ConstTransposeReturnType	Eigen/src/Core/SolverBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::SolverBase
ConstTransposeReturnType	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::ConstTransposeReturnType,TransposeMode> ConstTransposeReturnType;$/;"	t	class:Eigen::TriangularView
ConstTransposeReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstTriangularViewReturnType	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Constant	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index rows, Index cols, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index size, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
ConstantBlock	Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,1,Cols>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantBlock	Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,Rows,1>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantBlock	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::ConstantBlock ConstantBlock;$/;"	t	struct:Eigen::internal::product_evaluator
ConstantColumn	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::ConstColXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantColumn	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::ConstRowXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantReturnType	Eigen/src/Core/ArrayBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::ArrayBase
ConstantReturnType	Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::DenseBase
ConstantReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::MatrixBase
ConstantReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConvertToPacket2l	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static inline Packet2l ConvertToPacket2l(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
CornerType	Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	g	namespace:Eigen
CornerType	Eigen/src/Geometry/AlignedBox.h	/^  enum CornerType$/;"	g	class:Eigen::AlignedBox
CosReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cos_op<Scalar>, const Derived> CosReturnType;$/;"	t
CoshReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cosh_op<Scalar>, const Derived> CoshReturnType;$/;"	t
Cost	Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon426
Cost	Eigen/src/Core/Redux.h	/^    Cost = Derived::SizeAtCompileTime == Dynamic ? HugeCost$/;"	e	enum:Eigen::internal::redux_traits::__anon572
Cost	Eigen/src/Core/VectorwiseOp.h	/^  template<typename Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_lpnorm
Cost	Eigen/src/Core/VectorwiseOp.h	/^  template<typename _Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_redux
Cost	Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon249
Cost	Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon250
Cost	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon544
Cost	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon545
Cost	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon546
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = 3 * NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon419
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon415
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon416
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon417
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon418
Cost	Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon414
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon360
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon364
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon365
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon366
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon369
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon361
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = 3 * NumTraits<Scalar>::AddCost +$/;"	e	enum:Eigen::internal::functor_traits::__anon367
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<LhsScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon363
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon371
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon372
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon373
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = scalar_div_cost<result_type,PacketAccess>::value$/;"	e	enum:Eigen::internal::functor_traits::__anon370
Cost	Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon368
Cost	Eigen/src/Core/functors/NullaryFunctors.h	/^    Cost = 1,$/;"	e	enum:Eigen::internal::functor_traits::__anon400
Cost	Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 0 \/* as the constant value should be loaded in register only once for the whole expression *\/,$/;"	e	enum:Eigen::internal::functor_traits::__anon398
Cost	Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon399
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon392
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon393
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon394
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon395
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon390
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon391
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon379
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon380
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon381
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon382
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon383
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon384
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon385
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon386
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon387
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon376
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon377
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon378
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon374
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon375
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon397
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon396
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon388
Cost	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon389
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = $/;"	e	enum:Eigen::internal::functor_traits::__anon359
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = ( (EIGEN_FAST_MATH && is_same<Scalar,float>::value)$/;"	e	enum:Eigen::internal::functor_traits::__anon346
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = (sizeof(Scalar) == 8 ? 28$/;"	e	enum:Eigen::internal::functor_traits::__anon338
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon339
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon340
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon341
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon342
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon343
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon344
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon345
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon347
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon348
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon324
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon325
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? 5 * NumTraits<Scalar>::MulCost : NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon328
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? NumTraits<Scalar>::AddCost : 0,$/;"	e	enum:Eigen::internal::functor_traits::__anon327
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon352
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon353
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon354
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon355
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon356
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon357
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon358
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = functor_traits<scalar_log_op<Scalar> >::Cost \/\/ TODO measure cost of log1p$/;"	e	enum:Eigen::internal::functor_traits::__anon336
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost =$/;"	e	enum:Eigen::internal::functor_traits::__anon334
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost =$/;"	e	enum:Eigen::internal::functor_traits::__anon335
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon330
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon331
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon332
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon333
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon351
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon337
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon326
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon349
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon350
Cost	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon329
CostOpType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename MemberOp::template Cost<InputScalar,int(TraversalSize)> CostOpType;$/;"	t	struct:Eigen::internal::evaluator
CountReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef PartialReduxExpr<ExpressionType, internal::member_count<Index>, Direction> CountReturnType;$/;"	t	class:Eigen::VectorwiseOp
CrossReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::PlainObject CrossReturnType;$/;"	t	class:Eigen::VectorwiseOp
CubeReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cube_op<Scalar>, const Derived> CubeReturnType;$/;"	t
CwiseAbs2ReturnType	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> CwiseAbs2ReturnType;$/;"	t
CwiseAbsReturnType	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> CwiseAbsReturnType;$/;"	t
CwiseBinaryOp	Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::CwiseBinaryOp
CwiseBinaryOp	Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOp : $/;"	c	namespace:Eigen
CwiseBinaryOpImpl	Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOpImpl$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CwiseBinaryOpImpl()$/;"	f	class:Eigen::CwiseBinaryOpImpl
CwiseBinaryOpImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>$/;"	c	namespace:Eigen
CwiseInverseReturnType	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> CwiseInverseReturnType;$/;"	t
CwiseNullaryOp	Eigen/src/Core/CwiseNullaryOp.h	/^    CwiseNullaryOp(Index rows, Index cols, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::CwiseNullaryOp
CwiseNullaryOp	Eigen/src/Core/CwiseNullaryOp.h	/^class CwiseNullaryOp : public internal::dense_xpr_base< CwiseNullaryOp<NullaryOp, PlainObjectType> >::type, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseProductDenseReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<typename OtherDerived> struct CwiseProductDenseReturnType {$/;"	s	class:Eigen::SparseMatrixBase
CwiseScalarEqualReturnType	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^typedef CwiseBinaryOp<internal::scalar_cmp_op<Scalar,Scalar,internal::cmp_EQ>, const Derived, const ConstantReturnType> CwiseScalarEqualReturnType;$/;"	t
CwiseSignReturnType	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sign_op<Scalar>, const Derived> CwiseSignReturnType;$/;"	t
CwiseSqrtReturnType	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> CwiseSqrtReturnType;$/;"	t
CwiseTernaryOp	Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE CwiseTernaryOp(const Arg1& a1, const Arg2& a2,$/;"	f	class:Eigen::CwiseTernaryOp
CwiseTernaryOp	Eigen/src/Core/CwiseTernaryOp.h	/^class CwiseTernaryOp : public CwiseTernaryOpImpl<$/;"	c	namespace:Eigen
CwiseTernaryOpImpl	Eigen/src/Core/CwiseTernaryOp.h	/^class CwiseTernaryOpImpl$/;"	c	namespace:Eigen
CwiseUnaryOp	Eigen/src/Core/CwiseUnaryOp.h	/^    explicit CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::CwiseUnaryOp
CwiseUnaryOp	Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOp : public CwiseUnaryOpImpl<UnaryOp, XprType, typename internal::traits<XprType>::StorageKind>, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOpImpl$/;"	c	namespace:Eigen
CwiseUnaryView	Eigen/src/Core/CwiseUnaryView.h	/^    explicit inline CwiseUnaryView(MatrixType& mat, const ViewOp& func = ViewOp())$/;"	f	class:Eigen::CwiseUnaryView
CwiseUnaryView	Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryView : public CwiseUnaryViewImpl<ViewOp, MatrixType, typename internal::traits<MatrixType>::StorageKind>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Dense>$/;"	c	namespace:Eigen
DEAD	Eigen/src/OrderingMethods/Eigen_Colamd.h	109;"	d
DEAD_NON_PRINCIPAL	Eigen/src/OrderingMethods/Eigen_Colamd.h	113;"	d
DEAD_PRINCIPAL	Eigen/src/OrderingMethods/Eigen_Colamd.h	112;"	d
DEC	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
DEC	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
DEC	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
DEC	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
DECL_GSISX	Eigen/src/SuperLUSupport/SuperLUSupport.h	76;"	d
DECL_GSSVX	Eigen/src/SuperLUSupport/SuperLUSupport.h	16;"	d
DST_CHAN	Eigen/src/Core/arch/AltiVec/PacketMath.h	65;"	d
DST_CTRL	Eigen/src/Core/arch/AltiVec/PacketMath.h	66;"	d
DataRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic))$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon232
DataRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon234
DataRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon235
DecompositionOptions	Eigen/src/Core/util/Constants.h	/^enum DecompositionOptions {$/;"	g	namespace:Eigen
DecompositionType	Eigen/src/misc/Image.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::image_retval_base
DecompositionType	Eigen/src/misc/Kernel.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::kernel_retval_base
Default	Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	e	enum:Eigen::Default_t
DefaultProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
DefaultTraversal	Eigen/src/Core/util/Constants.h	/^  DefaultTraversal,$/;"	e	enum:Eigen::TraversalType
Default_t	Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	g	namespace:Eigen
Defined	Eigen/src/Core/util/Meta.h	/^  enum { Defined = 0 };$/;"	e	enum:Eigen::scalar_product_traits::__anon219
Dense	Eigen/src/Core/util/Constants.h	/^struct Dense {};$/;"	s	namespace:Eigen
Dense2Dense	Eigen/src/Core/AssignEvaluator.h	/^struct Dense2Dense {};$/;"	s	namespace:Eigen::internal
Dense2Triangular	Eigen/src/Core/TriangularMatrix.h	/^struct Dense2Triangular         {};$/;"	s	namespace:Eigen::internal
DenseBase	Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC DenseBase()$/;"	f	class:Eigen::DenseBase
DenseBase	Eigen/src/Core/DenseBase.h	/^template<typename Derived> class DenseBase$/;"	c	namespace:Eigen
DenseCoeffsBase	Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectWriteAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>$/;"	c	namespace:Eigen
DenseIndex	Eigen/src/Core/util/Meta.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;$/;"	t	namespace:Eigen
DenseMatrix	Eigen/src/SparseQR/SparseQR.h	/^  typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
DenseMatrixType	Eigen/src/Core/BandMatrix.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::internal::BandMatrixBase
DenseMatrixType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime, 0, MaxRowsAtCompileTime, MaxColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::DiagonalBase
DenseMatrixType	Eigen/src/Core/PermutationMatrix.h	/^            DenseMatrixType;$/;"	t	class:Eigen::PermutationBase
DenseMatrixType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::InverseImpl
DenseMatrixType	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	class:Eigen::TriangularViewImpl
DenseMatrixType	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::FullMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularBase
DenseMatrixType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
DenseShape	Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	s	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    DenseStorage(const DenseStorage& other) : m_data(other.m_data) {$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() {$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(rows)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) {$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index cols) : m_rows(rows), m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index) : m_rows(rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index, Index cols) : m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage&) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Cols, int _Options> class DenseStorage<T, Size, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Options> class DenseStorage<T, Size, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Options> class DenseStorage<T, Size, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, 0, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, 0, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, 0, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::DiagonalBase
DenseType	Eigen/src/Core/PlainObjectBase.h	/^    typedef Derived DenseType;$/;"	t	class:Eigen::PlainObjectBase
DenseType	Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::TriangularBase
Depth	Eigen/src/Core/GeneralProduct.h	/^    Depth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
Derived	Eigen/src/Core/CwiseUnaryView.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Derived	Eigen/src/Core/Product.h	/^    typedef Product<Lhs, Rhs, Option> Derived;$/;"	t	class:Eigen::ProductImpl
Derived	Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> Derived;$/;"	t	class:Eigen::SolveImpl
Derived	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
DerivedAlignment	Eigen/src/Core/Ref.h	/^      DerivedAlignment = int(evaluator<Derived>::Alignment),$/;"	e	enum:Eigen::internal::traits::match::__anon456
DiagCoeffNested	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                                                                       : SparseXprType::ColsAtCompileTime>::type DiagCoeffNested;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
DiagFlags	Eigen/src/Core/ProductEvaluators.h	/^    DiagFlags = evaluator<DiagonalType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
DiagIndex	Eigen/src/Core/Diagonal.h	/^    enum { DiagIndex = _DiagIndex };$/;"	e	enum:Eigen::Diagonal::__anon272
DiagIndex	Eigen/src/Core/SolveTriangular.h	/^    DiagIndex  = IsLower ? LoopIndex : Size - LoopIndex - 1,$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon230
DiagSizeAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime, ColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon629
DiagSizeAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon628
DiagSizeAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon621
DiagVectorType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1> DiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Diagonal	Eigen/src/Core/Diagonal.h	/^    explicit inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index) {}$/;"	f	class:Eigen::Diagonal
Diagonal	Eigen/src/Core/Diagonal.h	/^template<typename MatrixType, int _DiagIndex> class Diagonal$/;"	c	namespace:Eigen
Diagonal2Dense	Eigen/src/Core/DiagonalMatrix.h	/^struct Diagonal2Dense {};$/;"	s	namespace:Eigen::internal
Diagonal2Sparse	Eigen/src/SparseCore/SparseAssign.h	/^struct Diagonal2Sparse {};$/;"	s	namespace:Eigen::internal
DiagonalBase	Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
DiagonalDynamicIndexReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived,DynamicIndex> DiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalIndexReturnType	Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
DiagonalIntReturnType	Eigen/src/Core/BandMatrix.h	/^    template<int Index> struct DiagonalIntReturnType {$/;"	s	class:Eigen::internal::BandMatrixBase
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(Index dim) : m_diagonal(dim) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(const MatrixBase<OtherDerived>& other) : m_diagonal(other)$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix() {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalBase<OtherDerived>& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalMatrix& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y) : m_diagonal(x,y) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y, const Scalar& z) : m_diagonal(x,y,z) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalMatrix$/;"	c	namespace:Eigen
DiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner() : m_isInitialized(false) {}$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit DiagonalPreconditioner(const MatType& mat) : m_invdiag(mat.cols())$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class DiagonalPreconditioner$/;"	c	namespace:Eigen
DiagonalReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived> DiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type DiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalReturnType	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<SparseMatrix> DiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
DiagonalShape	Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	s	namespace:Eigen
DiagonalSize	Eigen/src/Core/BandMatrix.h	/^        DiagonalSize = (RowsAtCompileTime==Dynamic || ColsAtCompileTime==Dynamic)$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon233
DiagonalType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type DiagonalType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalVectorType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalWrapper
DiagonalVectorType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalBase
DiagonalVectorType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalMatrix
DiagonalVectorType	Eigen/src/Core/DiagonalMatrix.h	/^  typedef Matrix<_Scalar,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1> DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalVectorType	Eigen/src/Core/DiagonalMatrix.h	/^  typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalWrapper	Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalWrapper(DiagonalVectorType& a_diagonal) : m_diagonal(a_diagonal) {}$/;"	f	class:Eigen::DiagonalWrapper
DiagonalWrapper	Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalWrapper$/;"	c	namespace:Eigen
DigammaReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_digamma_op<Scalar>, const Derived> DigammaReturnType;$/;"	t
Dim	Eigen/src/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon79
Dim	Eigen/src/Geometry/Homogeneous.h	/^    Dim  = Lhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon98
Dim	Eigen/src/Geometry/Homogeneous.h	/^    Dim = Rhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon99
Dim	Eigen/src/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon80
Dim	Eigen/src/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon101
Dim	Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon102
Dim	Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon103
Dim	Eigen/src/Geometry/Transform.h	/^    Dim = Transform::Dim,$/;"	e	enum:Eigen::internal::transform_traits::__anon86
Dim	Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon91
Dim	Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon92
Dim	Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon93
Dim	Eigen/src/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon88
Dim	Eigen/src/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon110
Dim1	Eigen/src/Geometry/Transform.h	/^    Dim1 = _Dim==Dynamic ? _Dim : _Dim + 1,$/;"	e	enum:Eigen::internal::traits::__anon87
DirSample	tools/random_variable.hpp	/^    DirSample(int ind,Real up_bound):index(ind),up_bound(up_bound){}$/;"	f	class:DirSample
DirSample	tools/random_variable.hpp	/^class DirSample$/;"	c
DirectAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int DirectAccessBit = 0x40;$/;"	m	namespace:Eigen
DirectAccessors	Eigen/src/Core/util/Constants.h	/^  DirectAccessors, $/;"	e	enum:Eigen::AccessorLevels
DirectLinearAccessType	Eigen/src/Core/util/BlasUtil.h	/^    >::type DirectLinearAccessType;$/;"	t	struct:Eigen::internal::blas_traits
DirectWriteAccessors	Eigen/src/Core/util/Constants.h	/^  DirectWriteAccessors$/;"	e	enum:Eigen::AccessorLevels
Direction	Eigen/src/Geometry/Homogeneous.h	/^    enum { Direction = _Direction };$/;"	e	enum:Eigen::Homogeneous::__anon97
DirectionType	Eigen/src/Core/util/Constants.h	/^enum DirectionType { $/;"	g	namespace:Eigen
DiscreteDirac	tools/random_variable.hpp	/^    DiscreteDirac(std::vector<Real> weights, std::vector<Real*> vals,int dim_val):vals(vals),dim_val(dim_val)$/;"	f	class:DiscreteDirac
DiscreteDirac	tools/random_variable.hpp	/^class DiscreteDirac:public RandomVariable$/;"	c
DontAlign	Eigen/src/Core/util/Constants.h	/^  DontAlign = 0x2$/;"	e	enum:Eigen::StorageOptions
DontAlignCols	Eigen/src/Core/IO.h	/^enum { DontAlignCols = 1 };$/;"	e	enum:Eigen::__anon224
DoublePacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct DoublePacket$/;"	s	namespace:Eigen::internal
DoublePacketType	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef DoublePacket<RealPacket> DoublePacketType;$/;"	t	class:Eigen::internal::gebp_traits
Dst	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluator::XprType Dst;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstAlignment	Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = DstEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon254
DstAlignment	Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = Kernel::AssignmentTraits::DstAlignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon263
DstAlignment	Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = Kernel::AssignmentTraits::DstAlignment$/;"	e	enum:Eigen::internal::dense_assignment_loop::__anon264
DstEvaluatorType	Eigen/src/Core/AssignEvaluator.h	/^  typedef DstEvaluatorTypeT DstEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstEvaluatorType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstEvaluatorType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstEvaluatorType	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
DstFlags	Eigen/src/Core/AssignEvaluator.h	/^    DstFlags = DstEvaluator::Flags,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon253
DstHasDirectAccess	Eigen/src/Core/AssignEvaluator.h	/^    DstHasDirectAccess = DstFlags & DirectAccessBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon254
DstHasDirectAccess	Eigen/src/Core/Assign_MKL.h	/^      DstHasDirectAccess = Dst::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
DstIndex	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex DstIndex;$/;"	t	struct:Eigen::internal::Assignment
DstIsRowMajor	Eigen/src/Core/AssignEvaluator.h	/^    DstIsRowMajor = DstFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
DstScalar	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Dst::Scalar DstScalar;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstXprType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstXprType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstXprType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorTypeT::XprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	Eigen/src/Core/Swap.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Dynamic	Eigen/src/Core/util/Constants.h	/^const int Dynamic = -1;$/;"	m	namespace:Eigen
DynamicIndex	Eigen/src/Core/util/Constants.h	/^const int DynamicIndex = 0xffffff;$/;"	m	namespace:Eigen
EIGEN_ALIGN16	Eigen/src/Core/util/Macros.h	751;"	d
EIGEN_ALIGN32	Eigen/src/Core/util/Macros.h	752;"	d
EIGEN_ALIGN64	Eigen/src/Core/util/Macros.h	753;"	d
EIGEN_ALIGN8	Eigen/src/Core/util/Macros.h	750;"	d
EIGEN_ALIGNEDBOX_H	Eigen/src/Geometry/AlignedBox.h	11;"	d
EIGEN_ALIGNED_ALLOCA	Eigen/src/Core/util/Memory.h	629;"	d
EIGEN_ALIGNED_ALLOCATOR	Eigen/src/StlSupport/details.h	15;"	d
EIGEN_ALIGN_MAX	Eigen/src/Core/util/Macros.h	755;"	d
EIGEN_ALIGN_TO_BOUNDARY	Eigen/src/Core/util/Macros.h	648;"	d
EIGEN_ALLANDANY_H	Eigen/src/Core/BooleanRedux.h	11;"	d
EIGEN_ALLOCA	Eigen/src/Core/util/Memory.h	547;"	d
EIGEN_ALLOCA	Eigen/src/Core/util/Memory.h	549;"	d
EIGEN_ALWAYS_INLINE	Eigen/src/Core/util/Macros.h	505;"	d
EIGEN_ALWAYS_INLINE	Eigen/src/Core/util/Macros.h	507;"	d
EIGEN_AMBIVECTOR_H	Eigen/src/SparseCore/AmbiVector.h	11;"	d
EIGEN_ANGLEAXIS_H	Eigen/src/Geometry/AngleAxis.h	11;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	Eigen/src/Core/arch/NEON/PacketMath.h	532;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	Eigen/src/Core/arch/NEON/PacketMath.h	534;"	d
EIGEN_ARCH_ARM	Eigen/src/Core/util/Macros.h	167;"	d
EIGEN_ARCH_ARM	Eigen/src/Core/util/Macros.h	169;"	d
EIGEN_ARCH_ARM64	Eigen/src/Core/util/Macros.h	174;"	d
EIGEN_ARCH_ARM64	Eigen/src/Core/util/Macros.h	176;"	d
EIGEN_ARCH_ARM_OR_ARM64	Eigen/src/Core/util/Macros.h	180;"	d
EIGEN_ARCH_ARM_OR_ARM64	Eigen/src/Core/util/Macros.h	182;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/AVX/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/AVX512/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/AltiVec/PacketMath.h	31;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/Default/Settings.h	46;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/NEON/PacketMath.h	33;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/SSE/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	Eigen/src/Core/arch/ZVector/PacketMath.h	32;"	d
EIGEN_ARCH_IA64	Eigen/src/Core/util/Macros.h	201;"	d
EIGEN_ARCH_IA64	Eigen/src/Core/util/Macros.h	203;"	d
EIGEN_ARCH_MIPS	Eigen/src/Core/util/Macros.h	187;"	d
EIGEN_ARCH_MIPS	Eigen/src/Core/util/Macros.h	189;"	d
EIGEN_ARCH_PPC	Eigen/src/Core/util/Macros.h	208;"	d
EIGEN_ARCH_PPC	Eigen/src/Core/util/Macros.h	210;"	d
EIGEN_ARCH_SPARC	Eigen/src/Core/util/Macros.h	194;"	d
EIGEN_ARCH_SPARC	Eigen/src/Core/util/Macros.h	196;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	Eigen/src/Core/util/Macros.h	720;"	d
EIGEN_ARCH_i386	Eigen/src/Core/util/Macros.h	154;"	d
EIGEN_ARCH_i386	Eigen/src/Core/util/Macros.h	156;"	d
EIGEN_ARCH_i386_OR_x86_64	Eigen/src/Core/util/Macros.h	160;"	d
EIGEN_ARCH_i386_OR_x86_64	Eigen/src/Core/util/Macros.h	162;"	d
EIGEN_ARCH_x86_64	Eigen/src/Core/util/Macros.h	148;"	d
EIGEN_ARCH_x86_64	Eigen/src/Core/util/Macros.h	150;"	d
EIGEN_ARM_PREFETCH	Eigen/src/Core/arch/NEON/PacketMath.h	58;"	d
EIGEN_ARM_PREFETCH	Eigen/src/Core/arch/NEON/PacketMath.h	60;"	d
EIGEN_ARM_PREFETCH	Eigen/src/Core/arch/NEON/PacketMath.h	62;"	d
EIGEN_ARM_PREFETCH	Eigen/src/Core/arch/NEON/PacketMath.h	64;"	d
EIGEN_ARM_PREFETCH	Eigen/src/Core/arch/NEON/PacketMath.h	67;"	d
EIGEN_ARRAYBASE_H	Eigen/src/Core/ArrayBase.h	11;"	d
EIGEN_ARRAYWRAPPER_H	Eigen/src/Core/ArrayWrapper.h	11;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_EIGEN_UNARY	Eigen/src/Core/GlobalFunctions.h	38;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	Eigen/src/Core/GlobalFunctions.h	16;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	Eigen/src/Core/GlobalFunctions.h	29;"	d
EIGEN_ARRAY_H	Eigen/src/Core/Array.h	11;"	d
EIGEN_ASM_COMMENT	Eigen/src/Core/util/Macros.h	620;"	d
EIGEN_ASSIGNMENT_FUNCTORS_H	Eigen/src/Core/functors/AssignmentFunctors.h	11;"	d
EIGEN_ASSIGN_EVALUATOR_H	Eigen/src/Core/AssignEvaluator.h	13;"	d
EIGEN_ASSIGN_H	Eigen/src/Core/Assign.h	13;"	d
EIGEN_ASSIGN_VML_H	Eigen/src/Core/Assign_MKL.h	35;"	d
EIGEN_BANDMATRIX_H	Eigen/src/Core/BandMatrix.h	11;"	d
EIGEN_BASIC_PRECONDITIONERS_H	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	11;"	d
EIGEN_BDCSVD_H	Eigen/src/SVD/BDCSVD.h	21;"	d
EIGEN_BICGSTAB_H	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	12;"	d
EIGEN_BIDIAGONALIZATION_H	Eigen/src/SVD/UpperBidiagonalization.h	12;"	d
EIGEN_BINARY_FUNCTORS_H	Eigen/src/Core/functors/BinaryFunctors.h	11;"	d
EIGEN_BLASUTIL_H	Eigen/src/Core/util/BlasUtil.h	11;"	d
EIGEN_BLAS_GEMV_SPECIALIZATION	Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	88;"	d
EIGEN_BLAS_GEMV_SPECIALIZE	Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	52;"	d
EIGEN_BLAS_HEMM_L	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	90;"	d
EIGEN_BLAS_HEMM_R	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	206;"	d
EIGEN_BLAS_RANKUPDATE_C	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	96;"	d
EIGEN_BLAS_RANKUPDATE_R	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	75;"	d
EIGEN_BLAS_RANKUPDATE_SPECIALIZE	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	47;"	d
EIGEN_BLAS_SYMM_L	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	43;"	d
EIGEN_BLAS_SYMM_R	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	160;"	d
EIGEN_BLAS_SYMV_SPECIALIZATION	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	74;"	d
EIGEN_BLAS_SYMV_SPECIALIZE	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	50;"	d
EIGEN_BLAS_TRMM_L	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	78;"	d
EIGEN_BLAS_TRMM_R	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	189;"	d
EIGEN_BLAS_TRMM_SPECIALIZE	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	53;"	d
EIGEN_BLAS_TRMV_CM	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	74;"	d
EIGEN_BLAS_TRMV_RM	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	156;"	d
EIGEN_BLAS_TRMV_SPECIALIZE	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	50;"	d
EIGEN_BLAS_TRSM_L	Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	41;"	d
EIGEN_BLAS_TRSM_R	Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	94;"	d
EIGEN_BLOCK_H	Eigen/src/Core/Block.h	12;"	d
EIGEN_BLOCK_HOUSEHOLDER_H	Eigen/src/Householder/BlockHouseholder.h	12;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/AVX/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/AVX512/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/AltiVec/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/Default/Settings.h	31;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/NEON/PacketMath.h	20;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/SSE/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	Eigen/src/Core/arch/ZVector/PacketMath.h	20;"	d
EIGEN_CAT	Eigen/src/Core/util/Macros.h	479;"	d
EIGEN_CAT2	Eigen/src/Core/util/Macros.h	478;"	d
EIGEN_CATCH	Eigen/src/Core/util/Macros.h	965;"	d
EIGEN_CATCH_ASSIGN_XPR_OP_PRODUCT	Eigen/src/Core/ProductEvaluators.h	228;"	d
EIGEN_CHECK_BINARY_COMPATIBILIY	Eigen/src/Core/util/XprHelper.h	815;"	d
EIGEN_CHOLMODSUPPORT_H	Eigen/src/CholmodSupport/CholmodSupport.h	11;"	d
EIGEN_COLAMD_H	Eigen/src/OrderingMethods/Eigen_Colamd.h	48;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_H	Eigen/src/QR/ColPivHouseholderQR.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_LAPACKE_H	Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	35;"	d
EIGEN_COMMA	Eigen/src/Core/util/Macros.h	481;"	d
EIGEN_COMMAINITIALIZER_H	Eigen/src/Core/CommaInitializer.h	12;"	d
EIGEN_COMPLETEORTHOGONALDECOMPOSITION_H	Eigen/src/QR/CompleteOrthogonalDecomposition.h	11;"	d
EIGEN_COMPLEX32_ALTIVEC_H	Eigen/src/Core/arch/AltiVec/Complex.h	12;"	d
EIGEN_COMPLEX32_ALTIVEC_H	Eigen/src/Core/arch/ZVector/Complex.h	12;"	d
EIGEN_COMPLEX_AVX_H	Eigen/src/Core/arch/AVX/Complex.h	11;"	d
EIGEN_COMPLEX_CUDA_H	Eigen/src/Core/arch/CUDA/Complex.h	11;"	d
EIGEN_COMPLEX_EIGEN_SOLVER_H	Eigen/src/Eigenvalues/ComplexEigenSolver.h	13;"	d
EIGEN_COMPLEX_NEON_H	Eigen/src/Core/arch/NEON/Complex.h	12;"	d
EIGEN_COMPLEX_SCHUR_H	Eigen/src/Eigenvalues/ComplexSchur.h	13;"	d
EIGEN_COMPLEX_SCHUR_LAPACKE_H	Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	34;"	d
EIGEN_COMPLEX_SSE_H	Eigen/src/Core/arch/SSE/Complex.h	11;"	d
EIGEN_COMPRESSED_STORAGE_H	Eigen/src/SparseCore/CompressedStorage.h	11;"	d
EIGEN_COMP_ARM	Eigen/src/Core/util/Macros.h	106;"	d
EIGEN_COMP_ARM	Eigen/src/Core/util/Macros.h	108;"	d
EIGEN_COMP_CLANG	Eigen/src/Core/util/Macros.h	33;"	d
EIGEN_COMP_CLANG	Eigen/src/Core/util/Macros.h	35;"	d
EIGEN_COMP_EMSCRIPTEN	Eigen/src/Core/util/Macros.h	113;"	d
EIGEN_COMP_EMSCRIPTEN	Eigen/src/Core/util/Macros.h	115;"	d
EIGEN_COMP_GNUC	Eigen/src/Core/util/Macros.h	26;"	d
EIGEN_COMP_GNUC	Eigen/src/Core/util/Macros.h	28;"	d
EIGEN_COMP_GNUC_STRICT	Eigen/src/Core/util/Macros.h	121;"	d
EIGEN_COMP_GNUC_STRICT	Eigen/src/Core/util/Macros.h	123;"	d
EIGEN_COMP_IBM	Eigen/src/Core/util/Macros.h	92;"	d
EIGEN_COMP_IBM	Eigen/src/Core/util/Macros.h	94;"	d
EIGEN_COMP_ICC	Eigen/src/Core/util/Macros.h	48;"	d
EIGEN_COMP_ICC	Eigen/src/Core/util/Macros.h	50;"	d
EIGEN_COMP_LLVM	Eigen/src/Core/util/Macros.h	41;"	d
EIGEN_COMP_LLVM	Eigen/src/Core/util/Macros.h	43;"	d
EIGEN_COMP_MINGW	Eigen/src/Core/util/Macros.h	55;"	d
EIGEN_COMP_MINGW	Eigen/src/Core/util/Macros.h	57;"	d
EIGEN_COMP_MSVC	Eigen/src/Core/util/Macros.h	69;"	d
EIGEN_COMP_MSVC	Eigen/src/Core/util/Macros.h	71;"	d
EIGEN_COMP_MSVC_STRICT	Eigen/src/Core/util/Macros.h	85;"	d
EIGEN_COMP_MSVC_STRICT	Eigen/src/Core/util/Macros.h	87;"	d
EIGEN_COMP_PGI	Eigen/src/Core/util/Macros.h	101;"	d
EIGEN_COMP_PGI	Eigen/src/Core/util/Macros.h	99;"	d
EIGEN_COMP_SUNCC	Eigen/src/Core/util/Macros.h	62;"	d
EIGEN_COMP_SUNCC	Eigen/src/Core/util/Macros.h	64;"	d
EIGEN_CONDITIONESTIMATOR_H	Eigen/src/Core/ConditionEstimator.h	11;"	d
EIGEN_CONJUGATE_GRADIENT_H	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	11;"	d
EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	11;"	d
EIGEN_CONSTANTS_H	Eigen/src/Core/util/Constants.h	12;"	d
EIGEN_COREEVALUATORS_H	Eigen/src/Core/CoreEvaluators.h	14;"	d
EIGEN_COREITERATORS_H	Eigen/src/Core/CoreIterators.h	11;"	d
EIGEN_CPUID	Eigen/src/Core/util/Memory.h	757;"	d
EIGEN_CPUID	Eigen/src/Core/util/Memory.h	762;"	d
EIGEN_CPUID	Eigen/src/Core/util/Memory.h	766;"	d
EIGEN_CPUID	Eigen/src/Core/util/Memory.h	771;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/ArrayBase.h	100;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/ArrayBase.h	89;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/DenseBase.h	570;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/DenseBase.h	577;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/MatrixBase.h	123;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/Core/MatrixBase.h	132;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/SparseCore/SparseMatrixBase.h	147;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	Eigen/src/SparseCore/SparseMatrixBase.h	165;"	d
EIGEN_CWISE_BINARY_OP_H	Eigen/src/Core/CwiseBinaryOp.h	12;"	d
EIGEN_CWISE_BINARY_RETURN_TYPE	Eigen/src/Core/util/Macros.h	902;"	d
EIGEN_CWISE_NULLARY_OP_H	Eigen/src/Core/CwiseNullaryOp.h	11;"	d
EIGEN_CWISE_TERNARY_OP_H	Eigen/src/Core/CwiseTernaryOp.h	13;"	d
EIGEN_CWISE_UNARY_OP_H	Eigen/src/Core/CwiseUnaryOp.h	12;"	d
EIGEN_CWISE_UNARY_VIEW_H	Eigen/src/Core/CwiseUnaryView.h	11;"	d
EIGEN_DBG_SPARSE	Eigen/src/SparseCore/SparseUtil.h	16;"	d
EIGEN_DEBUG_ALIGNED_LOAD	Eigen/src/Core/GenericPacketMath.h	27;"	d
EIGEN_DEBUG_ALIGNED_STORE	Eigen/src/Core/GenericPacketMath.h	35;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	Eigen/src/Core/GenericPacketMath.h	31;"	d
EIGEN_DEBUG_UNALIGNED_STORE	Eigen/src/Core/GenericPacketMath.h	39;"	d
EIGEN_DEBUG_VAR	Eigen/src/Core/util/Macros.h	475;"	d
EIGEN_DECLARE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	Eigen/src/Core/util/Macros.h	528;"	d
EIGEN_DEFAULT_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	777;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	Eigen/src/Core/util/Macros.h	336;"	d
EIGEN_DEFAULT_IO_FORMAT	Eigen/src/Core/util/Macros.h	806;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	Eigen/src/Core/util/Macros.h	330;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	Eigen/src/Core/util/Macros.h	332;"	d
EIGEN_DEFAULT_SETTINGS_H	Eigen/src/Core/arch/Default/Settings.h	17;"	d
EIGEN_DEFINE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	Eigen/src/Core/util/Macros.h	529;"	d
EIGEN_DEFINE_STL_DEQUE_SPECIALIZATION	Eigen/src/StlSupport/StdDeque.h	21;"	d
EIGEN_DEFINE_STL_LIST_SPECIALIZATION	Eigen/src/StlSupport/StdList.h	20;"	d
EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION	Eigen/src/StlSupport/StdVector.h	21;"	d
EIGEN_DENSEBASE_H	Eigen/src/Core/DenseBase.h	12;"	d
EIGEN_DENSECOEFFSBASE_H	Eigen/src/Core/DenseCoeffsBase.h	11;"	d
EIGEN_DENSESTORAGEBASE_H	Eigen/src/Core/PlainObjectBase.h	12;"	d
EIGEN_DENSE_PUBLIC_INTERFACE	Eigen/src/Core/util/Macros.h	867;"	d
EIGEN_DEPRECATED	Eigen/src/Core/util/Macros.h	594;"	d
EIGEN_DETERMINANT_H	Eigen/src/LU/Determinant.h	11;"	d
EIGEN_DIAGONALMATRIX_H	Eigen/src/Core/DiagonalMatrix.h	12;"	d
EIGEN_DIAGONALPRODUCT_H	Eigen/src/Core/DiagonalProduct.h	12;"	d
EIGEN_DIAGONAL_H	Eigen/src/Core/Diagonal.h	12;"	d
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	Eigen/src/Core/util/Macros.h	740;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	Eigen/src/Core/DenseBase.h	572;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	Eigen/src/Core/DenseBase.h	579;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	Eigen/src/SparseCore/SparseMatrixBase.h	151;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	Eigen/src/SparseCore/SparseMatrixBase.h	155;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	Eigen/src/SparseCore/SparseMatrixBase.h	168;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	Eigen/src/Core/DenseBase.h	571;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	Eigen/src/Core/DenseBase.h	578;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	Eigen/src/SparseCore/SparseMatrixBase.h	150;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	Eigen/src/SparseCore/SparseMatrixBase.h	154;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	Eigen/src/SparseCore/SparseMatrixBase.h	167;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/Core/ArrayBase.h	101;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/Core/ArrayBase.h	90;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/Core/MatrixBase.h	124;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/Core/MatrixBase.h	133;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/SparseCore/SparseMatrixBase.h	149;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/SparseCore/SparseMatrixBase.h	153;"	d
EIGEN_DOC_UNARY_ADDONS	Eigen/src/SparseCore/SparseMatrixBase.h	166;"	d
EIGEN_DONT_INLINE	Eigen/src/Core/util/Macros.h	511;"	d
EIGEN_DONT_INLINE	Eigen/src/Core/util/Macros.h	513;"	d
EIGEN_DONT_INLINE	Eigen/src/Core/util/Macros.h	515;"	d
EIGEN_DOT_H	Eigen/src/Core/Dot.h	11;"	d
EIGEN_EIGENBASE_H	Eigen/src/Core/EigenBase.h	12;"	d
EIGEN_EIGENSOLVER_H	Eigen/src/Eigenvalues/EigenSolver.h	12;"	d
EIGEN_EMPTY	Eigen/src/Core/util/Macros.h	813;"	d
EIGEN_EMPTY_STRUCT_CTOR	Eigen/src/Core/util/XprHelper.h	18;"	d
EIGEN_EMPTY_STRUCT_CTOR	Eigen/src/Core/util/XprHelper.h	22;"	d
EIGEN_EULERANGLES_H	Eigen/src/Geometry/EulerAngles.h	11;"	d
EIGEN_EXCEPTION_SPEC	Eigen/src/Core/CommaInitializer.h	/^  EIGEN_EXCEPTION_SPEC(Eigen::eigen_assert_exception)$/;"	f	struct:Eigen::CommaInitializer
EIGEN_EXCEPTION_SPEC	Eigen/src/Core/util/Macros.h	984;"	d
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(bool) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(double) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(float) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(int) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(long long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(short) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(signed char) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned char) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned int) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned long long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned short) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	40;"	d
EIGEN_EXPLICIT_CAST	Eigen/src/Core/arch/CUDA/Half.h	42;"	d
EIGEN_EXPR_BINARYOP_SCALAR_RETURN_TYPE	Eigen/src/Core/util/Macros.h	923;"	d
EIGEN_EXTRACT_8f_FROM_16f	Eigen/src/Core/arch/AVX512/PacketMath.h	662;"	d
EIGEN_EXTRACT_8f_FROM_16f	Eigen/src/Core/arch/AVX512/PacketMath.h	666;"	d
EIGEN_FAST_MATH	Eigen/src/Core/util/Macros.h	472;"	d
EIGEN_FORCEALIGNEDACCESS_H	Eigen/src/Core/ForceAlignedAccess.h	11;"	d
EIGEN_FORWARDDECLARATIONS_H	Eigen/src/Core/util/ForwardDeclarations.h	12;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	46;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	48;"	d
EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H	Eigen/src/QR/FullPivHouseholderQR.h	12;"	d
EIGEN_FUZZY_H	Eigen/src/Core/Fuzzy.h	12;"	d
EIGEN_GCC3_OR_OLDER	Eigen/src/Core/util/Macros.h	139;"	d
EIGEN_GCC3_OR_OLDER	Eigen/src/Core/util/Macros.h	141;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	Eigen/src/Core/util/Macros.h	705;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1096;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1133;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1200;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1242;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1301;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1336;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1392;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1429;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1471;"	d
EIGEN_GEBGP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1504;"	d
EIGEN_GEBP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	1023;"	d
EIGEN_GEBP_ONESTEP	Eigen/src/Core/products/GeneralBlockPanelKernel.h	970;"	d
EIGEN_GENERALIZEDEIGENSOLVER_H	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	13;"	d
EIGEN_GENERALIZEDSELFADJOINTEIGENSOLVER_H	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	12;"	d
EIGEN_GENERAL_BLOCK_PANEL_H	Eigen/src/Core/products/GeneralBlockPanelKernel.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_BLAS_H	Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_H	Eigen/src/Core/products/GeneralMatrixMatrix.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_BLAS_H	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_H	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	11;"	d
EIGEN_GENERAL_MATRIX_VECTOR_BLAS_H	Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_VECTOR_H	Eigen/src/Core/products/GeneralMatrixVector.h	11;"	d
EIGEN_GENERAL_PRODUCT_H	Eigen/src/Core/GeneralProduct.h	12;"	d
EIGEN_GENERIC_PACKET_MATH_H	Eigen/src/Core/GenericPacketMath.h	12;"	d
EIGEN_GENERIC_PUBLIC_INTERFACE	Eigen/src/Core/util/Macros.h	849;"	d
EIGEN_GEOMETRY_SSE_H	Eigen/src/Geometry/arch/Geometry_SSE.h	12;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	36;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	38;"	d
EIGEN_GLOBAL_FUNCTIONS_H	Eigen/src/Core/GlobalFunctions.h	12;"	d
EIGEN_GNUC_AT	Eigen/src/Core/util/Macros.h	130;"	d
EIGEN_GNUC_AT	Eigen/src/Core/util/Macros.h	134;"	d
EIGEN_GNUC_AT_LEAST	Eigen/src/Core/util/Macros.h	128;"	d
EIGEN_GNUC_AT_LEAST	Eigen/src/Core/util/Macros.h	132;"	d
EIGEN_GNUC_AT_MOST	Eigen/src/Core/util/Macros.h	129;"	d
EIGEN_GNUC_AT_MOST	Eigen/src/Core/util/Macros.h	133;"	d
EIGEN_HALF_CUDA_H	Eigen/src/Core/arch/CUDA/Half.h	37;"	d
EIGEN_HAS_BUILTIN	Eigen/src/Core/util/Macros.h	341;"	d
EIGEN_HAS_BUILTIN	Eigen/src/Core/util/Macros.h	343;"	d
EIGEN_HAS_C99_MATH	Eigen/src/Core/util/Macros.h	384;"	d
EIGEN_HAS_C99_MATH	Eigen/src/Core/util/Macros.h	386;"	d
EIGEN_HAS_CONSTEXPR	Eigen/src/Core/util/Macros.h	417;"	d
EIGEN_HAS_CONSTEXPR	Eigen/src/Core/util/Macros.h	421;"	d
EIGEN_HAS_CONSTEXPR	Eigen/src/Core/util/Macros.h	425;"	d
EIGEN_HAS_CXX11	Eigen/src/Core/util/Macros.h	360;"	d
EIGEN_HAS_CXX11	Eigen/src/Core/util/Macros.h	362;"	d
EIGEN_HAS_CXX11_CONTAINERS	Eigen/src/Core/util/Macros.h	447;"	d
EIGEN_HAS_CXX11_CONTAINERS	Eigen/src/Core/util/Macros.h	449;"	d
EIGEN_HAS_CXX11_MATH	Eigen/src/Core/util/Macros.h	435;"	d
EIGEN_HAS_CXX11_MATH	Eigen/src/Core/util/Macros.h	437;"	d
EIGEN_HAS_CXX11_NOEXCEPT	Eigen/src/Core/util/Macros.h	460;"	d
EIGEN_HAS_CXX11_NOEXCEPT	Eigen/src/Core/util/Macros.h	462;"	d
EIGEN_HAS_RVALUE_REFERENCES	Eigen/src/Core/util/Macros.h	372;"	d
EIGEN_HAS_RVALUE_REFERENCES	Eigen/src/Core/util/Macros.h	374;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	Eigen/src/Core/arch/AltiVec/PacketMath.h	26;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	Eigen/src/Core/arch/NEON/PacketMath.h	28;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	Eigen/src/Core/arch/ZVector/PacketMath.h	28;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/AVX/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/AVX512/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/AltiVec/PacketMath.h	22;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/NEON/PacketMath.h	24;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/SSE/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	Eigen/src/Core/arch/ZVector/PacketMath.h	24;"	d
EIGEN_HAS_STD_RESULT_OF	Eigen/src/Core/util/Macros.h	393;"	d
EIGEN_HAS_STD_RESULT_OF	Eigen/src/Core/util/Macros.h	395;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	Eigen/src/Core/util/Macros.h	405;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	Eigen/src/Core/util/Macros.h	407;"	d
EIGEN_HESSENBERGDECOMPOSITION_H	Eigen/src/Eigenvalues/HessenbergDecomposition.h	12;"	d
EIGEN_HOMOGENEOUS_H	Eigen/src/Geometry/Homogeneous.h	11;"	d
EIGEN_HOUSEHOLDER_H	Eigen/src/Householder/Householder.h	12;"	d
EIGEN_HOUSEHOLDER_SEQUENCE_H	Eigen/src/Householder/HouseholderSequence.h	12;"	d
EIGEN_HYPERPLANE_H	Eigen/src/Geometry/Hyperplane.h	12;"	d
EIGEN_IDEAL_MAX_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	662;"	d
EIGEN_IMPLIES	Eigen/src/Core/util/Macros.h	899;"	d
EIGEN_INCLUDE_TYPE_TRAITS	Eigen/src/Core/util/Macros.h	980;"	d
EIGEN_INCOMPLETE_CHOlESKY_H	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	12;"	d
EIGEN_INCOMPLETE_LUT_H	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	12;"	d
EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR	Eigen/src/Core/util/Macros.h	816;"	d
EIGEN_INHERIT_ASSIGNMENT_OPERATORS	Eigen/src/Core/util/Macros.h	839;"	d
EIGEN_INITIALIZE_COEFFS	Eigen/src/Core/PlainObjectBase.h	15;"	d
EIGEN_INITIALIZE_COEFFS	Eigen/src/Core/PlainObjectBase.h	18;"	d
EIGEN_INITIALIZE_COEFFS	Eigen/src/Core/PlainObjectBase.h	21;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	Eigen/src/Core/PlainObjectBase.h	16;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	Eigen/src/Core/PlainObjectBase.h	19;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	Eigen/src/Core/PlainObjectBase.h	22;"	d
EIGEN_INSERT_8f_INTO_16f	Eigen/src/Core/arch/AVX512/PacketMath.h	676;"	d
EIGEN_INSERT_8f_INTO_16f	Eigen/src/Core/arch/AVX512/PacketMath.h	680;"	d
EIGEN_INTERNAL_CHECK_COST_VALUE	Eigen/src/Core/util/StaticAssert.h	213;"	d
EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE	Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	Eigen/src/Core/DenseStorage.h	16;"	d
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	Eigen/src/Core/DenseStorage.h	18;"	d
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT	Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT__INVALID_COST_VALUE	Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT__INVALID_COST_VALUE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
EIGEN_INVERSE_H	Eigen/src/Core/Inverse.h	11;"	d
EIGEN_INVERSE_IMPL_H	Eigen/src/LU/InverseImpl.h	12;"	d
EIGEN_INVERSE_SSE_H	Eigen/src/LU/arch/Inverse_SSE.h	28;"	d
EIGEN_IO_H	Eigen/src/Core/IO.h	12;"	d
EIGEN_ITERATIVE_SOLVER_BASE_H	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	11;"	d
EIGEN_JACOBISVD_H	Eigen/src/SVD/JacobiSVD.h	12;"	d
EIGEN_JACOBISVD_LAPACKE_H	Eigen/src/SVD/JacobiSVD_LAPACKE.h	34;"	d
EIGEN_JACOBI_H	Eigen/src/Jacobi/Jacobi.h	12;"	d
EIGEN_LAPACKE_EIG_SELFADJ	Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	40;"	d
EIGEN_LAPACKE_LLT	Eigen/src/Cholesky/LLT_LAPACKE.h	42;"	d
EIGEN_LAPACKE_LU_PARTPIV	Eigen/src/LU/PartialPivLU_LAPACKE.h	42;"	d
EIGEN_LAPACKE_QR_COLPIV	Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	41;"	d
EIGEN_LAPACKE_QR_NOPIV	Eigen/src/QR/HouseholderQR_LAPACKE.h	43;"	d
EIGEN_LAPACKE_SCHUR_COMPLEX	Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	40;"	d
EIGEN_LAPACKE_SCHUR_REAL	Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	40;"	d
EIGEN_LAPACKE_SVD	Eigen/src/SVD/JacobiSVD_LAPACKE.h	40;"	d
EIGEN_LDLT_H	Eigen/src/Cholesky/LDLT.h	14;"	d
EIGEN_LEAST_SQUARE_CONJUGATE_GRADIENT_H	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	11;"	d
EIGEN_LLT_H	Eigen/src/Cholesky/LLT.h	11;"	d
EIGEN_LLT_LAPACKE_H	Eigen/src/Cholesky/LLT_LAPACKE.h	34;"	d
EIGEN_LOGICAL_XOR	Eigen/src/Core/util/Macros.h	897;"	d
EIGEN_LU_H	Eigen/src/LU/FullPivLU.h	11;"	d
EIGEN_LU_STRUCTS	Eigen/src/SparseLU/SparseLU_Structs.h	70;"	d
EIGEN_MACROS_H	Eigen/src/Core/util/Macros.h	12;"	d
EIGEN_MAJOR_VERSION	Eigen/src/Core/util/Macros.h	15;"	d
EIGEN_MAKESTRING	Eigen/src/Core/util/Macros.h	485;"	d
EIGEN_MAKESTRING2	Eigen/src/Core/util/Macros.h	484;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	Eigen/src/Core/util/Memory.h	690;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF	Eigen/src/Core/util/Memory.h	662;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE	Eigen/src/Core/util/Memory.h	691;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_NOTHROW	Eigen/src/Core/util/Memory.h	657;"	d
EIGEN_MAKE_ARRAY_FIXED_TYPEDEFS	Eigen/src/Core/Array.h	285;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	Eigen/src/Core/Array.h	279;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	Eigen/src/Core/Array.h	307;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	Eigen/src/Core/Array.h	291;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	Eigen/src/Core/Array.h	306;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_LARGE	Eigen/src/Core/Array.h	309;"	d
EIGEN_MAKE_CWISE_BINARY_OP	Eigen/src/Core/util/Macros.h	912;"	d
EIGEN_MAKE_CWISE_COMP_OP	Eigen/src/plugins/ArrayCwiseBinaryOps.h	108;"	d
EIGEN_MAKE_CWISE_COMP_OP	Eigen/src/plugins/ArrayCwiseBinaryOps.h	210;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	Eigen/src/plugins/ArrayCwiseBinaryOps.h	126;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	Eigen/src/plugins/ArrayCwiseBinaryOps.h	211;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	Eigen/src/Core/Matrix.h	434;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	Eigen/src/Core/Matrix.h	457;"	d
EIGEN_MAKE_IMAGE_HELPERS	Eigen/src/misc/Image.h	67;"	d
EIGEN_MAKE_KERNEL_HELPERS	Eigen/src/misc/Kernel.h	66;"	d
EIGEN_MAKE_SCALAR_BINARY_OP	Eigen/src/Core/util/Macros.h	956;"	d
EIGEN_MAKE_SCALAR_BINARY_OP_ONTHELEFT	Eigen/src/Core/util/Macros.h	947;"	d
EIGEN_MAKE_SCALAR_BINARY_OP_ONTHERIGHT	Eigen/src/Core/util/Macros.h	938;"	d
EIGEN_MAKE_TYPEDEFS	Eigen/src/Core/Matrix.h	426;"	d
EIGEN_MAKE_TYPEDEFS	Eigen/src/Core/Matrix.h	456;"	d
EIGEN_MAKE_TYPEDEFS	Eigen/src/Geometry/AlignedBox.h	372;"	d
EIGEN_MAKE_TYPEDEFS	Eigen/src/Geometry/AlignedBox.h	388;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	Eigen/src/Core/Matrix.h	440;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	Eigen/src/Core/Matrix.h	455;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	Eigen/src/Geometry/AlignedBox.h	376;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	Eigen/src/Geometry/AlignedBox.h	387;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	Eigen/src/Core/DenseStorage.h	62;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	Eigen/src/Core/DenseStorage.h	69;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	Eigen/src/Core/DenseStorage.h	75;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	55;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	Eigen/src/Core/util/Memory.h	57;"	d
EIGEN_MAPBASE_H	Eigen/src/Core/MapBase.h	12;"	d
EIGEN_MAPPED_SPARSEMATRIX_H	Eigen/src/SparseCore/MappedSparseMatrix.h	11;"	d
EIGEN_MAP_H	Eigen/src/Core/Map.h	12;"	d
EIGEN_MATHFUNCTIONSIMPL_H	Eigen/src/Core/MathFunctionsImpl.h	12;"	d
EIGEN_MATHFUNCTIONS_H	Eigen/src/Core/MathFunctions.h	11;"	d
EIGEN_MATHFUNC_IMPL	Eigen/src/Core/MathFunctions.h	68;"	d
EIGEN_MATHFUNC_RETVAL	Eigen/src/Core/MathFunctions.h	69;"	d
EIGEN_MATH_FUNCTIONS_ALTIVEC_H	Eigen/src/Core/arch/AltiVec/MathFunctions.h	17;"	d
EIGEN_MATH_FUNCTIONS_ALTIVEC_H	Eigen/src/Core/arch/ZVector/MathFunctions.h	17;"	d
EIGEN_MATH_FUNCTIONS_AVX_H	Eigen/src/Core/arch/AVX/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_CUDA_H	Eigen/src/Core/arch/CUDA/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_NEON_H	Eigen/src/Core/arch/NEON/MathFunctions.h	13;"	d
EIGEN_MATH_FUNCTIONS_SSE_H	Eigen/src/Core/arch/SSE/MathFunctions.h	16;"	d
EIGEN_MATRIXBASEEIGENVALUES_H	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	12;"	d
EIGEN_MATRIXBASE_H	Eigen/src/Core/MatrixBase.h	12;"	d
EIGEN_MATRIXSTORAGE_H	Eigen/src/Core/DenseStorage.h	13;"	d
EIGEN_MATRIX_H	Eigen/src/Core/Matrix.h	12;"	d
EIGEN_MAX_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	769;"	d
EIGEN_MAX_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	771;"	d
EIGEN_MAX_CPP_VER	Eigen/src/Core/util/Macros.h	356;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	689;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	691;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	726;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	735;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	736;"	d
EIGEN_MEMBER_FUNCTOR	Eigen/src/Core/VectorwiseOp.h	84;"	d
EIGEN_MEMORY_H	Eigen/src/Core/util/Memory.h	21;"	d
EIGEN_META_H	Eigen/src/Core/util/Meta.h	12;"	d
EIGEN_MINOR_VERSION	Eigen/src/Core/util/Macros.h	16;"	d
EIGEN_MIN_ALIGN_BYTES	Eigen/src/Core/util/Macros.h	675;"	d
EIGEN_MISC_IMAGE_H	Eigen/src/misc/Image.h	11;"	d
EIGEN_MISC_KERNEL_H	Eigen/src/misc/Kernel.h	11;"	d
EIGEN_MKL_DOMAIN_ALL	Eigen/src/Core/util/MKL_support.h	81;"	d
EIGEN_MKL_DOMAIN_ALL	Eigen/src/Core/util/MKL_support.h	83;"	d
EIGEN_MKL_DOMAIN_BLAS	Eigen/src/Core/util/MKL_support.h	87;"	d
EIGEN_MKL_DOMAIN_BLAS	Eigen/src/Core/util/MKL_support.h	89;"	d
EIGEN_MKL_DOMAIN_FFT	Eigen/src/Core/util/MKL_support.h	93;"	d
EIGEN_MKL_DOMAIN_FFT	Eigen/src/Core/util/MKL_support.h	95;"	d
EIGEN_MKL_DOMAIN_PARDISO	Eigen/src/Core/util/MKL_support.h	105;"	d
EIGEN_MKL_DOMAIN_PARDISO	Eigen/src/Core/util/MKL_support.h	107;"	d
EIGEN_MKL_DOMAIN_VML	Eigen/src/Core/util/MKL_support.h	101;"	d
EIGEN_MKL_DOMAIN_VML	Eigen/src/Core/util/MKL_support.h	99;"	d
EIGEN_MKL_SUPPORT_H	Eigen/src/Core/util/MKL_support.h	34;"	d
EIGEN_MKL_VML_DECLARE_POW_CALL	Eigen/src/Core/Assign_MKL.h	140;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL	Eigen/src/Core/Assign_MKL.h	82;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS	Eigen/src/Core/Assign_MKL.h	114;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_CPLX	Eigen/src/Core/Assign_MKL.h	110;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL	Eigen/src/Core/Assign_MKL.h	106;"	d
EIGEN_MKL_VML_THRESHOLD	Eigen/src/Core/util/MKL_support.h	76;"	d
EIGEN_MSVC10_WORKAROUND_BINARYOP_RETURN_TYPE	Eigen/src/Core/util/Macros.h	933;"	d
EIGEN_NESTBYVALUE_H	Eigen/src/Core/NestByValue.h	12;"	d
EIGEN_NOALIAS_H	Eigen/src/Core/NoAlias.h	11;"	d
EIGEN_NOEXCEPT	Eigen/src/Core/util/Macros.h	981;"	d
EIGEN_NOEXCEPT_IF	Eigen/src/Core/Array.h	/^    Array& operator=(Array&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)$/;"	f	class:Eigen::Array
EIGEN_NOEXCEPT_IF	Eigen/src/Core/Array.h	/^    Array(Array&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)$/;"	f	class:Eigen::Array
EIGEN_NOEXCEPT_IF	Eigen/src/Core/Matrix.h	/^    Matrix& operator=(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)$/;"	f	class:Eigen::Matrix
EIGEN_NOEXCEPT_IF	Eigen/src/Core/Matrix.h	/^    Matrix(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)$/;"	f	class:Eigen::Matrix
EIGEN_NOEXCEPT_IF	Eigen/src/Core/util/Macros.h	982;"	d
EIGEN_NOT_A_MACRO	Eigen/src/Core/util/Macros.h	327;"	d
EIGEN_NO_DEBUG	Eigen/src/Core/util/Macros.h	533;"	d
EIGEN_NO_THROW	Eigen/src/Core/util/Macros.h	983;"	d
EIGEN_NULLARY_FUNCTORS_H	Eigen/src/Core/functors/NullaryFunctors.h	11;"	d
EIGEN_NUMTRAITS_H	Eigen/src/Core/NumTraits.h	11;"	d
EIGEN_ONLY_USED_FOR_DEBUG	Eigen/src/Core/util/Macros.h	587;"	d
EIGEN_ORDERING_H	Eigen/src/OrderingMethods/Ordering.h	12;"	d
EIGEN_ORTHOMETHODS_H	Eigen/src/Geometry/OrthoMethods.h	12;"	d
EIGEN_OS_ANDROID	Eigen/src/Core/util/Macros.h	234;"	d
EIGEN_OS_ANDROID	Eigen/src/Core/util/Macros.h	236;"	d
EIGEN_OS_BSD	Eigen/src/Core/util/Macros.h	248;"	d
EIGEN_OS_BSD	Eigen/src/Core/util/Macros.h	250;"	d
EIGEN_OS_CYGWIN	Eigen/src/Core/util/Macros.h	290;"	d
EIGEN_OS_CYGWIN	Eigen/src/Core/util/Macros.h	292;"	d
EIGEN_OS_GNULINUX	Eigen/src/Core/util/Macros.h	241;"	d
EIGEN_OS_GNULINUX	Eigen/src/Core/util/Macros.h	243;"	d
EIGEN_OS_LINUX	Eigen/src/Core/util/Macros.h	226;"	d
EIGEN_OS_LINUX	Eigen/src/Core/util/Macros.h	228;"	d
EIGEN_OS_MAC	Eigen/src/Core/util/Macros.h	255;"	d
EIGEN_OS_MAC	Eigen/src/Core/util/Macros.h	257;"	d
EIGEN_OS_QNX	Eigen/src/Core/util/Macros.h	262;"	d
EIGEN_OS_QNX	Eigen/src/Core/util/Macros.h	264;"	d
EIGEN_OS_SOLARIS	Eigen/src/Core/util/Macros.h	311;"	d
EIGEN_OS_SOLARIS	Eigen/src/Core/util/Macros.h	313;"	d
EIGEN_OS_SUN	Eigen/src/Core/util/Macros.h	304;"	d
EIGEN_OS_SUN	Eigen/src/Core/util/Macros.h	306;"	d
EIGEN_OS_UNIX	Eigen/src/Core/util/Macros.h	219;"	d
EIGEN_OS_UNIX	Eigen/src/Core/util/Macros.h	221;"	d
EIGEN_OS_WIN	Eigen/src/Core/util/Macros.h	269;"	d
EIGEN_OS_WIN	Eigen/src/Core/util/Macros.h	271;"	d
EIGEN_OS_WIN64	Eigen/src/Core/util/Macros.h	276;"	d
EIGEN_OS_WIN64	Eigen/src/Core/util/Macros.h	278;"	d
EIGEN_OS_WINCE	Eigen/src/Core/util/Macros.h	283;"	d
EIGEN_OS_WINCE	Eigen/src/Core/util/Macros.h	285;"	d
EIGEN_OS_WIN_STRICT	Eigen/src/Core/util/Macros.h	297;"	d
EIGEN_OS_WIN_STRICT	Eigen/src/Core/util/Macros.h	299;"	d
EIGEN_PACKET_MATH_ALTIVEC_H	Eigen/src/Core/arch/AltiVec/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_AVX512_H	Eigen/src/Core/arch/AVX512/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_AVX_H	Eigen/src/Core/arch/AVX/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_CUDA_H	Eigen/src/Core/arch/CUDA/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_HALF_CUDA_H	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	11;"	d
EIGEN_PACKET_MATH_NEON_H	Eigen/src/Core/arch/NEON/PacketMath.h	13;"	d
EIGEN_PACKET_MATH_SSE_H	Eigen/src/Core/arch/SSE/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_ZVECTOR_H	Eigen/src/Core/arch/ZVector/PacketMath.h	11;"	d
EIGEN_PARALLELIZER_H	Eigen/src/Core/products/Parallelizer.h	11;"	d
EIGEN_PARAMETRIZEDLINE_H	Eigen/src/Geometry/ParametrizedLine.h	12;"	d
EIGEN_PARDISOSUPPORT_H	Eigen/src/PardisoSupport/PardisoSupport.h	33;"	d
EIGEN_PARTIALLU_H	Eigen/src/LU/PartialPivLU.h	12;"	d
EIGEN_PARTIALLU_LAPACK_H	Eigen/src/LU/PartialPivLU_LAPACKE.h	34;"	d
EIGEN_PARTIAL_REDUX_H	Eigen/src/Core/VectorwiseOp.h	12;"	d
EIGEN_PASTIXSUPPORT_H	Eigen/src/PaStiXSupport/PaStiXSupport.h	11;"	d
EIGEN_PERMISSIVE_EXPR	Eigen/src/Core/util/Macros.h	519;"	d
EIGEN_PERMISSIVE_EXPR	Eigen/src/Core/util/Macros.h	521;"	d
EIGEN_PERMUTATIONMATRIX_H	Eigen/src/Core/PermutationMatrix.h	12;"	d
EIGEN_PI	Eigen/src/Core/MathFunctions.h	15;"	d
EIGEN_PLAIN_ENUM_MAX	Eigen/src/Core/util/Macros.h	873;"	d
EIGEN_PLAIN_ENUM_MIN	Eigen/src/Core/util/Macros.h	872;"	d
EIGEN_PPC_PREFETCH	Eigen/src/Core/arch/AltiVec/PacketMath.h	127;"	d
EIGEN_PPC_PREFETCH	Eigen/src/Core/arch/AltiVec/PacketMath.h	129;"	d
EIGEN_PP_EXPAND	Eigen/src/Core/Assign_MKL.h	69;"	d
EIGEN_PREDICATE_SAME_MATRIX_SIZE	Eigen/src/Core/util/StaticAssert.h	169;"	d
EIGEN_PRODUCTEVALUATORS_H	Eigen/src/Core/ProductEvaluators.h	14;"	d
EIGEN_PRODUCT_H	Eigen/src/Core/Product.h	11;"	d
EIGEN_QR_H	Eigen/src/QR/HouseholderQR.h	13;"	d
EIGEN_QR_LAPACKE_H	Eigen/src/QR/HouseholderQR_LAPACKE.h	35;"	d
EIGEN_QUATERNION_H	Eigen/src/Geometry/Quaternion.h	12;"	d
EIGEN_RANDOM_H	Eigen/src/Core/Random.h	11;"	d
EIGEN_REALSVD2X2_H	Eigen/src/misc/RealSvd2x2.h	12;"	d
EIGEN_REAL_QZ_H	Eigen/src/Eigenvalues/RealQZ.h	11;"	d
EIGEN_REAL_SCHUR_H	Eigen/src/Eigenvalues/RealSchur.h	12;"	d
EIGEN_REAL_SCHUR_LAPACKE_H	Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	34;"	d
EIGEN_REDUX_H	Eigen/src/Core/Redux.h	12;"	d
EIGEN_REF_H	Eigen/src/Core/Ref.h	11;"	d
EIGEN_REPLICATE_H	Eigen/src/Core/Replicate.h	11;"	d
EIGEN_RESTRICT	Eigen/src/Core/util/Macros.h	791;"	d
EIGEN_RESTRICT	Eigen/src/Core/util/Macros.h	794;"	d
EIGEN_RETURNBYVALUE_H	Eigen/src/Core/ReturnByValue.h	12;"	d
EIGEN_REVERSE_H	Eigen/src/Core/Reverse.h	13;"	d
EIGEN_ROTATION2D_H	Eigen/src/Geometry/Rotation2D.h	11;"	d
EIGEN_ROTATIONBASE_H	Eigen/src/Geometry/RotationBase.h	11;"	d
EIGEN_SAEIGENSOLVER_LAPACKE_H	Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	34;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	Eigen/src/Core/util/Macros.h	320;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	Eigen/src/Core/util/Macros.h	322;"	d
EIGEN_SCALAR_BINARYOP_EXPR_RETURN_TYPE	Eigen/src/Core/util/Macros.h	927;"	d
EIGEN_SCALAR_BINARY_SUPPORTED	Eigen/src/Core/util/Macros.h	920;"	d
EIGEN_SCALING_H	Eigen/src/Geometry/Scaling.h	11;"	d
EIGEN_SELECT_H	Eigen/src/Core/Select.h	11;"	d
EIGEN_SELFADJOINTEIGENSOLVER_H	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	12;"	d
EIGEN_SELFADJOINTMATRIX_H	Eigen/src/Core/SelfAdjointView.h	11;"	d
EIGEN_SELFADJOINTRANK2UPTADE_H	Eigen/src/Core/products/SelfadjointRank2Update.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_BLAS_H	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_H	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_BLAS_H	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_H	Eigen/src/Core/products/SelfadjointMatrixVector.h	11;"	d
EIGEN_SELFADJOINT_PRODUCT_H	Eigen/src/Core/products/SelfadjointProduct.h	11;"	d
EIGEN_SELFCWISEBINARYOP_H	Eigen/src/Core/SelfCwiseBinaryOp.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_H	Eigen/src/SparseCholesky/SimplicialCholesky.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_IMPL_H	Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	46;"	d
EIGEN_SIZE_MAX	Eigen/src/Core/util/Macros.h	894;"	d
EIGEN_SIZE_MIN_PREFER_DYNAMIC	Eigen/src/Core/util/Macros.h	878;"	d
EIGEN_SIZE_MIN_PREFER_FIXED	Eigen/src/Core/util/Macros.h	886;"	d
EIGEN_SOLVERBASE_H	Eigen/src/Core/SolverBase.h	11;"	d
EIGEN_SOLVETRIANGULAR_H	Eigen/src/Core/SolveTriangular.h	11;"	d
EIGEN_SOLVEWITHGUESS_H	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	11;"	d
EIGEN_SOLVE_H	Eigen/src/Core/Solve.h	11;"	d
EIGEN_SPARSEASSIGN_H	Eigen/src/SparseCore/SparseAssign.h	11;"	d
EIGEN_SPARSEDENSEPRODUCT_H	Eigen/src/SparseCore/SparseDenseProduct.h	11;"	d
EIGEN_SPARSELU_GEMM_KERNEL_H	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	11;"	d
EIGEN_SPARSELU_MEMORY	Eigen/src/SparseLU/SparseLU_Memory.h	32;"	d
EIGEN_SPARSELU_SUPERNODAL_MATRIX_H	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	12;"	d
EIGEN_SPARSELU_UTILS_H	Eigen/src/SparseLU/SparseLU_Utils.h	12;"	d
EIGEN_SPARSEMATRIXBASE_H	Eigen/src/SparseCore/SparseMatrixBase.h	11;"	d
EIGEN_SPARSEMATRIX_H	Eigen/src/SparseCore/SparseMatrix.h	11;"	d
EIGEN_SPARSEPRODUCT_H	Eigen/src/SparseCore/SparseProduct.h	11;"	d
EIGEN_SPARSEREDUX_H	Eigen/src/SparseCore/SparseRedux.h	11;"	d
EIGEN_SPARSESOLVERBASE_H	Eigen/src/SparseCore/SparseSolverBase.h	11;"	d
EIGEN_SPARSESPARSEPRODUCTWITHPRUNING_H	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	11;"	d
EIGEN_SPARSETRANSPOSE_H	Eigen/src/SparseCore/SparseTranspose.h	11;"	d
EIGEN_SPARSETRIANGULARSOLVER_H	Eigen/src/SparseCore/TriangularSolver.h	11;"	d
EIGEN_SPARSEUTIL_H	Eigen/src/SparseCore/SparseUtil.h	11;"	d
EIGEN_SPARSEVECTOR_H	Eigen/src/SparseCore/SparseVector.h	11;"	d
EIGEN_SPARSEVIEW_H	Eigen/src/SparseCore/SparseView.h	12;"	d
EIGEN_SPARSE_AMD_H	Eigen/src/OrderingMethods/Amd.h	32;"	d
EIGEN_SPARSE_BLOCK_H	Eigen/src/SparseCore/SparseBlock.h	11;"	d
EIGEN_SPARSE_COMPRESSED_BASE_H	Eigen/src/SparseCore/SparseCompressedBase.h	11;"	d
EIGEN_SPARSE_CWISE_BINARY_OP_H	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	11;"	d
EIGEN_SPARSE_CWISE_UNARY_OP_H	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	11;"	d
EIGEN_SPARSE_DIAGONAL_PRODUCT_H	Eigen/src/SparseCore/SparseDiagonalProduct.h	11;"	d
EIGEN_SPARSE_DOT_H	Eigen/src/SparseCore/SparseDot.h	11;"	d
EIGEN_SPARSE_FUZZY_H	Eigen/src/SparseCore/SparseFuzzy.h	11;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATOR	Eigen/src/SparseCore/SparseUtil.h	21;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATORS	Eigen/src/SparseCore/SparseUtil.h	39;"	d
EIGEN_SPARSE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	Eigen/src/SparseCore/SparseUtil.h	32;"	d
EIGEN_SPARSE_LU_H	Eigen/src/SparseLU/SparseLU.h	13;"	d
EIGEN_SPARSE_MAP_H	Eigen/src/SparseCore/SparseMap.h	11;"	d
EIGEN_SPARSE_PERMUTATION_H	Eigen/src/SparseCore/SparsePermutation.h	11;"	d
EIGEN_SPARSE_PUBLIC_INTERFACE	Eigen/src/SparseCore/SparseUtil.h	43;"	d
EIGEN_SPARSE_QR_H	Eigen/src/SparseQR/SparseQR.h	12;"	d
EIGEN_SPARSE_REF_H	Eigen/src/SparseCore/SparseRef.h	11;"	d
EIGEN_SPARSE_SELFADJOINTVIEW_H	Eigen/src/SparseCore/SparseSelfAdjointView.h	11;"	d
EIGEN_SPARSE_TRIANGULARVIEW_H	Eigen/src/SparseCore/SparseTriangularView.h	12;"	d
EIGEN_STABLENORM_H	Eigen/src/Core/StableNorm.h	11;"	d
EIGEN_STACK_ALLOCATION_LIMIT	Eigen/src/Core/util/Macros.h	799;"	d
EIGEN_STATIC_ASSERT	Eigen/src/Core/util/StaticAssert.h	117;"	d
EIGEN_STATIC_ASSERT	Eigen/src/Core/util/StaticAssert.h	32;"	d
EIGEN_STATIC_ASSERT_ARRAYXPR	Eigen/src/Core/util/StaticAssert.h	201;"	d
EIGEN_STATIC_ASSERT_DYNAMIC_SIZE	Eigen/src/Core/util/StaticAssert.h	147;"	d
EIGEN_STATIC_ASSERT_FIXED_SIZE	Eigen/src/Core/util/StaticAssert.h	142;"	d
EIGEN_STATIC_ASSERT_H	Eigen/src/Core/util/StaticAssert.h	12;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	Eigen/src/Core/MapBase.h	14;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	Eigen/src/Core/MapBase.h	295;"	d
EIGEN_STATIC_ASSERT_LVALUE	Eigen/src/Core/util/StaticAssert.h	197;"	d
EIGEN_STATIC_ASSERT_MATRIX_SPECIFIC_SIZE	Eigen/src/Core/util/StaticAssert.h	157;"	d
EIGEN_STATIC_ASSERT_NON_INTEGER	Eigen/src/Core/util/StaticAssert.h	182;"	d
EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE	Eigen/src/Core/util/StaticAssert.h	187;"	d
EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE	Eigen/src/Core/util/StaticAssert.h	162;"	d
EIGEN_STATIC_ASSERT_SAME_XPR_KIND	Eigen/src/Core/util/StaticAssert.h	205;"	d
EIGEN_STATIC_ASSERT_SIZE_1x1	Eigen/src/Core/util/StaticAssert.h	192;"	d
EIGEN_STATIC_ASSERT_VECTOR_ONLY	Eigen/src/Core/util/StaticAssert.h	137;"	d
EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE	Eigen/src/Core/util/StaticAssert.h	152;"	d
EIGEN_STDDEQUE_H	Eigen/src/StlSupport/StdDeque.h	12;"	d
EIGEN_STDLIST_H	Eigen/src/StlSupport/StdList.h	11;"	d
EIGEN_STDVECTOR_H	Eigen/src/StlSupport/StdVector.h	12;"	d
EIGEN_STD_DEQUE_SPECIALIZATION_BODY	Eigen/src/StlSupport/StdDeque.h	52;"	d
EIGEN_STD_LIST_SPECIALIZATION_BODY	Eigen/src/StlSupport/StdList.h	52;"	d
EIGEN_STD_VECTOR_SPECIALIZATION_BODY	Eigen/src/StlSupport/StdVector.h	52;"	d
EIGEN_STL_DETAILS_H	Eigen/src/StlSupport/details.h	12;"	d
EIGEN_STL_FUNCTORS_H	Eigen/src/Core/functors/StlFunctors.h	11;"	d
EIGEN_STRIDE_H	Eigen/src/Core/Stride.h	11;"	d
EIGEN_STRONG_INLINE	Eigen/src/Core/util/Macros.h	491;"	d
EIGEN_STRONG_INLINE	Eigen/src/Core/util/Macros.h	493;"	d
EIGEN_SUITESPARSEQRSUPPORT_H	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	12;"	d
EIGEN_SUPERLUSUPPORT_H	Eigen/src/SuperLUSupport/SuperLUSupport.h	11;"	d
EIGEN_SUPERLU_HAS_ILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	70;"	d
EIGEN_SUPERLU_HAS_ILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	820;"	d
EIGEN_SVDBASE_H	Eigen/src/SVD/SVDBase.h	17;"	d
EIGEN_SWAP_H	Eigen/src/Core/Swap.h	11;"	d
EIGEN_TERNARY_FUNCTORS_H	Eigen/src/Core/functors/TernaryFunctors.h	11;"	d
EIGEN_THROW	Eigen/src/Core/util/Macros.h	963;"	d
EIGEN_THROW_X	Eigen/src/Core/util/Macros.h	962;"	d
EIGEN_TMP_NOOPT_ATTRIB	Eigen/src/Core/MathFunctions.h	794;"	d
EIGEN_TMP_NOOPT_ATTRIB	Eigen/src/Core/MathFunctions.h	798;"	d
EIGEN_TMP_NOOPT_ATTRIB	Eigen/src/Core/MathFunctions.h	808;"	d
EIGEN_TRANSFORM_H	Eigen/src/Geometry/Transform.h	13;"	d
EIGEN_TRANSLATION_H	Eigen/src/Geometry/Translation.h	11;"	d
EIGEN_TRANSPOSE_H	Eigen/src/Core/Transpose.h	12;"	d
EIGEN_TRANSPOSITIONS_H	Eigen/src/Core/Transpositions.h	11;"	d
EIGEN_TRIANGULARMATRIXVECTOR_H	Eigen/src/Core/products/TriangularMatrixVector.h	11;"	d
EIGEN_TRIANGULARMATRIX_H	Eigen/src/Core/TriangularMatrix.h	12;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_BLAS_H	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	34;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_H	Eigen/src/Core/products/TriangularMatrixMatrix.h	11;"	d
EIGEN_TRIANGULAR_MATRIX_VECTOR_BLAS_H	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_BLAS_H	Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_H	Eigen/src/Core/products/TriangularSolverMatrix.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_VECTOR_H	Eigen/src/Core/products/TriangularSolverVector.h	11;"	d
EIGEN_TRIDIAGONALIZATION_H	Eigen/src/Eigenvalues/Tridiagonalization.h	12;"	d
EIGEN_TRY	Eigen/src/Core/util/Macros.h	964;"	d
EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH	Eigen/src/Core/arch/Default/Settings.h	38;"	d
EIGEN_TYPE_CASTING_AVX_H	Eigen/src/Core/arch/AVX/TypeCasting.h	11;"	d
EIGEN_TYPE_CASTING_CUDA_H	Eigen/src/Core/arch/CUDA/TypeCasting.h	11;"	d
EIGEN_TYPE_CASTING_SSE_H	Eigen/src/Core/arch/SSE/TypeCasting.h	11;"	d
EIGEN_UMEYAMA_H	Eigen/src/Geometry/Umeyama.h	11;"	d
EIGEN_UMFPACKSUPPORT_H	Eigen/src/UmfPackSupport/UmfPackSupport.h	11;"	d
EIGEN_UNALIGNED_VECTORIZE	Eigen/src/Core/util/Macros.h	784;"	d
EIGEN_UNARY_FUNCTORS_H	Eigen/src/Core/functors/UnaryFunctors.h	11;"	d
EIGEN_UNROLLING_LIMIT	Eigen/src/Core/arch/Default/Settings.h	24;"	d
EIGEN_UNUSED	Eigen/src/Core/util/Macros.h	605;"	d
EIGEN_UNUSED_VARIABLE	Eigen/src/Core/util/Macros.h	616;"	d
EIGEN_USE_BLAS	Eigen/src/Core/util/MKL_support.h	38;"	d
EIGEN_USE_LAPACKE	Eigen/src/Core/util/MKL_support.h	41;"	d
EIGEN_USE_LAPACKE	Eigen/src/Core/util/MKL_support.h	49;"	d
EIGEN_USE_LAPACKE	Eigen/src/Core/util/MKL_support.h	67;"	d
EIGEN_USE_LAPACKE	Eigen/src/Core/util/MKL_support.h	70;"	d
EIGEN_USE_LAPACKE_STRICT	Eigen/src/Core/util/MKL_support.h	69;"	d
EIGEN_USE_MKL	Eigen/src/Core/util/MKL_support.h	53;"	d
EIGEN_USE_MKL	Eigen/src/Core/util/MKL_support.h	60;"	d
EIGEN_USE_MKL	Eigen/src/Core/util/MKL_support.h	62;"	d
EIGEN_USE_MKL_ALL	Eigen/src/Core/util/MKL_support.h	66;"	d
EIGEN_USE_MKL_VML	Eigen/src/Core/util/MKL_support.h	44;"	d
EIGEN_USE_MKL_VML	Eigen/src/Core/util/MKL_support.h	68;"	d
EIGEN_USE_STD_FPCLASSIFY	Eigen/src/Core/MathFunctions.h	708;"	d
EIGEN_USE_STD_FPCLASSIFY	Eigen/src/Core/MathFunctions.h	710;"	d
EIGEN_USING_ARRAY_TYPEDEFS	Eigen/src/Core/Array.h	322;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE	Eigen/src/Core/Array.h	316;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE_AND_SIZE	Eigen/src/Core/Array.h	311;"	d
EIGEN_VECTORBLOCK_H	Eigen/src/Core/VectorBlock.h	12;"	d
EIGEN_VERSION_AT_LEAST	Eigen/src/Core/util/Macros.h	18;"	d
EIGEN_VISITOR_H	Eigen/src/Core/Visitor.h	11;"	d
EIGEN_VMLMODE_EXPAND_LA	Eigen/src/Core/Assign_MKL.h	71;"	d
EIGEN_VMLMODE_EXPAND_LA	Eigen/src/Core/Assign_MKL.h	73;"	d
EIGEN_VMLMODE_EXPAND__	Eigen/src/Core/Assign_MKL.h	76;"	d
EIGEN_VMLMODE_PREFIX	Eigen/src/Core/Assign_MKL.h	80;"	d
EIGEN_VMLMODE_PREFIX_LA	Eigen/src/Core/Assign_MKL.h	78;"	d
EIGEN_VMLMODE_PREFIX__	Eigen/src/Core/Assign_MKL.h	79;"	d
EIGEN_WARNINGS_DISABLED	Eigen/src/Core/util/DisableStupidWarnings.h	2;"	d
EIGEN_WARNINGS_DISABLED	Eigen/src/Core/util/ReenableStupidWarnings.h	2;"	d
EIGEN_WORKAROUND_MSVC_STL_SUPPORT	Eigen/src/StlSupport/details.h	54;"	d
EIGEN_WORLD_VERSION	Eigen/src/Core/util/Macros.h	14;"	d
EIGEN_XPRHELPER_H	Eigen/src/Core/util/XprHelper.h	12;"	d
EIGEN_ZVECTOR_PREFETCH	Eigen/src/Core/arch/ZVector/PacketMath.h	129;"	d
EIGEN_ZVECTOR_PREFETCH	Eigen/src/Core/arch/ZVector/PacketMath.h	131;"	d
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	cmake-build-debug/Makefile	/^EQUALS = =$/;"	m
EigVecMask	Eigen/src/Core/util/Constants.h	/^  EigVecMask = EigenvaluesOnly | ComputeEigenvectors,$/;"	e	enum:Eigen::DecompositionOptions
Eigen	Eigen/src/Cholesky/LDLT.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Cholesky/LLT.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Cholesky/LLT_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Array.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/ArrayBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/ArrayWrapper.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Assign.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/AssignEvaluator.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Assign_MKL.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/BandMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Block.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/BooleanRedux.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/CommaInitializer.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/ConditionEstimator.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/CoreEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/CoreIterators.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/CwiseBinaryOp.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/CwiseNullaryOp.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/CwiseTernaryOp.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/CwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/CwiseUnaryView.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/DenseBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/DenseCoeffsBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/DenseStorage.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Diagonal.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/DiagonalMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/DiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Dot.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/EigenBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/ForceAlignedAccess.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Fuzzy.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/GeneralProduct.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/GenericPacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/GlobalFunctions.h	/^namespace Eigen$/;"	n
Eigen	Eigen/src/Core/IO.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Inverse.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Map.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/MapBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/MathFunctionsImpl.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Matrix.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/MatrixBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/NestByValue.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/NoAlias.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/NumTraits.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/PermutationMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/PlainObjectBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Product.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/ProductEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Random.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Redux.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Ref.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Replicate.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/ReturnByValue.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Reverse.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Select.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/SelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Solve.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/SolveTriangular.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/SolverBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/StableNorm.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Stride.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Swap.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Transpose.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/Transpositions.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/TriangularMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/VectorwiseOp.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/Visitor.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/arch/AVX/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AVX512/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/Half.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/NEON/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/SSE/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/ZVector/Complex.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/arch/ZVector/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/BinaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/NullaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/StlFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/TernaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/functors/UnaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/Parallelizer.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/SelfadjointProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/products/TriangularSolverVector.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/BlasUtil.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/Constants.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/ForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/MKL_support.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/Macros.h	/^    namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/Macros.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/Memory.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/Meta.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/StaticAssert.h	/^    namespace Eigen {$/;"	n
Eigen	Eigen/src/Core/util/XprHelper.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/EigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/RealQZ.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Eigenvalues/RealSchur.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/EulerAngles.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Homogeneous.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/OrthoMethods.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/Umeyama.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Householder/BlockHouseholder.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Householder/Householder.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/Householder/HouseholderSequence.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^namespace Eigen {  $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/Jacobi/Jacobi.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/LU/Determinant.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/LU/FullPivLU.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/LU/InverseImpl.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/LU/PartialPivLU.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/LU/PartialPivLU_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/LU/arch/Inverse_SSE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/MetisSupport/MetisSupport.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/OrderingMethods/Amd.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/OrderingMethods/Ordering.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/QR/ColPivHouseholderQR.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/QR/FullPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/QR/HouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/QR/HouseholderQR_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SVD/BDCSVD.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SVD/JacobiSVD.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SVD/JacobiSVD_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SVD/SVDBase.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SVD/UpperBidiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/AmbiVector.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/CompressedStorage.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseAssign.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseBlock.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseColEtree.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseDot.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseFuzzy.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseMap.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparsePermutation.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseRedux.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseRef.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseTranspose.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseTriangularView.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseCore/SparseUtil.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseVector.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/SparseView.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseCore/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/SparseLU/SparseLU.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLUImpl.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SparseQR/SparseQR.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/StlSupport/details.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace Eigen {$/;"	n
Eigen	Eigen/src/misc/Image.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/misc/Kernel.h	/^namespace Eigen { $/;"	n
Eigen	Eigen/src/misc/RealSvd2x2.h	/^namespace Eigen {$/;"	n
EigenBase	Eigen/src/Core/EigenBase.h	/^template<typename Derived> struct EigenBase$/;"	s	namespace:Eigen
EigenBase2EigenBase	Eigen/src/Core/AssignEvaluator.h	/^struct EigenBase2EigenBase {};$/;"	s	namespace:Eigen::internal
EigenNormalRandomVariable	tools/random_variable.hpp	/^    EigenNormalRandomVariable(Eigen::MatrixXd const& covar)$/;"	f	struct:EigenNormalRandomVariable
EigenNormalRandomVariable	tools/random_variable.hpp	/^    EigenNormalRandomVariable(Eigen::VectorXd const& mean, Eigen::MatrixXd const& covar)$/;"	f	struct:EigenNormalRandomVariable
EigenNormalRandomVariable	tools/random_variable.hpp	/^struct EigenNormalRandomVariable$/;"	s
EigenSolver	Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver() : m_eivec(), m_eivalues(), m_isInitialized(false), m_realSchur(), m_matT(), m_tmp() {}$/;"	f	class:Eigen::EigenSolver
EigenSolver	Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(Index size)$/;"	f	class:Eigen::EigenSolver
EigenSolver	Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(const EigenBase<InputType>& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::EigenSolver
EigenSolver	Eigen/src/Eigenvalues/EigenSolver.h	/^template<typename _MatrixType> class EigenSolver$/;"	c	namespace:Eigen
Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl	Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl;$/;"	t	class:Eigen::ArrayBase
EigenvalueType	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options&(~RowMajor), MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvalueType	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::EigenSolver
EigenvalueType	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef CwiseBinaryOp<internal::scalar_quotient_op<ComplexScalar,Scalar>,ComplexVectorType,VectorType> EigenvalueType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvalueType	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealQZ
EigenvalueType	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealSchur
EigenvaluesOnly	Eigen/src/Core/util/Constants.h	/^  EigenvaluesOnly     = 0x40,$/;"	e	enum:Eigen::DecompositionOptions
EigenvaluesReturnType	Eigen/src/Core/DenseBase.h	/^    typedef Matrix<typename NumTraits<typename internal::traits<Derived>::Scalar>::Real, internal::traits<Derived>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::DenseBase
EigenvaluesReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef Matrix<std::complex<RealScalar>, internal::traits<Derived>::ColsAtCompileTime, 1, ColMajor> EigenvaluesReturnType;$/;"	t	class:Eigen::MatrixBase
EigenvaluesReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef Matrix<RealScalar, internal::traits<MatrixType>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::SelfAdjointView
EigenvectorType	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvectorsType	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::EigenSolver
EigenvectorsType	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvectorsType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Matrix<Scalar,Size,Size,ColMajor,MaxColsAtCompileTime,MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
EigenvectorsType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::EigenvectorsType EigenvectorsType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
ElseMatrixNested	Eigen/src/Core/Select.h	/^  typedef typename ElseMatrixType::Nested ElseMatrixNested;$/;"	t	struct:Eigen::internal::traits
EnableCoeff	Eigen/src/Core/Product.h	/^      EnableCoeff = IsOneByOne || Option==LazyProduct$/;"	e	enum:Eigen::ProductImpl::__anon424
EnableVml	Eigen/src/Core/Assign_MKL.h	/^      EnableVml = MightEnableVml && LargeEnough,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon241
Equation	models/models.hpp	/^    Equation(int dim):dim(dim),eigvec_prev(0)$/;"	f	class:Equation
Equation	models/models.hpp	/^class Equation$/;"	c
ErfReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_erf_op<Scalar>, const Derived> ErfReturnType;$/;"	t
ErfcReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_erfc_op<Scalar>, const Derived> ErfcReturnType;$/;"	t
EssentialVectorType	Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::hseq_side_dependent_impl<VectorsType,CoeffsType,Side>::EssentialVectorType EssentialVectorType;$/;"	t	class:Eigen::HouseholderSequence
EssentialVectorType	Eigen/src/Householder/HouseholderSequence.h	/^  typedef Block<const VectorsType, Dynamic, 1> EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EssentialVectorType	Eigen/src/Householder/HouseholderSequence.h	/^  typedef Transpose<Block<const VectorsType, 1, Dynamic> > EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EulerExplicit	core_methods.hpp	/^  EulerExplicit(Equation *e):StepIntegrator(e){}$/;"	f	class:EulerExplicit
EulerExplicit	core_methods.hpp	/^class EulerExplicit:public StepIntegrator $/;"	c
EulerExplicit	methods/core_methods.hpp	/^  EulerExplicit(Equation *e):StepIntegrator(e){}$/;"	f	class:EulerExplicit
EulerExplicit	methods/core_methods.hpp	/^class EulerExplicit:public StepIntegrator $/;"	c
EulerExplicit	methods/step_integrators.hpp	/^  EulerExplicit(Equation *e):StepIntegrator(e){}$/;"	f	class:EulerExplicit
EulerExplicit	methods/step_integrators.hpp	/^class EulerExplicit:public StepIntegrator $/;"	c
EvalBeforeAssigningBit	Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeAssigningBit = 0x4; \/\/ FIXME deprecated$/;"	m	namespace:Eigen
EvalBeforeNestingBit	Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeNestingBit = 0x2;$/;"	m	namespace:Eigen
EvalIterator	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	Eigen/src/SparseCore/SparseView.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalReturnType	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;$/;"	t	class:Eigen::DenseBase
EvalToRowMajor	Eigen/src/Core/ProductEvaluators.h	/^    EvalToRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
EvalToTemp	Eigen/src/Core/CoreEvaluators.h	/^  explicit EvalToTemp(const ArgType& arg)$/;"	f	class:Eigen::internal::EvalToTemp
EvalToTemp	Eigen/src/Core/CoreEvaluators.h	/^class EvalToTemp$/;"	c	namespace:Eigen::internal
EvaluatorFlags	Eigen/src/Core/Matrix.h	/^    EvaluatorFlags = LinearAccessBit | DirectAccessBit | packet_access_bit | row_major_bit,$/;"	e	enum:Eigen::internal::traits::__anon451
EvaluatorType	Eigen/src/Core/CoreIterators.h	/^  typedef evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::internal::inner_iterator_selector
EvaluatorType	Eigen/src/Core/CoreIterators.h	/^  typedef internal::evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::InnerIterator
ExpReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_exp_op<Scalar>, const Derived> ExpReturnType;$/;"	t
ExpandMem	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  enum { ExpandMem = true };$/;"	e	enum:Eigen::internal::column_dfs_traits::__anon118
ExpandMem	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  enum { ExpandMem = false };$/;"	e	enum:Eigen::internal::panel_dfs_traits::__anon121
ExpressionTraits	Eigen/src/Core/CoreEvaluators.h	/^  typedef traits<ExpressionType> ExpressionTraits;$/;"	t	struct:Eigen::internal::evaluator_base
ExpressionType	Eigen/src/Core/SelfAdjointView.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionType	Eigen/src/Core/TriangularMatrix.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionTypeNested	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type ExpressionTypeNested;$/;"	t	class:Eigen::VectorwiseOp
ExpressionTypeNestedCleaned	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::remove_all<ExpressionTypeNested>::type ExpressionTypeNestedCleaned;$/;"	t	class:Eigen::VectorwiseOp
ExtendedType	Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct ExtendedType {$/;"	s	class:Eigen::VectorwiseOp
ExtractType	Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType>  ExtractType; \/\/ const to get rid of a compile error; anyway blas traits are only used on the RHS$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	Eigen/src/Core/util/BlasUtil.h	/^  typedef const XprType& ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename Base::ExtractType ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
F	methods/stabilized_methods.hpp	/^    Real** F;  \/\/ holding values of different stages$/;"	m	class:RKC
F	methods/stabilized_methods.hpp	/^    Real** F;  \/\/ holding values of different stages$/;"	m	class:ROCK2
FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED	Eigen/src/Core/util/StaticAssert.h	/^        FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
FP32	Eigen/src/Core/arch/CUDA/Half.h	/^union FP32 {$/;"	u	namespace:Eigen::half_impl
F_error	methods/stabilized_methods.hpp	/^    Real *F_error;$/;"	m	class:ROCK2
Factor	Eigen/src/Core/CoreEvaluators.h	/^    Factor = (RowFactor==Dynamic || ColFactor==Dynamic) ? Dynamic : RowFactor*ColFactor$/;"	e	enum:Eigen::internal::unary_evaluator::__anon317
FactorType	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteCholesky
FactorType	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteLUT
FitzHughInverse	models/inverse_model.hpp	/^    FitzHughInverse(const std::vector<Real> & parameters, const std::vector< Real>& t_obs , std::vector<RandomVariable*>& prior_distribution, Real noise_variance)  \/\/ probably I should make prior and posterior noises nicer..$/;"	f	class:FitzHughInverse
FitzHughInverse	models/inverse_model.hpp	/^class FitzHughInverse:public InverseProblem$/;"	c
FitzHughNagumo	models/models.hpp	/^    FitzHughNagumo(Real a,Real b,Real c):Equation(2),a(a),b(b),c(c) { }$/;"	f	class:FitzHughNagumo
FitzHughNagumo	models/models.hpp	/^class FitzHughNagumo:public Equation$/;"	c
FixedBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct FixedBlockXpr { typedef Block<Derived,Rows,Cols> Type; };$/;"	s
FixedSegmentReturnType	Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	s
FixedTimeSteppingMethod	methods/core_methods.hpp	/^    FixedTimeSteppingMethod(Model&m, Real h0, StepIntegrator& base_integrator):NumericalMethod(m,h0,base_integrator){}$/;"	f	class:FixedTimeSteppingMethod
FixedTimeSteppingMethod	methods/core_methods.hpp	/^class FixedTimeSteppingMethod: public NumericalMethod$/;"	c
Flags	Eigen/src/Core/ArrayWrapper.h	/^    Flags = (Flags0 & ~(NestByRefBit | LvalueBit)) | LvalueBitFlag$/;"	e	enum:Eigen::internal::traits::__anon129
Flags	Eigen/src/Core/ArrayWrapper.h	/^    Flags = (Flags0 & ~(NestByRefBit | LvalueBit)) | LvalueBitFlag$/;"	e	enum:Eigen::internal::traits::__anon130
Flags	Eigen/src/Core/BandMatrix.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
Flags	Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon234
Flags	Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon235
Flags	Eigen/src/Core/Block.h	/^    Flags = (traits<XprType>::Flags & (DirectAccessBit | (InnerPanel?CompressedAccessBit:0))) | FlagsLvalueBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon245
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (Flags0 & ~RowMajorBit) | (Arg1Flags & RowMajorBit),$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (Flags0 & ~RowMajorBit) | (LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgType>::Flags & (HereditaryBits | LinearAccessBit | DirectAccessBit)),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon310
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgTypeNestedCleaned>::Flags & (HereditaryBits|LinearAccessMask) & ~RowMajorBit) | (traits<XprType>::Flags & RowMajorBit),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon318
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<PlainObjectTypeCleaned>::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon306
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (traits<XprType>::Flags&RowMajorBit) | (evaluator<ArgType>::Flags&(HereditaryBits&(~RowMajorBit))) | LinearAccessBit,$/;"	e	enum:Eigen::internal::evaluator::__anon320
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)(evaluator<ArgType>::Flags & (HereditaryBits | DirectAccessBit) & ~RowMajorBit) | LinearAccessBit,$/;"	e	enum:Eigen::internal::evaluator::__anon323
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)evaluator<ThenMatrixType>::Flags & evaluator<ElseMatrixType>::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::evaluator::__anon316
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = Flags0 | FlagsLinearAccessBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon314
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags ^ RowMajorBit,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon305
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon307
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon321
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Flags,$/;"	e	enum:Eigen::internal::evaluator::__anon313
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = int( evaluator<PlainObjectType>::Flags) & (LinearAccessMask&PacketAccessMask),$/;"	e	enum:Eigen::internal::evaluator::__anon312
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = int(Flags0) & (HereditaryBits | PacketAccessBit | LinearAccess),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
Flags	Eigen/src/Core/CoreEvaluators.h	/^    Flags = traits<Derived>::EvaluatorFlags,$/;"	e	enum:Eigen::internal::evaluator::__anon304
Flags	Eigen/src/Core/CwiseBinaryOp.h	/^    Flags = cwise_promote_storage_order<typename traits<Lhs>::StorageKind,typename traits<Rhs>::StorageKind,_LhsNested::Flags & RowMajorBit,_RhsNested::Flags & RowMajorBit>::value$/;"	e	enum:Eigen::internal::traits::__anon227
Flags	Eigen/src/Core/CwiseNullaryOp.h	/^    Flags = traits<PlainObjectType>::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon618
Flags	Eigen/src/Core/CwiseTernaryOp.h	/^  enum { Flags = _Arg1Nested::Flags & RowMajorBit };$/;"	e	enum:Eigen::internal::traits::__anon274
Flags	Eigen/src/Core/CwiseUnaryOp.h	/^    Flags = _XprTypeNested::Flags & RowMajorBit $/;"	e	enum:Eigen::internal::traits::__anon430
Flags	Eigen/src/Core/CwiseUnaryView.h	/^    Flags = traits<_MatrixTypeNested>::Flags & (RowMajorBit | FlagsLvalueBit | DirectAccessBit), \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon619
Flags	Eigen/src/Core/DenseBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::DenseBase::__anon420
Flags	Eigen/src/Core/Diagonal.h	/^    Flags = (unsigned int)_MatrixTypeNested::Flags & (RowMajorBit | MaskLvalueBit | DirectAccessBit) & ~RowMajorBit, \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon271
Flags	Eigen/src/Core/DiagonalMatrix.h	/^      Flags = NoPreferredStorageOrderBit$/;"	e	enum:Eigen::DiagonalBase::__anon457
Flags	Eigen/src/Core/DiagonalMatrix.h	/^    Flags =  (traits<DiagonalVectorType>::Flags & LvalueBit) | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon459
Flags	Eigen/src/Core/DiagonalMatrix.h	/^    Flags = LvalueBit | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon458
Flags	Eigen/src/Core/Inverse.h	/^    Flags = BaseTraits::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon616
Flags	Eigen/src/Core/Inverse.h	/^  enum { Flags = Base::Flags | EvalBeforeNestingBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon617
Flags	Eigen/src/Core/Map.h	/^    Flags = is_lvalue<PlainObjectType>::value ? int(Flags0) : (int(Flags0) & ~LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon275
Flags	Eigen/src/Core/Matrix.h	/^    Flags = compute_matrix_flags<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::ret,$/;"	e	enum:Eigen::internal::traits::__anon451
Flags	Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::PermutationBase::__anon242
Flags	Eigen/src/Core/PermutationMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon243
Flags	Eigen/src/Core/Product.h	/^    Flags = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon423
Flags	Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((HereditaryBits|_LinearAccessMask) & (unsigned int)(MatrixFlags)) | (_Vectorizable ? PacketAccessBit : 0),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
Flags	Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
Flags	Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon441
Flags	Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon445
Flags	Eigen/src/Core/Redux.h	/^    Flags = evaluator<XprType>::Flags & ~DirectAccessBit,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
Flags	Eigen/src/Core/Ref.h	/^    Flags = traits<Map<_PlainObjectType, _Options, _StrideType> >::Flags | NestByRefBit,$/;"	e	enum:Eigen::internal::traits::__anon455
Flags	Eigen/src/Core/Replicate.h	/^    Flags = IsRowMajor ? RowMajorBit : 0$/;"	e	enum:Eigen::internal::traits::__anon270
Flags	Eigen/src/Core/ReturnByValue.h	/^    Flags = (traits<typename traits<Derived>::ReturnType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon568
Flags	Eigen/src/Core/Reverse.h	/^    Flags = _MatrixTypeNested::Flags & (RowMajorBit | LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon453
Flags	Eigen/src/Core/Select.h	/^    Flags = (unsigned int)ThenMatrixType::Flags & ElseMatrixType::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon131
Flags	Eigen/src/Core/SelfAdjointView.h	/^      Flags = internal::traits<SelfAdjointView>::Flags,$/;"	e	enum:Eigen::SelfAdjointView::__anon278
Flags	Eigen/src/Core/SelfAdjointView.h	/^    Flags =  MatrixTypeNestedCleaned::Flags & (HereditaryBits|FlagsLvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon277
Flags	Eigen/src/Core/Solve.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon428
Flags	Eigen/src/Core/Solve.h	/^  enum { Flags = Base::Flags | EvalBeforeNestingBit };$/;"	e	enum:Eigen::internal::evaluator::__anon429
Flags	Eigen/src/Core/Transpose.h	/^    Flags = Flags1 ^ RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon438
Flags	Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularView>::Flags,$/;"	e	enum:Eigen::TriangularView::__anon267
Flags	Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularViewType>::Flags$/;"	e	enum:Eigen::TriangularViewImpl::__anon268
Flags	Eigen/src/Core/TriangularMatrix.h	/^    Flags = (MatrixTypeNestedCleaned::Flags & (HereditaryBits | FlagsLvalueBit) & (~(PacketAccessBit | DirectAccessBit | LinearAccessBit)))$/;"	e	enum:Eigen::internal::traits::__anon266
Flags	Eigen/src/Core/VectorwiseOp.h	/^    Flags = RowsAtCompileTime == 1 ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon432
Flags	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon637
Flags	Eigen/src/Geometry/Homogeneous.h	/^    Flags = ColsAtCompileTime==1 ? (TmpFlags & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon96
Flags	Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon84
Flags	Eigen/src/Geometry/Quaternion.h	/^    Flags = Eigen::internal::traits<Derived>::Flags$/;"	e	enum:Eigen::QuaternionBase::__anon81
Flags	Eigen/src/Geometry/Quaternion.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon82
Flags	Eigen/src/Geometry/Transform.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon87
Flags	Eigen/src/Householder/HouseholderSequence.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon125
Flags	Eigen/src/LU/FullPivLU.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon643
Flags	Eigen/src/LU/PartialPivLU.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon641
Flags	Eigen/src/QR/ColPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon669
Flags	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon673
Flags	Eigen/src/QR/FullPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon671
Flags	Eigen/src/SparseCore/SparseBlock.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
Flags	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Flags = Derived::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon57
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = (XprType::Flags & ~RowMajorBit) | (int(Lhs::Flags)&RowMajorBit)$/;"	e	enum:Eigen::internal::binary_evaluator::__anon33
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = (XprType::Flags & ~RowMajorBit) | (int(LhsArg::Flags)&RowMajorBit)$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon38
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = (XprType::Flags & ~RowMajorBit) | (int(Rhs::Flags)&RowMajorBit)$/;"	e	enum:Eigen::internal::binary_evaluator::__anon31
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = (XprType::Flags & ~RowMajorBit) | (int(RhsArg::Flags)&RowMajorBit)$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon36
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon29
Flags	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon34
Flags	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon15
Flags	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon16
Flags	Eigen/src/SparseCore/SparseDenseProduct.h	/^    Flags = NeedToTranspose ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon41
Flags	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon60
Flags	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon59
Flags	Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~ (NestByRefBit | LvalueBit))$/;"	e	enum:Eigen::internal::traits::__anon18
Flags	Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~NestByRefBit)$/;"	e	enum:Eigen::internal::traits::__anon17
Flags	Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon44
Flags	Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon43
Flags	Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit | CompressedAccessBit,$/;"	e	enum:Eigen::internal::traits::__anon42
Flags	Eigen/src/SparseCore/SparseMatrixBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
Flags	Eigen/src/SparseCore/SparsePermutation.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon62
Flags	Eigen/src/SparseCore/SparsePermutation.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon63
Flags	Eigen/src/SparseCore/SparseRef.h	/^    Flags = (traits<SparseMatrix<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit) & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon5
Flags	Eigen/src/SparseCore/SparseRef.h	/^    Flags = (traits<SparseVector<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit) & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon8
Flags	Eigen/src/SparseCore/SparseRef.h	/^    Flags = traits<PlainObjectType>::Flags | CompressedAccessBit | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon3
Flags	Eigen/src/SparseCore/SparseRef.h	/^    Flags = traits<PlainObjectType>::Flags | CompressedAccessBit | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon6
Flags	Eigen/src/SparseCore/SparseTranspose.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon64
Flags	Eigen/src/SparseCore/SparseTriangularView.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon56
Flags	Eigen/src/SparseCore/SparseVector.h	/^    Flags = SparseVectorType::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon14
Flags	Eigen/src/SparseCore/SparseVector.h	/^    Flags = _Options | NestByRefBit | LvalueBit | (IsColVector ? 0 : RowMajorBit) | CompressedAccessBit,$/;"	e	enum:Eigen::internal::traits::__anon10
Flags	Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon26
Flags	Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon28
Flags	Eigen/src/SparseCore/SparseView.h	/^    Flags = int(traits<MatrixType>::Flags) & (RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon25
Flags0	Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon129
Flags0	Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon130
Flags0	Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = (int(Arg1Flags) | int(Arg2Flags) | int(Arg3Flags)) & ($/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
Flags0	Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = (int(LhsFlags) | int(RhsFlags)) & ($/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
Flags0	Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags & ( (HereditaryBits & ~RowMajorBit) |$/;"	e	enum:Eigen::internal::evaluator::__anon314
Flags0	Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
Flags0	Eigen/src/Core/Map.h	/^    Flags0 = TraitsBase::Flags & (~NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon275
Flags0	Eigen/src/Core/Transpose.h	/^    Flags0 = traits<MatrixTypeNestedPlain>::Flags & ~(LvalueBit | NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon438
Flags1	Eigen/src/Core/Transpose.h	/^    Flags1 = Flags0 | FlagsLvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon438
FlagsLinearAccessBit	Eigen/src/Core/CoreEvaluators.h	/^    FlagsLinearAccessBit = (RowsAtCompileTime == 1 || ColsAtCompileTime == 1 || (InnerPanel && (evaluator<ArgType>::Flags&LinearAccessBit))) ? LinearAccessBit : 0,    $/;"	e	enum:Eigen::internal::evaluator::__anon314
FlagsLvalueBit	Eigen/src/Core/Block.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon245
FlagsLvalueBit	Eigen/src/Core/CwiseUnaryView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon619
FlagsLvalueBit	Eigen/src/Core/SelfAdjointView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon277
FlagsLvalueBit	Eigen/src/Core/Transpose.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon438
FlagsLvalueBit	Eigen/src/Core/TriangularMatrix.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon266
FlagsRowMajorBit	Eigen/src/Core/Block.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon245
FlagsRowMajorBit	Eigen/src/Core/CoreEvaluators.h	/^    FlagsRowMajorBit = XprType::Flags&RowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon314
FloorReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_floor_op<Scalar>, const Derived> FloorReturnType;$/;"	t
ForceAlignedAccess	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC explicit inline ForceAlignedAccess(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ForceAlignedAccess
ForceAlignedAccess	Eigen/src/Core/ForceAlignedAccess.h	/^template<typename ExpressionType> class ForceAlignedAccess$/;"	c	namespace:Eigen
ForceAlignment	Eigen/src/Core/GeneralProduct.h	/^    ForceAlignment  = internal::packet_traits<Scalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gemv_static_vector_if::__anon615
FromTwoVectors	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
FullMatrixType	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullMatrixType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullPivHouseholderQR	Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR()$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	Eigen/src/QR/FullPivHouseholderQR.h	/^    explicit FullPivHouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	Eigen/src/QR/FullPivHouseholderQR.h	/^    explicit FullPivHouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> class FullPivHouseholderQR$/;"	c	namespace:Eigen
FullPivHouseholderQRMatrixQReturnType	Eigen/src/QR/FullPivHouseholderQR.h	/^  FullPivHouseholderQRMatrixQReturnType(const MatrixType&       qr,$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
FullPivHouseholderQRMatrixQReturnType	Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename MatrixType> struct FullPivHouseholderQRMatrixQReturnType$/;"	s	namespace:Eigen::internal
FullPivHouseholderQRPreconditioner	Eigen/src/Core/util/Constants.h	/^  FullPivHouseholderQRPreconditioner$/;"	e	enum:Eigen::QRPreconditioners
FullPivLU	Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU()$/;"	f	class:Eigen::FullPivLU
FullPivLU	Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(Index rows, Index cols)$/;"	f	class:Eigen::FullPivLU
FullPivLU	Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> class FullPivLU$/;"	c	namespace:Eigen
FullPrecision	Eigen/src/Core/IO.h	/^       FullPrecision = -2 };$/;"	e	enum:Eigen::__anon225
Functor	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<BinaryOp>::type Functor;$/;"	t	class:Eigen::CwiseBinaryOp
Functor	Eigen/src/Core/Swap.h	/^  typedef swap_assign_op<Scalar> Functor;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
FunctorType	Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon208
FunctorType	Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon209
FunctorType	Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon210
GEMM_SPECIALIZATION	Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	49;"	d
GemmParallelInfo	Eigen/src/Core/products/Parallelizer.h	/^  GemmParallelInfo() : sync(-1), users(0), lhs_start(0), lhs_length(0) {}$/;"	f	struct:Eigen::internal::GemmParallelInfo
GemmParallelInfo	Eigen/src/Core/products/Parallelizer.h	/^template<typename Index> struct GemmParallelInfo$/;"	s	namespace:Eigen::internal
GemmProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
GemvProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
GenEigMask	Eigen/src/Core/util/Constants.h	/^  GenEigMask = Ax_lBx | ABx_lx | BAx_lx$/;"	e	enum:Eigen::DecompositionOptions
GeneralizedEigenSolver	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver()$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver(const MatrixType& A, const MatrixType& B, bool computeEigenvectors = true)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    explicit GeneralizedEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^template<typename _MatrixType> class GeneralizedEigenSolver$/;"	c	namespace:Eigen
GeneralizedSelfAdjointEigenSolver	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver() : Base() {}$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB,$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    explicit GeneralizedSelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^class GeneralizedSelfAdjointEigenSolver : public SelfAdjointEigenSolver<_MatrixType>$/;"	c	namespace:Eigen
Generic	Eigen/src/Core/util/Constants.h	/^    Generic = 0x0,$/;"	e	enum:Eigen::Architecture::Type
GenericNumTraits	Eigen/src/Core/NumTraits.h	/^template<typename T> struct GenericNumTraits$/;"	s	namespace:Eigen
GetAction	Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
GiacomoRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^    GiacomoRandomPathsAdaptiveScheme(Model&m, Real h0, StepIntegrator& base_integrator, Real tol, int no_paths):NumericalMethod(m,h0,base_integrator),tol(tol),no_paths(no_paths)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
GiacomoRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^class GiacomoRandomPathsAdaptiveScheme:public NumericalMethod$/;"	c
GiacomoRandomPathsAdaptiveScheme2	methods/adaptive_methods.hpp	/^    GiacomoRandomPathsAdaptiveScheme2(Model&m, Real h0, StepIntegrator& base_integrator, Real tol, int no_paths):NumericalMethod(m,h0,base_integrator),tol(tol),no_paths(no_paths)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
GiacomoRandomPathsAdaptiveScheme2	methods/adaptive_methods.hpp	/^class GiacomoRandomPathsAdaptiveScheme2:public NumericalMethod$/;"	c
GlobalLU_t	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef LU_GlobalLU_t<IndexVector, ScalarVector> GlobalLU_t; $/;"	t	class:Eigen::internal::SparseLUImpl
HCoeffsType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::ColPivHouseholderQR
HCoeffsType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
HCoeffsType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::FullPivHouseholderQR
HCoeffsType	Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
HCoeffsType	Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::HouseholderQR
HDim	Eigen/src/Geometry/Transform.h	/^    HDim = Transform::HDim,$/;"	e	enum:Eigen::internal::transform_traits::__anon86
HDim	Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon91
HDim	Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon92
HDim	Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon93
HDim	Eigen/src/Geometry/Transform.h	/^    HDim = _Dim+1,  \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon88
HEX	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
HEX	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
HEX	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
HEX	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
HNormalizedReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef EIGEN_EXPR_BINARYOP_SCALAR_RETURN_TYPE(ConstStartMinusOne,Scalar,quotient) HNormalizedReturnType;$/;"	t	class:Eigen::MatrixBase
HNormalizedReturnType	Eigen/src/Core/VectorwiseOp.h	/^            HNormalizedReturnType;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Block	Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Block;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Factors	Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Factors;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Size	Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_Size = Direction==Vertical ? internal::traits<ExpressionType>::RowsAtCompileTime$/;"	e	enum:Eigen::VectorwiseOp::__anon436
HNormalized_SizeMinusOne	Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_SizeMinusOne = HNormalized_Size==Dynamic ? Dynamic : HNormalized_Size-1$/;"	e	enum:Eigen::VectorwiseOp::__anon436
HalfLength	Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon574
HalfLength	Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon576
HalfPacket	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::BlasLinearMapper
HalfPacket	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::blas_data_mapper
HasACos	Eigen/src/Core/GenericPacketMath.h	/^    HasACos   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasASin	Eigen/src/Core/GenericPacketMath.h	/^    HasASin   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasATan	Eigen/src/Core/GenericPacketMath.h	/^    HasATan   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasAbs	Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasAbs	Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasAbs	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasAbs	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasAbs	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasAbs	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasAbs	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasAbs	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasAbs	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasAbs	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasAbs	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasAbs	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasAbs	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasAbs	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasAbs	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasAbs	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasAbs2	Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasAbs2	Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasAbs2	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasAbs2	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasAbs2	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasAbs2	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasAbs2	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasAbs2	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasAbs2	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasAbs2	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasAbs2	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasAbs2	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasAdd	Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasAdd	Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasAdd	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasAdd	Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasAdd	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasAdd	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasAdd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasAdd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasAdd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasAdd	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasAdd	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasAdd	Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasAdd	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasAdd	Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasAdd	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasAdd	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasAdd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasAdd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasAdd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasArg	Eigen/src/Core/GenericPacketMath.h	/^    HasArg    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasBetaInc	Eigen/src/Core/GenericPacketMath.h	/^    HasBetaInc = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasBetaInc	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBetaInc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasBetaInc	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBetaInc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasBlend	Eigen/src/Core/GenericPacketMath.h	/^    HasBlend  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasBlend	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasBlend	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasBlend	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasBlend  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasBlend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasBlend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasBlend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasBlend	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasBlend	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasBlend	Eigen/src/Core/arch/SSE/Complex.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasBlend	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasBlend	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasBlend	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon534
HasBlend	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasBlend  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasBlend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasBlend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasBlend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasCeil	Eigen/src/Core/GenericPacketMath.h	/^    HasCeil   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasCeil	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasCeil	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasCeil	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasCeil	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasCeil	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasCeil	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasCeil	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasCeil	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasConj	Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasConj	Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasCos	Eigen/src/Core/GenericPacketMath.h	/^    HasCos    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasCos	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasCos	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasCos	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasCos	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasCos	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasCos	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasCos	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCos  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasCos	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasCos	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasCosh	Eigen/src/Core/GenericPacketMath.h	/^    HasCosh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasDiGamma	Eigen/src/Core/GenericPacketMath.h	/^    HasDiGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasDiGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasDiGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasDirectAccess	Eigen/src/Core/Ref.h	/^      HasDirectAccess = internal::has_direct_access<Derived>::ret,$/;"	e	enum:Eigen::internal::traits::match::__anon456
HasDiv	Eigen/src/Core/GenericPacketMath.h	/^    HasDiv    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasDiv	Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasDiv	Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasDiv	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasDiv	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasDiv	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasDiv = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasDiv	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasDiv = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon498
HasDiv	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasDiv	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasDiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasDiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasDiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasDiv	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasDiv	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasDiv	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasDiv	Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasDiv	Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasDiv	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasDiv	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasDiv	Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasDiv	Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasDiv	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasDiv	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasDiv	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasDiv	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasDiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasDiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasDiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasErf	Eigen/src/Core/GenericPacketMath.h	/^    HasErf = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasErf	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErf = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasErf	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErf = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasErfc	Eigen/src/Core/GenericPacketMath.h	/^    HasErfc = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasErfc	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErfc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasErfc	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErfc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasExp	Eigen/src/Core/GenericPacketMath.h	/^    HasExp    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasExp	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasExp	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasExp	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasExp = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasExp	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasExp	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasExp	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasExp	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasExp	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasExp    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasExp	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasExp	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasExp	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasExp	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasExp	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasExp	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasFloor	Eigen/src/Core/GenericPacketMath.h	/^    HasFloor  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasFloor	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasFloor	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasFloor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasFloor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasFloor	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasFloor	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasFloor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasFloor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasHalfPacket	Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon583
HasHalfPacket	Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasHalfPacket	Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasHalfPacket	Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasHalfPacket	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasHalfPacket	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasHalfPacket	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasHalfPacket	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
HasHalfPacket	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasHalfPacket	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasHalfPacket	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasHalfPacket	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasHalfPacket	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasHalfPacket	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasHalfPacket	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasHalfPacket	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasHalfPacket	Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasHalfPacket	Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasHalfPacket	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0 \/\/ Packet2i intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon503
HasHalfPacket	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0, \/\/ Packet2f intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasHalfPacket	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasHalfPacket	Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasHalfPacket	Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasHalfPacket	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasHalfPacket	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasHalfPacket	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasHalfPacket	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasHalfPacket	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasHalfPacket	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasHalfPacket	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasIGamma	Eigen/src/Core/GenericPacketMath.h	/^    HasIGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasIGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasIGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasIGammac	Eigen/src/Core/GenericPacketMath.h	/^    HasIGammac = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasIGammac	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGammac = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasIGammac	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGammac = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasLGamma	Eigen/src/Core/GenericPacketMath.h	/^    HasLGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasLGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasLGamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasLog	Eigen/src/Core/GenericPacketMath.h	/^    HasLog    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasLog	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasLog	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasLog = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasLog	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasLog	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasLog	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasLog	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasLog	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasLog    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasLog	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasLog	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasLog	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasLog	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasLog	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasLog10	Eigen/src/Core/GenericPacketMath.h	/^    HasLog10  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasLog1p	Eigen/src/Core/GenericPacketMath.h	/^    HasLog1p  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasLog1p	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasLog1p  = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasMax	Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasMax	Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasMax	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasMax	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasMax	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasMax	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasMax	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasMax	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasMax	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasMax	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasMax	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasMax	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasMax	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasMax	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasMax	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasMax	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasMin	Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasMin	Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasMin	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasMin	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasMin	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasMin	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasMin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasMin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasMin	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasMin	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasMin	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasMin	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasMin	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasMin	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasMin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasMin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasMul	Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasMul	Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasMul	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasMul	Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasMul	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasMul	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasMul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasMul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasMul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasMul	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasMul	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasMul	Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasMul	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasMul	Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasMul	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasMul	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasMul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasMul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasMul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasNegate	Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasNegate	Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasNegate	Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasNegate	Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasNegate	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasNegate	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasNegate	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasNegate	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasNegate	Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasNegate	Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasNegate	Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasNegate	Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasNegate	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasNegate	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasNegate	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasNegate	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasNoInnerStride	Eigen/src/Core/CoreEvaluators.h	/^    HasNoInnerStride = InnerStrideAtCompileTime == 1,$/;"	e	enum:Eigen::internal::evaluator::__anon312
HasNoOuterStride	Eigen/src/Core/CoreEvaluators.h	/^    HasNoOuterStride = StrideType::OuterStrideAtCompileTime == 0,$/;"	e	enum:Eigen::internal::evaluator::__anon312
HasNoStride	Eigen/src/Core/CoreEvaluators.h	/^    HasNoStride = HasNoInnerStride && HasNoOuterStride,$/;"	e	enum:Eigen::internal::evaluator::__anon312
HasPolygamma	Eigen/src/Core/GenericPacketMath.h	/^    HasPolygamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasPolygamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasPolygamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasPolygamma	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasPolygamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasPow	Eigen/src/Core/GenericPacketMath.h	/^    HasPow    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasRound	Eigen/src/Core/GenericPacketMath.h	/^    HasRound  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasRound	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasRound	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasRound	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasRound	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasRound	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasRound	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasRound	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasRound	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasRsqrt	Eigen/src/Core/GenericPacketMath.h	/^    HasRsqrt  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasRsqrt	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasRsqrt	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasRsqrt	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasRsqrt	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasRsqrt = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
HasRsqrt	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasRsqrt	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasRsqrt	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasRsqrt	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasRsqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasRsqrt  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasRsqrt	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasRsqrt	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasRsqrt	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasRsqrt	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasSameStorageOrderAsArgType	Eigen/src/Core/CoreEvaluators.h	/^    HasSameStorageOrderAsArgType = (IsRowMajor == ArgTypeIsRowMajor),$/;"	e	enum:Eigen::internal::evaluator::__anon314
HasSameStorageOrderAsXprType	Eigen/src/Core/Block.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon245
HasSetLinear	Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasSetLinear	Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSetLinear	Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasSetLinear	Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasSetLinear	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasSetLinear	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasSetLinear	Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasSetLinear	Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasSetLinear	Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasSetLinear	Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasSetLinear	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasSetLinear	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasSign	Eigen/src/Core/GenericPacketMath.h	/^    HasSign   = 0$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSin	Eigen/src/Core/GenericPacketMath.h	/^    HasSin    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSin	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasSin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasSin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasSin	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasSin	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasSin	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasSin	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasSin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasSin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasSinh	Eigen/src/Core/GenericPacketMath.h	/^    HasSinh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSqrt	Eigen/src/Core/GenericPacketMath.h	/^    HasSqrt   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSqrt	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasSqrt	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
HasSqrt	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
HasSqrt	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
HasSqrt	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasSqrt	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasSqrt	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasSqrt	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HasSqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasSqrt   = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
HasSqrt	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon502
HasSqrt	Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon506
HasSqrt	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasSqrt	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
HasSqrt	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasSqrt	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasSub	Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon584
HasSub	Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasSub	Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
HasSub	Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
HasSub	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
HasSub	Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
HasSub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
HasSub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
HasSub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
HasSub	Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
HasSub	Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
HasSub	Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
HasSub	Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
HasSub	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
HasSub	Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
HasSub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
HasSub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
HasSub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
HasTan	Eigen/src/Core/GenericPacketMath.h	/^    HasTan    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasTanh	Eigen/src/Core/GenericPacketMath.h	/^    HasTanh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasTanh	Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasTanh  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
HasTanh	Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasTanh  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
HasUnitDiag	Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon285
HasUnitDiag	Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon286
HasUnitDiag	Eigen/src/SparseCore/SparseTriangularView.h	/^           HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::TriangularViewImpl::__anon54
HasUnitDiag	Eigen/src/SparseCore/SparseTriangularView.h	/^         HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::internal::unary_evaluator::__anon55
HasUsableDirectAccess	Eigen/src/Core/util/BlasUtil.h	/^    HasUsableDirectAccess = (    (int(XprType::Flags)&DirectAccessBit)$/;"	e	enum:Eigen::internal::blas_traits::__anon220
HasZeroDiag	Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon285
HasZeroDiag	Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon286
HasZeta	Eigen/src/Core/GenericPacketMath.h	/^    HasZeta = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon582
HasZeta	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasZeta = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
HasZeta	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasZeta = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
HereditaryBits	Eigen/src/Core/util/Constants.h	/^const unsigned int HereditaryBits = RowMajorBit$/;"	m	namespace:Eigen
HessenbergDecomposition	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename _MatrixType> class HessenbergDecomposition$/;"	c	namespace:Eigen
HessenbergDecompositionMatrixHReturnType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecompositionMatrixHReturnType(const HessenbergDecomposition<MatrixType>& hess) : m_hess(hess) { }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
HessenbergDecompositionMatrixHReturnType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename MatrixType> struct HessenbergDecompositionMatrixHReturnType$/;"	s	namespace:Eigen::internal
Heun	core_methods.hpp	/^  Heun(Equation *e):StepIntegrator(e)$/;"	f	class:Heun
Heun	core_methods.hpp	/^class Heun:public StepIntegrator $/;"	c
Heun	methods/core_methods.hpp	/^  Heun(Equation *e):StepIntegrator(e)$/;"	f	class:Heun
Heun	methods/core_methods.hpp	/^class Heun:public StepIntegrator $/;"	c
Heun	methods/step_integrators.hpp	/^  Heun(Equation *e):StepIntegrator(e)$/;"	f	class:Heun
Heun	methods/step_integrators.hpp	/^class Heun:public StepIntegrator $/;"	c
Homogeneous	Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC explicit inline Homogeneous(const MatrixType& matrix)$/;"	f	class:Eigen::Homogeneous
Homogeneous	Eigen/src/Geometry/Homogeneous.h	/^template<typename MatrixType,int _Direction> class Homogeneous$/;"	c	namespace:Eigen
HomogeneousDimension	Eigen/src/Geometry/Umeyama.h	/^    HomogeneousDimension = int(MinRowsAtCompileTime) == Dynamic ? Dynamic : int(MinRowsAtCompileTime)+1$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon85
HomogeneousReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef Homogeneous<Derived, HomogeneousReturnTypeDirection> HomogeneousReturnType;$/;"	t	class:Eigen::MatrixBase
HomogeneousReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef Homogeneous<ExpressionType,Direction> HomogeneousReturnType;$/;"	t	class:Eigen::VectorwiseOp
HomogeneousReturnTypeDirection	Eigen/src/Core/MatrixBase.h	/^    enum { HomogeneousReturnTypeDirection = ColsAtCompileTime==1&&RowsAtCompileTime==1 ? ((internal::traits<Derived>::Flags&RowMajorBit)==RowMajorBit ? Horizontal : Vertical)$/;"	e	enum:Eigen::MatrixBase::__anon251
HomogeneousShape	Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	s	namespace:Eigen
Horizontal	Eigen/src/Core/util/Constants.h	/^  Horizontal, $/;"	e	enum:Eigen::DirectionType
HouseholderQR	Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR() : m_qr(), m_hCoeffs(), m_temp(), m_isInitialized(false) {}$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	Eigen/src/QR/HouseholderQR.h	/^    explicit HouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	Eigen/src/QR/HouseholderQR.h	/^    explicit HouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	Eigen/src/QR/HouseholderQR.h	/^template<typename _MatrixType> class HouseholderQR$/;"	c	namespace:Eigen
HouseholderQRPreconditioner	Eigen/src/Core/util/Constants.h	/^  HouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
HouseholderSequence	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const HouseholderSequence& other)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	Eigen/src/Householder/HouseholderSequence.h	/^template<typename VectorsType, typename CoeffsType, int Side> class HouseholderSequence$/;"	c	namespace:Eigen
HouseholderSequenceShape	Eigen/src/Householder/HouseholderSequence.h	/^struct HouseholderSequenceShape {};$/;"	s	namespace:Eigen::internal
HouseholderSequenceType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HessenbergDecomposition
HouseholderSequenceType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::Tridiagonalization
HouseholderSequenceType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::HouseholderSequenceType HouseholderSequenceType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
HouseholderSequenceType	Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheLeft> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheRight> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::ColPivHouseholderQR
HouseholderSequenceType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      HouseholderSequenceType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
HouseholderSequenceType	Eigen/src/QR/HouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HouseholderQR
HouseholderUSequenceType	Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderUSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HouseholderVSequenceType	Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderVSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HugeCost	Eigen/src/Core/util/Constants.h	/^const int HugeCost = 10000;$/;"	m	namespace:Eigen
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC Hyperplane(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane(const VectorType& n, const Scalar& d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline explicit Hyperplane(Index _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
HypotNormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_hypotNorm,RealScalar>::Type HypotNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
ID_VOID_MAIN	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY	Eigen/src/Core/util/StaticAssert.h	/^        IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INIT_H	tools/init.hpp	2;"	d
INVALID_MATRIXBASE_TEMPLATE_PARAMETERS	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIXBASE_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVALID_MATRIX_PRODUCT	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVALID_MATRIX_TEMPLATE_PARAMETERS	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS	Eigen/src/Core/util/StaticAssert.h	/^        INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
INVERSE_MODEL_HPP	models/inverse_model.hpp	2;"	d
IOFormat	Eigen/src/Core/IO.h	/^  IOFormat(int _precision = StreamPrecision, int _flags = 0,$/;"	f	struct:Eigen::IOFormat
IOFormat	Eigen/src/Core/IO.h	/^struct IOFormat$/;"	s	namespace:Eigen
Identity	Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity()$/;"	f	class:Eigen::MatrixBase
Identity	Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
Identity	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC static inline const AngleAxis Identity() { return AngleAxis(Scalar(0), Vector3::UnitX()); }$/;"	f	class:Eigen::AngleAxis
Identity	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static inline Quaternion<Scalar> Identity() { return Quaternion<Scalar>(Scalar(1), Scalar(0), Scalar(0), Scalar(0)); }$/;"	f	class:Eigen::QuaternionBase
Identity	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC static inline Rotation2D Identity() { return Rotation2D(0); }$/;"	f	class:Eigen::Rotation2D
Identity	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static const Transform Identity()$/;"	f	class:Eigen::Transform
Identity	Eigen/src/Geometry/Translation.h	/^  static const Translation Identity() { return Translation(VectorType::Zero()); }$/;"	f	class:Eigen::Translation
IdentityPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner() {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit IdentityPreconditioner(const MatrixType& ) {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class IdentityPreconditioner$/;"	c	namespace:Eigen
IdentityReturnType	Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_identity_op<Scalar>,PlainObject> IdentityReturnType;$/;"	t	class:Eigen::MatrixBase
ImagReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_imag_op<Scalar>, const Derived> ImagReturnType;$/;"	t
Impl	Eigen/src/Core/Block.h	/^    typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;$/;"	t	class:Eigen::Block
Impl	Eigen/src/Core/Block.h	/^    typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;$/;"	t	class:Eigen::BlockImpl
IncompleteCholesky	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    IncompleteCholesky() : m_initialShift(1e-3),m_factorizationIsOk(false) {}$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    IncompleteCholesky(const MatrixType& matrix) : m_initialShift(1e-3),m_factorizationIsOk(false)$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^class IncompleteCholesky : public SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> >$/;"	c	namespace:Eigen
IncompleteLUT	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT()$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    explicit IncompleteLUT(const MatrixType& mat, const RealScalar& droptol=NumTraits<Scalar>::dummy_precision(), int fillfactor = 10)$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^class IncompleteLUT : public SparseSolverBase<IncompleteLUT<_Scalar, _StorageIndex> >$/;"	c	namespace:Eigen
Indefinite	Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
Index	Eigen/src/Cholesky/LDLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LDLT
Index	Eigen/src/Cholesky/LLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LLT
Index	Eigen/src/Core/EigenBase.h	/^  typedef Eigen::Index Index;$/;"	t	struct:Eigen::EigenBase
Index	Eigen/src/Core/Stride.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Stride
Index	Eigen/src/Core/Transpositions.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::TranspositionsBase
Index	Eigen/src/Core/VectorwiseOp.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::VectorwiseOp
Index	Eigen/src/Core/util/Meta.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE Index;$/;"	t	namespace:Eigen
Index	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexEigenSolver
Index	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexSchur
Index	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::EigenSolver
Index	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::GeneralizedEigenSolver
Index	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::HessenbergDecomposition
Index	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealQZ
Index	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealSchur
Index	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SelfAdjointEigenSolver
Index	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Tridiagonalization
Index	Eigen/src/Geometry/AlignedBox.h	/^  typedef Eigen::Index                              Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::AlignedBox
Index	Eigen/src/Geometry/Hyperplane.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Hyperplane
Index	Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ParametrizedLine
Index	Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Transform
Index	Eigen/src/SVD/SVDBase.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SVDBase
Index	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::internal::UpperBidiagonalization
IndexBased	Eigen/src/Core/util/Constants.h	/^struct IndexBased {};$/;"	s	namespace:Eigen::internal
IndexPointer	Eigen/src/SparseCore/SparseMap.h	/^                         StorageIndex *, const StorageIndex *>::type IndexPointer;$/;"	t	class:Eigen::SparseMapBase
IndexType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef long long int IndexType;$/;"	t	struct:Eigen::internal::pardiso_run_selector
IndexVector	Eigen/src/MetisSupport/MetisSupport.h	/^  typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::MetisOrdering
IndexVector	Eigen/src/OrderingMethods/Ordering.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::COLAMDOrdering
IndexVector	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
IndexVector	Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseCompressedBase
IndexVector	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseMatrix
IndexVector	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseMatrixBase
IndexVector	Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseLU
IndexVector	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::internal::SparseLUImpl
IndexVector	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
IndexVector	Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::SparseQR
IndicesRef	Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXi> IndicesRef;$/;"	t	class:Eigen::BDCSVD
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationBase
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationMatrix
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationWrapper
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^  typedef Map<const Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	Eigen/src/Core/PermutationMatrix.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Transpositions
IndicesType	Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsBase
IndicesType	Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsWrapper
IndicesType	Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	Eigen/src/Core/Transpositions.h	/^  typedef Map<const Matrix<_StorageIndex,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	Eigen/src/Core/Transpositions.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
Infinity	Eigen/src/Core/util/Constants.h	/^const int Infinity = -1;$/;"	m	namespace:Eigen
InnerIterator	Eigen/src/Core/CoreIterators.h	/^  InnerIterator(const XprType &xpr, const Index &outerId)$/;"	f	class:Eigen::InnerIterator
InnerIterator	Eigen/src/Core/CoreIterators.h	/^class InnerIterator$/;"	c	namespace:Eigen
InnerIterator	Eigen/src/Core/DenseBase.h	/^    typedef Eigen::InnerIterator<Derived> InnerIterator;$/;"	t	class:Eigen::DenseBase
InnerIterator	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::conditional<OuterVector,OuterVectorInnerIterator,InnerVectorInnerIterator>::type InnerIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator()$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator(const InnerIterator& other)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit InnerIterator(const SparseCompressedBase& mat)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit InnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::InnerIterator$/;"	c	class:Eigen::SparseCompressedBase
InnerIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const binary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const sparse_conjunction_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::binary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::sparse_conjunction_evaluator
InnerIterator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseDenseProduct.h	/^    InnerIterator(const sparse_dense_outer_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  class InnerIterator : public LhsIterator$/;"	c	struct:Eigen::internal::sparse_dense_outer_product_evaluator
InnerIterator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    InnerIterator(const sparse_diagonal_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator : public SparseXprInnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::InnerIterator InnerIterator;$/;"	t	class:Eigen::SparseMatrix
InnerIterator	Eigen/src/SparseCore/SparseTranspose.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseTranspose.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& xprEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseTriangularView.h	/^  class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseVector.h	/^    typedef typename Base::InnerIterator InnerIterator;$/;"	t	class:Eigen::SparseVector
InnerIterator	Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& sve, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^     InnerIterator(const MappedSuperNodalMatrix& mat, Index outer)$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
InnerIterator	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix<Scalar,StorageIndex>::InnerIterator$/;"	c	class:Eigen::internal::MappedSuperNodalMatrix
InnerMaxSize	Eigen/src/Core/AssignEvaluator.h	/^    InnerMaxSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon255
InnerMaxSize	Eigen/src/Core/Assign_MKL.h	/^      InnerMaxSize  = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
InnerMaxSize	Eigen/src/Core/Redux.h	/^    InnerMaxSize = int(Derived::IsRowMajor)$/;"	e	enum:Eigen::internal::redux_traits::__anon569
InnerPacketSize	Eigen/src/Core/AssignEvaluator.h	/^    InnerPacketSize = unpacket_traits<InnerPacketType>::size$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon256
InnerPacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename find_best_packet<DstScalar,InnerSize>::type InnerPacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
InnerProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
InnerRandomAccessPattern	Eigen/src/SparseCore/SparseUtil.h	/^const int InnerRandomAccessPattern  = 0x2 | CoherentAccessPattern;$/;"	m	namespace:Eigen
InnerRequiredAlignment	Eigen/src/Core/AssignEvaluator.h	/^    InnerRequiredAlignment = unpacket_traits<InnerPacketType>::alignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon257
InnerSize	Eigen/src/Core/AssignEvaluator.h	/^    InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon255
InnerSize	Eigen/src/Core/Assign_MKL.h	/^      InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
InnerSize	Eigen/src/Core/Block.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon245
InnerSize	Eigen/src/Core/CoreEvaluators.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::evaluator::__anon314
InnerSize	Eigen/src/Core/Product.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsTraits::ColsAtCompileTime, RhsTraits::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon423
InnerSize	Eigen/src/Core/ProductEvaluators.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsNestedCleaned::ColsAtCompileTime, RhsNestedCleaned::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::product_evaluator::__anon443
InnerSizeAtCompileTime	Eigen/src/Core/DenseBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::DenseBase::__anon420
InnerSizeAtCompileTime	Eigen/src/Core/Redux.h	/^    InnerSizeAtCompileTime = XprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
InnerSizeAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
InnerStride	Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride() : Base() {}$/;"	f	class:Eigen::InnerStride
InnerStride	Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride(Index v) : Base(0, v) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::InnerStride
InnerStride	Eigen/src/Core/Stride.h	/^class InnerStride : public Stride<0, Value>$/;"	c	namespace:Eigen
InnerStrideAtCompileTime	Eigen/src/Core/Block.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon245
InnerStrideAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon314
InnerStrideAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon312
InnerStrideAtCompileTime	Eigen/src/Core/CwiseUnaryView.h	/^    InnerStrideAtCompileTime = MatrixTypeInnerStride == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon619
InnerStrideAtCompileTime	Eigen/src/Core/DenseBase.h	/^      InnerStrideAtCompileTime = internal::inner_stride_at_compile_time<Derived>::ret,$/;"	e	enum:Eigen::DenseBase::__anon420
InnerStrideAtCompileTime	Eigen/src/Core/Diagonal.h	/^    InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,$/;"	e	enum:Eigen::internal::traits::__anon271
InnerStrideAtCompileTime	Eigen/src/Core/Map.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon275
InnerStrideAtCompileTime	Eigen/src/Core/Matrix.h	/^    InnerStrideAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon451
InnerStrideAtCompileTime	Eigen/src/Core/Stride.h	/^      InnerStrideAtCompileTime = _InnerStrideAtCompileTime,$/;"	e	enum:Eigen::Stride::__anon620
InnerStrideAtCompileTime	Eigen/src/Core/Transpose.h	/^    InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon438
InnerStrideMatch	Eigen/src/Core/Ref.h	/^      InnerStrideMatch = int(StrideType::InnerStrideAtCompileTime)==int(Dynamic)$/;"	e	enum:Eigen::internal::traits::match::__anon456
InnerUnrolling	Eigen/src/Core/util/Constants.h	/^  InnerUnrolling,$/;"	e	enum:Eigen::UnrollingType
InnerVectorInnerIterator	Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE InnerVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
InnerVectorInnerIterator	Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::InnerVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerVectorReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true>       InnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
InnerVectorizedTraversal	Eigen/src/Core/util/Constants.h	/^  InnerVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
InnerVectorsReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<Derived,Dynamic,Dynamic,true> InnerVectorsReturnType;$/;"	t	class:Eigen::SparseMatrixBase
InputScalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::evaluator
InputScalar	Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MatrixType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::traits
IntColVectorType	Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_col_type<MatrixType, StorageIndex>::type IntColVectorType;$/;"	t	class:Eigen::FullPivLU
IntColVectorType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::PardisoImpl
IntColVectorType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;    $/;"	t	class:Eigen::SuperLUBase
IntColVectorType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntColVectorType IntColVectorType;   $/;"	t	class:Eigen::SuperLU
IntColVectorType	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::UmfPackLU
IntDiagSizeVectorType	Eigen/src/QR/FullPivHouseholderQR.h	/^                   EIGEN_SIZE_MIN_PREFER_FIXED(MaxColsAtCompileTime,MaxRowsAtCompileTime)> IntDiagSizeVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntDiagSizeVectorType	Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename FullPivHouseholderQR<MatrixType>::IntDiagSizeVectorType IntDiagSizeVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
IntPtr	Eigen/src/Core/util/Meta.h	/^typedef std::intptr_t  IntPtr;$/;"	t	namespace:Eigen::internal
IntRowVectorType	Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_row_type<MatrixType, StorageIndex>::type IntRowVectorType;$/;"	t	class:Eigen::FullPivLU
IntRowVectorType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::PardisoImpl
IntRowVectorType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
IntRowVectorType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      IntRowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
IntRowVectorType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::SuperLUBase
IntRowVectorType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntRowVectorType IntRowVectorType;$/;"	t	class:Eigen::SuperLU
IntRowVectorType	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::UmfPackLU
InvalidInput	Eigen/src/Core/util/Constants.h	/^  InvalidInput = 3$/;"	e	enum:Eigen::ComputationInfo
InvalidTraversal	Eigen/src/Core/util/Constants.h	/^  InvalidTraversal,$/;"	e	enum:Eigen::TraversalType
Inverse	Eigen/src/Core/Inverse.h	/^  explicit EIGEN_DEVICE_FUNC Inverse(const XprType &xpr)$/;"	f	class:Eigen::Inverse
Inverse	Eigen/src/Core/Inverse.h	/^class Inverse : public InverseImpl<XprType,typename internal::traits<XprType>::StorageKind>$/;"	c	namespace:Eigen
InverseImpl	Eigen/src/Core/Inverse.h	/^class InverseImpl$/;"	c	namespace:Eigen
InverseImpl	Eigen/src/Core/PermutationMatrix.h	/^    InverseImpl() {}$/;"	f	class:Eigen::InverseImpl
InverseImpl	Eigen/src/Core/PermutationMatrix.h	/^class InverseImpl<PermutationType, PermutationStorage>$/;"	c	namespace:Eigen
InverseProblem	models/inverse_model.hpp	/^    InverseProblem(const std::vector<Real> & parameters, const std::vector< Real>& t_obs , std::vector<RandomVariable*>& prior_distribution, Real noise_variance = 10.0)  \/\/ probably I should make prior and posterior noises nicer..$/;"	f	class:InverseProblem
InverseProblem	models/inverse_model.hpp	/^class InverseProblem:public RandomVariable$/;"	c
InverseReturnType	Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper<const CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const DiagonalVectorType> > InverseReturnType;$/;"	t	class:Eigen::DiagonalBase
InverseReturnType	Eigen/src/Core/PermutationMatrix.h	/^    typedef Inverse<Derived> InverseReturnType;$/;"	t	class:Eigen::PermutationBase
InverseReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> InverseReturnType;$/;"	t
InverseType	Eigen/src/Core/Inverse.h	/^  typedef Inverse<ArgType> InverseType;$/;"	t	struct:Eigen::internal::unary_evaluator
InverseType	Eigen/src/Core/PermutationMatrix.h	/^    typedef Inverse<PermutationType> InverseType;$/;"	t	class:Eigen::InverseImpl
IsColMajor	Eigen/src/Core/CoreEvaluators.h	/^    IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
IsColMajor	Eigen/src/Core/Reverse.h	/^      IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::Reverse::__anon454
IsColVector	Eigen/src/Core/VectorBlock.h	/^      IsColVector = !(internal::traits<VectorType>::Flags & RowMajorBit)$/;"	e	enum:Eigen::VectorBlock::__anon223
IsColVector	Eigen/src/SparseCore/SparseVector.h	/^    IsColVector = (_Options & RowMajorBit) ? 0 : 1,$/;"	e	enum:Eigen::internal::traits::__anon10
IsColVector	Eigen/src/SparseCore/SparseVector.h	/^    enum { IsColVector = internal::traits<SparseVector>::IsColVector };$/;"	e	enum:Eigen::SparseVector::__anon12
IsComplex	Eigen/src/Core/NumTraits.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
IsComplex	Eigen/src/Core/arch/CUDA/Half.h	/^    IsComplex = false,$/;"	e	enum:Eigen::NumTraits::__anon567
IsComplex	Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon220
IsComplex	Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon221
IsDense	Eigen/src/Core/util/Constants.h	/^  IsDense         = 0,$/;"	e	enum:Eigen::AmbiVectorMode
IsDynamicSize	Eigen/src/Core/CoreEvaluators.h	/^    IsDynamicSize = PlainObjectType::SizeAtCompileTime==Dynamic,$/;"	e	enum:Eigen::internal::evaluator::__anon312
IsFiniteReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isfinite_op<Scalar>, const Derived> IsFiniteReturnType;$/;"	t
IsInfReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isinf_op<Scalar>, const Derived> IsInfReturnType;$/;"	t
IsInteger	Eigen/src/Core/NumTraits.h	/^    IsInteger = std::numeric_limits<T>::is_integer,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
IsInteger	Eigen/src/Core/arch/CUDA/Half.h	/^    IsInteger = false,$/;"	e	enum:Eigen::NumTraits::__anon567
IsLower	Eigen/src/Core/SolveTriangular.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon230
IsLower	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon279
IsLower	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon280
IsLower	Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon285
IsLower	Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon286
IsLower	Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon301
IsLower	Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon302
IsNaNReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isnan_op<Scalar>, const Derived> IsNaNReturnType;$/;"	t
IsOneByOne	Eigen/src/Core/Product.h	/^      IsOneByOne = (RowsAtCompileTime == 1 || RowsAtCompileTime == Dynamic) && $/;"	e	enum:Eigen::ProductImpl::__anon424
IsPlainObjectBase	Eigen/src/Core/DenseBase.h	/^    enum { IsPlainObjectBase = 0 };$/;"	e	enum:Eigen::DenseBase::__anon421
IsPlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    enum { IsPlainObjectBase = 1 };$/;"	e	enum:Eigen::PlainObjectBase::__anon462
IsProjective	Eigen/src/Geometry/Transform.h	/^    IsProjective = (int(Mode)==int(Projective))$/;"	e	enum:Eigen::internal::transform_traits::__anon86
IsRepeatable	Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon426
IsRepeatable	Eigen/src/Core/functors/NullaryFunctors.h	/^         PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon398
IsRepeatable	Eigen/src/Core/functors/NullaryFunctors.h	/^    IsRepeatable = true$/;"	e	enum:Eigen::internal::functor_traits::__anon400
IsRepeatable	Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon399
IsRowMajor	Eigen/src/Core/Block.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon245
IsRowMajor	Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::evaluator::__anon314
IsRowMajor	Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = PlainObjectType::IsRowMajor,$/;"	e	enum:Eigen::internal::evaluator::__anon304
IsRowMajor	Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
IsRowMajor	Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon311
IsRowMajor	Eigen/src/Core/CoreIterators.h	/^  enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::inner_iterator_selector::__anon425
IsRowMajor	Eigen/src/Core/DenseBase.h	/^      IsRowMajor = int(Flags) & RowMajorBit, \/**< True if this expression has row-major storage order. *\/$/;"	e	enum:Eigen::DenseBase::__anon420
IsRowMajor	Eigen/src/Core/Redux.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
IsRowMajor	Eigen/src/Core/Replicate.h	/^    IsRowMajor = MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1 ? 1$/;"	e	enum:Eigen::internal::traits::__anon270
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^      IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon46
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon50
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon48
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^  enum { IsRowMajor = unary_evaluator::IsRowMajor };$/;"	e	enum:Eigen::internal::unary_evaluator::InnerVectorInnerIterator::__anon52
IsRowMajor	Eigen/src/SparseCore/SparseBlock.h	/^  enum { IsRowMajor = unary_evaluator::IsRowMajor };$/;"	e	enum:Eigen::internal::unary_evaluator::OuterVectorInnerIterator::__anon53
IsRowMajor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Lhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon32
IsRowMajor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(LhsArg::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::InnerIterator::__anon37
IsRowMajor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Rhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon30
IsRowMajor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(RhsArg::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::InnerIterator::__anon35
IsRowMajor	Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon21
IsRowMajor	Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon22
IsRowMajor	Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon19
IsRowMajor	Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon20
IsRowMajor	Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsRowMajor = Flags&RowMajorBit ? 1 : 0,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
IsRowMajor	Eigen/src/SparseCore/SparseView.h	/^    enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon27
IsSigned	Eigen/src/Core/NumTraits.h	/^    IsSigned = std::numeric_limits<T>::is_signed,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
IsSigned	Eigen/src/Core/arch/CUDA/Half.h	/^    IsSigned = true,$/;"	e	enum:Eigen::NumTraits::__anon567
IsSparse	Eigen/src/Core/util/Constants.h	/^  IsSparse$/;"	e	enum:Eigen::AmbiVectorMode
IsTransposed	Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = Base::IsTransposed ? 0 : 1$/;"	e	enum:Eigen::internal::blas_traits::__anon222
IsTransposed	Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon220
IsVectorAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    IsVectorAtCompileTime = PlainObjectType::IsVectorAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon304
IsVectorAtCompileTime	Eigen/src/Core/DenseBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::DenseBase::__anon420
IsVectorAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::DiagonalBase::__anon457
IsVectorAtCompileTime	Eigen/src/Core/SolverBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::SolverBase::__anon437
IsVectorAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      IsVectorAtCompileTime = false$/;"	e	enum:Eigen::TriangularView::__anon267
IsVectorAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
Isometry	Eigen/src/Core/util/Constants.h	/^  Isometry      = 0x1,$/;"	e	enum:Eigen::TransformTraits
Isometry2d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Isometry> Isometry2d;$/;"	t	namespace:Eigen
Isometry2f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Isometry> Isometry2f;$/;"	t	namespace:Eigen
Isometry3d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Isometry> Isometry3d;$/;"	t	namespace:Eigen
Isometry3f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Isometry> Isometry3f;$/;"	t	namespace:Eigen
IsometryTransformType	Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Isometry> IsometryTransformType;$/;"	t	class:Eigen::Translation
IterativeSolverBase	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase()$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  explicit IterativeSolverBase(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class IterativeSolverBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Iterator	Eigen/src/SparseCore/AmbiVector.h	/^    explicit Iterator(const AmbiVector& vec, const RealScalar& epsilon = 0)$/;"	f	class:Eigen::internal::AmbiVector::Iterator
Iterator	Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector<_Scalar,_StorageIndex>::Iterator$/;"	c	class:Eigen::internal::AmbiVector
IteratorBased	Eigen/src/Core/util/Constants.h	/^struct IteratorBased {};$/;"	s	namespace:Eigen::internal
IteratorType	Eigen/src/Core/CoreIterators.h	/^  typedef internal::inner_iterator_selector<XprType, typename internal::evaluator_traits<XprType>::Kind> IteratorType;$/;"	t	class:Eigen::InnerIterator
J	smc/smc.hpp	/^    int J;$/;"	m	class:Stuart_SMC
JRs	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef JacobiRotation<Scalar> JRs;$/;"	t	class:Eigen::RealQZ
JacobiRotation	Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation() {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	Eigen/src/Jacobi/Jacobi.h	/^template<typename Scalar> class JacobiRotation$/;"	c	namespace:Eigen
JacobiSVD	Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD()$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	Eigen/src/SVD/JacobiSVD.h	/^    explicit JacobiSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	Eigen/src/SVD/JacobiSVD.h	/^template<typename _MatrixType, int QRPreconditioner> class JacobiSVD$/;"	c	namespace:Eigen
JointAlignment	Eigen/src/Core/AssignEvaluator.h	/^    JointAlignment = EIGEN_PLAIN_ENUM_MIN(DstAlignment,SrcAlignment)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon254
K	methods/stabilized_methods.hpp	/^    Real** K;  \/\/ holding values at different stages$/;"	m	class:RKC
K	methods/stabilized_methods.hpp	/^    Real** K;  \/\/ holding values at different stages$/;"	m	class:ROCK2
KILL_NON_PRINCIPAL_COL	Eigen/src/OrderingMethods/Eigen_Colamd.h	124;"	d
KILL_PRINCIPAL_COL	Eigen/src/OrderingMethods/Eigen_Colamd.h	123;"	d
KILL_ROW	Eigen/src/OrderingMethods/Eigen_Colamd.h	122;"	d
KMADD	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	107;"	d
KMADD	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	274;"	d
K_error	methods/stabilized_methods.hpp	/^    Real *K_error;$/;"	m	class:ROCK2
Kind	Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/CoreEvaluators.h	/^  typedef IndexBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_evaluator_kind<typename traits<T>::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Kind	Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename storage_kind_to_evaluator_kind<typename ArgType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^  typedef IteratorBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseTriangularShape> { typedef Sparse2Dense  Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
LAPACKE_free	Eigen/src/misc/lapacke.h	115;"	d
LAPACKE_malloc	Eigen/src/misc/lapacke.h	112;"	d
LAPACK_C2INT	Eigen/src/misc/lapacke.h	118;"	d
LAPACK_COL_MAJOR	Eigen/src/misc/lapacke.h	122;"	d
LAPACK_C_SELECT1	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_C_SELECT1) ( const lapack_complex_float* );$/;"	t
LAPACK_C_SELECT2	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_C_SELECT2)$/;"	t
LAPACK_D_SELECT2	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_D_SELECT2) ( const double*, const double* );$/;"	t
LAPACK_D_SELECT3	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_D_SELECT3)$/;"	t
LAPACK_GLOBAL	Eigen/src/misc/lapacke_mangling.h	10;"	d
LAPACK_GLOBAL	Eigen/src/misc/lapacke_mangling.h	12;"	d
LAPACK_GLOBAL	Eigen/src/misc/lapacke_mangling.h	6;"	d
LAPACK_GLOBAL	Eigen/src/misc/lapacke_mangling.h	8;"	d
LAPACK_H	Eigen/src/misc/lapack.h	2;"	d
LAPACK_HEADER_INCLUDED	Eigen/src/misc/lapacke_mangling.h	2;"	d
LAPACK_ROW_MAJOR	Eigen/src/misc/lapacke.h	121;"	d
LAPACK_S_SELECT2	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_S_SELECT2) ( const float*, const float* );$/;"	t
LAPACK_S_SELECT3	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_S_SELECT3)$/;"	t
LAPACK_TRANSPOSE_MEMORY_ERROR	Eigen/src/misc/lapacke.h	125;"	d
LAPACK_WORK_MEMORY_ERROR	Eigen/src/misc/lapacke.h	124;"	d
LAPACK_Z2INT	Eigen/src/misc/lapacke.h	119;"	d
LAPACK_Z_SELECT1	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_Z_SELECT1) ( const lapack_complex_double* );$/;"	t
LAPACK_Z_SELECT2	Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_Z_SELECT2)$/;"	t
LAPACK_cbbcsd	Eigen/src/misc/lapacke.h	11569;"	d
LAPACK_cbdsqr	Eigen/src/misc/lapacke.h	11108;"	d
LAPACK_cgbbrd	Eigen/src/misc/lapacke.h	11096;"	d
LAPACK_cgbcon	Eigen/src/misc/lapacke.h	10722;"	d
LAPACK_cgbequ	Eigen/src/misc/lapacke.h	10888;"	d
LAPACK_cgbequb	Eigen/src/misc/lapacke.h	10893;"	d
LAPACK_cgbrfs	Eigen/src/misc/lapacke.h	10778;"	d
LAPACK_cgbrfsx	Eigen/src/misc/lapacke.h	10783;"	d
LAPACK_cgbsv	Eigen/src/misc/lapacke.h	10932;"	d
LAPACK_cgbsvx	Eigen/src/misc/lapacke.h	10936;"	d
LAPACK_cgbsvxx	Eigen/src/misc/lapacke.h	10941;"	d
LAPACK_cgbtrf	Eigen/src/misc/lapacke.h	10618;"	d
LAPACK_cgbtrs	Eigen/src/misc/lapacke.h	10666;"	d
LAPACK_cgebak	Eigen/src/misc/lapacke.h	11204;"	d
LAPACK_cgebal	Eigen/src/misc/lapacke.h	11200;"	d
LAPACK_cgebrd	Eigen/src/misc/lapacke.h	11092;"	d
LAPACK_cgecon	Eigen/src/misc/lapacke.h	10718;"	d
LAPACK_cgeequ	Eigen/src/misc/lapacke.h	10880;"	d
LAPACK_cgeequb	Eigen/src/misc/lapacke.h	10885;"	d
LAPACK_cgees	Eigen/src/misc/lapacke.h	11352;"	d
LAPACK_cgeesx	Eigen/src/misc/lapacke.h	11356;"	d
LAPACK_cgeev	Eigen/src/misc/lapacke.h	11360;"	d
LAPACK_cgeevx	Eigen/src/misc/lapacke.h	11364;"	d
LAPACK_cgehrd	Eigen/src/misc/lapacke.h	11188;"	d
LAPACK_cgelq2	Eigen/src/misc/lapacke.h	11510;"	d
LAPACK_cgelqf	Eigen/src/misc/lapacke.h	11040;"	d
LAPACK_cgels	Eigen/src/misc/lapacke.h	11280;"	d
LAPACK_cgelsd	Eigen/src/misc/lapacke.h	11292;"	d
LAPACK_cgelss	Eigen/src/misc/lapacke.h	11288;"	d
LAPACK_cgelsy	Eigen/src/misc/lapacke.h	11284;"	d
LAPACK_cgemqrt	Eigen/src/misc/lapacke.h	11612;"	d
LAPACK_cgeqlf	Eigen/src/misc/lapacke.h	11052;"	d
LAPACK_cgeqp3	Eigen/src/misc/lapacke.h	11028;"	d
LAPACK_cgeqpf	Eigen/src/misc/lapacke.h	11024;"	d
LAPACK_cgeqr2	Eigen/src/misc/lapacke.h	11478;"	d
LAPACK_cgeqrf	Eigen/src/misc/lapacke.h	11020;"	d
LAPACK_cgeqrfp	Eigen/src/misc/lapacke.h	11468;"	d
LAPACK_cgeqrt	Eigen/src/misc/lapacke.h	11616;"	d
LAPACK_cgeqrt2	Eigen/src/misc/lapacke.h	11620;"	d
LAPACK_cgeqrt3	Eigen/src/misc/lapacke.h	11624;"	d
LAPACK_cgerfs	Eigen/src/misc/lapacke.h	10770;"	d
LAPACK_cgerfsx	Eigen/src/misc/lapacke.h	10775;"	d
LAPACK_cgerqf	Eigen/src/misc/lapacke.h	11064;"	d
LAPACK_cgesdd	Eigen/src/misc/lapacke.h	11372;"	d
LAPACK_cgesv	Eigen/src/misc/lapacke.h	10918;"	d
LAPACK_cgesvd	Eigen/src/misc/lapacke.h	11368;"	d
LAPACK_cgesvx	Eigen/src/misc/lapacke.h	10924;"	d
LAPACK_cgesvxx	Eigen/src/misc/lapacke.h	10929;"	d
LAPACK_cgetf2	Eigen/src/misc/lapacke.h	11486;"	d
LAPACK_cgetrf	Eigen/src/misc/lapacke.h	10614;"	d
LAPACK_cgetri	Eigen/src/misc/lapacke.h	10840;"	d
LAPACK_cgetrs	Eigen/src/misc/lapacke.h	10662;"	d
LAPACK_cggbak	Eigen/src/misc/lapacke.h	11244;"	d
LAPACK_cggbal	Eigen/src/misc/lapacke.h	11240;"	d
LAPACK_cgges	Eigen/src/misc/lapacke.h	11420;"	d
LAPACK_cggesx	Eigen/src/misc/lapacke.h	11424;"	d
LAPACK_cggev	Eigen/src/misc/lapacke.h	11428;"	d
LAPACK_cggevx	Eigen/src/misc/lapacke.h	11432;"	d
LAPACK_cggglm	Eigen/src/misc/lapacke.h	11300;"	d
LAPACK_cgghrd	Eigen/src/misc/lapacke.h	11236;"	d
LAPACK_cgglse	Eigen/src/misc/lapacke.h	11296;"	d
LAPACK_cggqrf	Eigen/src/misc/lapacke.h	11084;"	d
LAPACK_cggrqf	Eigen/src/misc/lapacke.h	11088;"	d
LAPACK_cggsvd	Eigen/src/misc/lapacke.h	11380;"	d
LAPACK_cggsvp	Eigen/src/misc/lapacke.h	11272;"	d
LAPACK_cgtcon	Eigen/src/misc/lapacke.h	10726;"	d
LAPACK_cgtrfs	Eigen/src/misc/lapacke.h	10786;"	d
LAPACK_cgtsv	Eigen/src/misc/lapacke.h	10944;"	d
LAPACK_cgtsvx	Eigen/src/misc/lapacke.h	10948;"	d
LAPACK_cgttrf	Eigen/src/misc/lapacke.h	10622;"	d
LAPACK_cgttrs	Eigen/src/misc/lapacke.h	10670;"	d
LAPACK_chbev	Eigen/src/misc/lapacke.h	11332;"	d
LAPACK_chbevd	Eigen/src/misc/lapacke.h	11336;"	d
LAPACK_chbevx	Eigen/src/misc/lapacke.h	11340;"	d
LAPACK_chbgst	Eigen/src/misc/lapacke.h	11180;"	d
LAPACK_chbgv	Eigen/src/misc/lapacke.h	11408;"	d
LAPACK_chbgvd	Eigen/src/misc/lapacke.h	11412;"	d
LAPACK_chbgvx	Eigen/src/misc/lapacke.h	11416;"	d
LAPACK_chbtrd	Eigen/src/misc/lapacke.h	11138;"	d
LAPACK_checon	Eigen/src/misc/lapacke.h	10748;"	d
LAPACK_cheequb	Eigen/src/misc/lapacke.h	10915;"	d
LAPACK_cheev	Eigen/src/misc/lapacke.h	11304;"	d
LAPACK_cheevd	Eigen/src/misc/lapacke.h	11308;"	d
LAPACK_cheevr	Eigen/src/misc/lapacke.h	11316;"	d
LAPACK_cheevx	Eigen/src/misc/lapacke.h	11312;"	d
LAPACK_chegst	Eigen/src/misc/lapacke.h	11172;"	d
LAPACK_chegv	Eigen/src/misc/lapacke.h	11384;"	d
LAPACK_chegvd	Eigen/src/misc/lapacke.h	11388;"	d
LAPACK_chegvx	Eigen/src/misc/lapacke.h	11392;"	d
LAPACK_cherfs	Eigen/src/misc/lapacke.h	10816;"	d
LAPACK_cherfsx	Eigen/src/misc/lapacke.h	10819;"	d
LAPACK_chesv	Eigen/src/misc/lapacke.h	11000;"	d
LAPACK_chesvx	Eigen/src/misc/lapacke.h	11002;"	d
LAPACK_chesvxx	Eigen/src/misc/lapacke.h	11005;"	d
LAPACK_cheswapr	Eigen/src/misc/lapacke.h	11570;"	d
LAPACK_chetrd	Eigen/src/misc/lapacke.h	11118;"	d
LAPACK_chetrf	Eigen/src/misc/lapacke.h	10652;"	d
LAPACK_chetri	Eigen/src/misc/lapacke.h	10858;"	d
LAPACK_chetri2	Eigen/src/misc/lapacke.h	11571;"	d
LAPACK_chetri2x	Eigen/src/misc/lapacke.h	11572;"	d
LAPACK_chetrs	Eigen/src/misc/lapacke.h	10696;"	d
LAPACK_chetrs2	Eigen/src/misc/lapacke.h	11573;"	d
LAPACK_chfrk	Eigen/src/misc/lapacke.h	11437;"	d
LAPACK_chgeqz	Eigen/src/misc/lapacke.h	11248;"	d
LAPACK_chpcon	Eigen/src/misc/lapacke.h	10754;"	d
LAPACK_chpev	Eigen/src/misc/lapacke.h	11320;"	d
LAPACK_chpevd	Eigen/src/misc/lapacke.h	11324;"	d
LAPACK_chpevx	Eigen/src/misc/lapacke.h	11328;"	d
LAPACK_chpgst	Eigen/src/misc/lapacke.h	11176;"	d
LAPACK_chpgv	Eigen/src/misc/lapacke.h	11396;"	d
LAPACK_chpgvd	Eigen/src/misc/lapacke.h	11400;"	d
LAPACK_chpgvx	Eigen/src/misc/lapacke.h	11404;"	d
LAPACK_chprfs	Eigen/src/misc/lapacke.h	10824;"	d
LAPACK_chpsv	Eigen/src/misc/lapacke.h	11014;"	d
LAPACK_chpsvx	Eigen/src/misc/lapacke.h	11016;"	d
LAPACK_chptrd	Eigen/src/misc/lapacke.h	11130;"	d
LAPACK_chptrf	Eigen/src/misc/lapacke.h	10658;"	d
LAPACK_chptri	Eigen/src/misc/lapacke.h	10864;"	d
LAPACK_chptrs	Eigen/src/misc/lapacke.h	10702;"	d
LAPACK_chsein	Eigen/src/misc/lapacke.h	11212;"	d
LAPACK_chseqr	Eigen/src/misc/lapacke.h	11208;"	d
LAPACK_clacgv	Eigen/src/misc/lapacke.h	11470;"	d
LAPACK_clacpy	Eigen/src/misc/lapacke.h	11482;"	d
LAPACK_clag2z	Eigen/src/misc/lapacke.h	11534;"	d
LAPACK_clagge	Eigen/src/misc/lapacke.h	11542;"	d
LAPACK_claghe	Eigen/src/misc/lapacke.h	11554;"	d
LAPACK_clagsy	Eigen/src/misc/lapacke.h	11552;"	d
LAPACK_clange	Eigen/src/misc/lapacke.h	11494;"	d
LAPACK_clanhe	Eigen/src/misc/lapacke.h	11496;"	d
LAPACK_clansy	Eigen/src/misc/lapacke.h	11500;"	d
LAPACK_clantr	Eigen/src/misc/lapacke.h	11504;"	d
LAPACK_clapmr	Eigen/src/misc/lapacke.h	11558;"	d
LAPACK_clarfb	Eigen/src/misc/lapacke.h	11514;"	d
LAPACK_clarfg	Eigen/src/misc/lapacke.h	11518;"	d
LAPACK_clarft	Eigen/src/misc/lapacke.h	11522;"	d
LAPACK_clarfx	Eigen/src/misc/lapacke.h	11526;"	d
LAPACK_clarnv	Eigen/src/misc/lapacke.h	11474;"	d
LAPACK_claset	Eigen/src/misc/lapacke.h	11546;"	d
LAPACK_claswp	Eigen/src/misc/lapacke.h	11490;"	d
LAPACK_clatms	Eigen/src/misc/lapacke.h	11530;"	d
LAPACK_clauum	Eigen/src/misc/lapacke.h	11538;"	d
LAPACK_cpbcon	Eigen/src/misc/lapacke.h	10738;"	d
LAPACK_cpbequ	Eigen/src/misc/lapacke.h	10908;"	d
LAPACK_cpbrfs	Eigen/src/misc/lapacke.h	10802;"	d
LAPACK_cpbstf	Eigen/src/misc/lapacke.h	11184;"	d
LAPACK_cpbsv	Eigen/src/misc/lapacke.h	10974;"	d
LAPACK_cpbsvx	Eigen/src/misc/lapacke.h	10978;"	d
LAPACK_cpbtrf	Eigen/src/misc/lapacke.h	10642;"	d
LAPACK_cpbtrs	Eigen/src/misc/lapacke.h	10686;"	d
LAPACK_cpftrf	Eigen/src/misc/lapacke.h	10635;"	d
LAPACK_cpftri	Eigen/src/misc/lapacke.h	10849;"	d
LAPACK_cpftrs	Eigen/src/misc/lapacke.h	10679;"	d
LAPACK_cpocon	Eigen/src/misc/lapacke.h	10730;"	d
LAPACK_cpoequ	Eigen/src/misc/lapacke.h	10896;"	d
LAPACK_cpoequb	Eigen/src/misc/lapacke.h	10901;"	d
LAPACK_cporfs	Eigen/src/misc/lapacke.h	10790;"	d
LAPACK_cporfsx	Eigen/src/misc/lapacke.h	10795;"	d
LAPACK_cposv	Eigen/src/misc/lapacke.h	10952;"	d
LAPACK_cposvx	Eigen/src/misc/lapacke.h	10958;"	d
LAPACK_cposvxx	Eigen/src/misc/lapacke.h	10963;"	d
LAPACK_cpotrf	Eigen/src/misc/lapacke.h	10626;"	d
LAPACK_cpotri	Eigen/src/misc/lapacke.h	10844;"	d
LAPACK_cpotrs	Eigen/src/misc/lapacke.h	10674;"	d
LAPACK_cppcon	Eigen/src/misc/lapacke.h	10734;"	d
LAPACK_cppequ	Eigen/src/misc/lapacke.h	10904;"	d
LAPACK_cpprfs	Eigen/src/misc/lapacke.h	10798;"	d
LAPACK_cppsv	Eigen/src/misc/lapacke.h	10966;"	d
LAPACK_cppsvx	Eigen/src/misc/lapacke.h	10970;"	d
LAPACK_cpptrf	Eigen/src/misc/lapacke.h	10638;"	d
LAPACK_cpptri	Eigen/src/misc/lapacke.h	10852;"	d
LAPACK_cpptrs	Eigen/src/misc/lapacke.h	10682;"	d
LAPACK_cpstrf	Eigen/src/misc/lapacke.h	10631;"	d
LAPACK_cptcon	Eigen/src/misc/lapacke.h	10742;"	d
LAPACK_cpteqr	Eigen/src/misc/lapacke.h	11160;"	d
LAPACK_cptrfs	Eigen/src/misc/lapacke.h	10806;"	d
LAPACK_cptsv	Eigen/src/misc/lapacke.h	10982;"	d
LAPACK_cptsvx	Eigen/src/misc/lapacke.h	10986;"	d
LAPACK_cpttrf	Eigen/src/misc/lapacke.h	10646;"	d
LAPACK_cpttrs	Eigen/src/misc/lapacke.h	10690;"	d
LAPACK_cspcon	Eigen/src/misc/lapacke.h	10752;"	d
LAPACK_csprfs	Eigen/src/misc/lapacke.h	10822;"	d
LAPACK_cspsv	Eigen/src/misc/lapacke.h	11008;"	d
LAPACK_cspsvx	Eigen/src/misc/lapacke.h	11012;"	d
LAPACK_csptrf	Eigen/src/misc/lapacke.h	10656;"	d
LAPACK_csptri	Eigen/src/misc/lapacke.h	10862;"	d
LAPACK_csptrs	Eigen/src/misc/lapacke.h	10700;"	d
LAPACK_cstedc	Eigen/src/misc/lapacke.h	11152;"	d
LAPACK_cstegr	Eigen/src/misc/lapacke.h	11156;"	d
LAPACK_cstein	Eigen/src/misc/lapacke.h	11166;"	d
LAPACK_cstemr	Eigen/src/misc/lapacke.h	11148;"	d
LAPACK_csteqr	Eigen/src/misc/lapacke.h	11144;"	d
LAPACK_csycon	Eigen/src/misc/lapacke.h	10746;"	d
LAPACK_csyconv	Eigen/src/misc/lapacke.h	11574;"	d
LAPACK_csyequb	Eigen/src/misc/lapacke.h	10913;"	d
LAPACK_csyr	Eigen/src/misc/lapacke.h	11642;"	d
LAPACK_csyrfs	Eigen/src/misc/lapacke.h	10810;"	d
LAPACK_csyrfsx	Eigen/src/misc/lapacke.h	10815;"	d
LAPACK_csysv	Eigen/src/misc/lapacke.h	10990;"	d
LAPACK_csysvx	Eigen/src/misc/lapacke.h	10994;"	d
LAPACK_csysvxx	Eigen/src/misc/lapacke.h	10999;"	d
LAPACK_csyswapr	Eigen/src/misc/lapacke.h	11575;"	d
LAPACK_csytrf	Eigen/src/misc/lapacke.h	10650;"	d
LAPACK_csytri	Eigen/src/misc/lapacke.h	10856;"	d
LAPACK_csytri2	Eigen/src/misc/lapacke.h	11576;"	d
LAPACK_csytri2x	Eigen/src/misc/lapacke.h	11577;"	d
LAPACK_csytrs	Eigen/src/misc/lapacke.h	10694;"	d
LAPACK_csytrs2	Eigen/src/misc/lapacke.h	11578;"	d
LAPACK_ctbcon	Eigen/src/misc/lapacke.h	10766;"	d
LAPACK_ctbrfs	Eigen/src/misc/lapacke.h	10836;"	d
LAPACK_ctbtrs	Eigen/src/misc/lapacke.h	10714;"	d
LAPACK_ctfsm	Eigen/src/misc/lapacke.h	11441;"	d
LAPACK_ctftri	Eigen/src/misc/lapacke.h	10873;"	d
LAPACK_ctfttp	Eigen/src/misc/lapacke.h	11445;"	d
LAPACK_ctfttr	Eigen/src/misc/lapacke.h	11449;"	d
LAPACK_ctgevc	Eigen/src/misc/lapacke.h	11252;"	d
LAPACK_ctgexc	Eigen/src/misc/lapacke.h	11256;"	d
LAPACK_ctgsen	Eigen/src/misc/lapacke.h	11260;"	d
LAPACK_ctgsja	Eigen/src/misc/lapacke.h	11276;"	d
LAPACK_ctgsna	Eigen/src/misc/lapacke.h	11268;"	d
LAPACK_ctgsyl	Eigen/src/misc/lapacke.h	11264;"	d
LAPACK_ctpcon	Eigen/src/misc/lapacke.h	10762;"	d
LAPACK_ctpmqrt	Eigen/src/misc/lapacke.h	11628;"	d
LAPACK_ctpqrt	Eigen/src/misc/lapacke.h	11631;"	d
LAPACK_ctpqrt2	Eigen/src/misc/lapacke.h	11635;"	d
LAPACK_ctprfb	Eigen/src/misc/lapacke.h	11639;"	d
LAPACK_ctprfs	Eigen/src/misc/lapacke.h	10832;"	d
LAPACK_ctptri	Eigen/src/misc/lapacke.h	10876;"	d
LAPACK_ctptrs	Eigen/src/misc/lapacke.h	10710;"	d
LAPACK_ctpttf	Eigen/src/misc/lapacke.h	11453;"	d
LAPACK_ctpttr	Eigen/src/misc/lapacke.h	11457;"	d
LAPACK_ctrcon	Eigen/src/misc/lapacke.h	10758;"	d
LAPACK_ctrevc	Eigen/src/misc/lapacke.h	11216;"	d
LAPACK_ctrexc	Eigen/src/misc/lapacke.h	11224;"	d
LAPACK_ctrrfs	Eigen/src/misc/lapacke.h	10828;"	d
LAPACK_ctrsen	Eigen/src/misc/lapacke.h	11228;"	d
LAPACK_ctrsna	Eigen/src/misc/lapacke.h	11220;"	d
LAPACK_ctrsyl	Eigen/src/misc/lapacke.h	11232;"	d
LAPACK_ctrtri	Eigen/src/misc/lapacke.h	10868;"	d
LAPACK_ctrtrs	Eigen/src/misc/lapacke.h	10706;"	d
LAPACK_ctrttf	Eigen/src/misc/lapacke.h	11461;"	d
LAPACK_ctrttp	Eigen/src/misc/lapacke.h	11465;"	d
LAPACK_ctzrzf	Eigen/src/misc/lapacke.h	11076;"	d
LAPACK_cunbdb	Eigen/src/misc/lapacke.h	11579;"	d
LAPACK_cuncsd	Eigen/src/misc/lapacke.h	11580;"	d
LAPACK_cungbr	Eigen/src/misc/lapacke.h	11102;"	d
LAPACK_cunghr	Eigen/src/misc/lapacke.h	11194;"	d
LAPACK_cunglq	Eigen/src/misc/lapacke.h	11046;"	d
LAPACK_cungql	Eigen/src/misc/lapacke.h	11056;"	d
LAPACK_cungqr	Eigen/src/misc/lapacke.h	11034;"	d
LAPACK_cungrq	Eigen/src/misc/lapacke.h	11068;"	d
LAPACK_cungtr	Eigen/src/misc/lapacke.h	11120;"	d
LAPACK_cunmbr	Eigen/src/misc/lapacke.h	11104;"	d
LAPACK_cunmhr	Eigen/src/misc/lapacke.h	11196;"	d
LAPACK_cunmlq	Eigen/src/misc/lapacke.h	11048;"	d
LAPACK_cunmql	Eigen/src/misc/lapacke.h	11060;"	d
LAPACK_cunmqr	Eigen/src/misc/lapacke.h	11036;"	d
LAPACK_cunmrq	Eigen/src/misc/lapacke.h	11072;"	d
LAPACK_cunmrz	Eigen/src/misc/lapacke.h	11080;"	d
LAPACK_cunmtr	Eigen/src/misc/lapacke.h	11122;"	d
LAPACK_cupgtr	Eigen/src/misc/lapacke.h	11132;"	d
LAPACK_cupmtr	Eigen/src/misc/lapacke.h	11134;"	d
LAPACK_dbbcsd	Eigen/src/misc/lapacke.h	11581;"	d
LAPACK_dbdsdc	Eigen/src/misc/lapacke.h	11111;"	d
LAPACK_dbdsqr	Eigen/src/misc/lapacke.h	11107;"	d
LAPACK_ddisna	Eigen/src/misc/lapacke.h	11169;"	d
LAPACK_dgbbrd	Eigen/src/misc/lapacke.h	11095;"	d
LAPACK_dgbcon	Eigen/src/misc/lapacke.h	10721;"	d
LAPACK_dgbequ	Eigen/src/misc/lapacke.h	10887;"	d
LAPACK_dgbequb	Eigen/src/misc/lapacke.h	10890;"	d
LAPACK_dgbrfs	Eigen/src/misc/lapacke.h	10777;"	d
LAPACK_dgbrfsx	Eigen/src/misc/lapacke.h	10780;"	d
LAPACK_dgbsv	Eigen/src/misc/lapacke.h	10931;"	d
LAPACK_dgbsvx	Eigen/src/misc/lapacke.h	10935;"	d
LAPACK_dgbsvxx	Eigen/src/misc/lapacke.h	10938;"	d
LAPACK_dgbtrf	Eigen/src/misc/lapacke.h	10617;"	d
LAPACK_dgbtrs	Eigen/src/misc/lapacke.h	10665;"	d
LAPACK_dgebak	Eigen/src/misc/lapacke.h	11203;"	d
LAPACK_dgebal	Eigen/src/misc/lapacke.h	11199;"	d
LAPACK_dgebrd	Eigen/src/misc/lapacke.h	11091;"	d
LAPACK_dgecon	Eigen/src/misc/lapacke.h	10717;"	d
LAPACK_dgeequ	Eigen/src/misc/lapacke.h	10879;"	d
LAPACK_dgeequb	Eigen/src/misc/lapacke.h	10882;"	d
LAPACK_dgees	Eigen/src/misc/lapacke.h	11351;"	d
LAPACK_dgeesx	Eigen/src/misc/lapacke.h	11355;"	d
LAPACK_dgeev	Eigen/src/misc/lapacke.h	11359;"	d
LAPACK_dgeevx	Eigen/src/misc/lapacke.h	11363;"	d
LAPACK_dgehrd	Eigen/src/misc/lapacke.h	11187;"	d
LAPACK_dgejsv	Eigen/src/misc/lapacke.h	11374;"	d
LAPACK_dgelq2	Eigen/src/misc/lapacke.h	11509;"	d
LAPACK_dgelqf	Eigen/src/misc/lapacke.h	11039;"	d
LAPACK_dgels	Eigen/src/misc/lapacke.h	11279;"	d
LAPACK_dgelsd	Eigen/src/misc/lapacke.h	11291;"	d
LAPACK_dgelss	Eigen/src/misc/lapacke.h	11287;"	d
LAPACK_dgelsy	Eigen/src/misc/lapacke.h	11283;"	d
LAPACK_dgemqrt	Eigen/src/misc/lapacke.h	11611;"	d
LAPACK_dgeqlf	Eigen/src/misc/lapacke.h	11051;"	d
LAPACK_dgeqp3	Eigen/src/misc/lapacke.h	11027;"	d
LAPACK_dgeqpf	Eigen/src/misc/lapacke.h	11023;"	d
LAPACK_dgeqr2	Eigen/src/misc/lapacke.h	11477;"	d
LAPACK_dgeqrf	Eigen/src/misc/lapacke.h	11019;"	d
LAPACK_dgeqrfp	Eigen/src/misc/lapacke.h	11467;"	d
LAPACK_dgeqrt	Eigen/src/misc/lapacke.h	11615;"	d
LAPACK_dgeqrt2	Eigen/src/misc/lapacke.h	11619;"	d
LAPACK_dgeqrt3	Eigen/src/misc/lapacke.h	11623;"	d
LAPACK_dgerfs	Eigen/src/misc/lapacke.h	10769;"	d
LAPACK_dgerfsx	Eigen/src/misc/lapacke.h	10772;"	d
LAPACK_dgerqf	Eigen/src/misc/lapacke.h	11063;"	d
LAPACK_dgesdd	Eigen/src/misc/lapacke.h	11371;"	d
LAPACK_dgesv	Eigen/src/misc/lapacke.h	10917;"	d
LAPACK_dgesvd	Eigen/src/misc/lapacke.h	11367;"	d
LAPACK_dgesvj	Eigen/src/misc/lapacke.h	11376;"	d
LAPACK_dgesvx	Eigen/src/misc/lapacke.h	10923;"	d
LAPACK_dgesvxx	Eigen/src/misc/lapacke.h	10926;"	d
LAPACK_dgetf2	Eigen/src/misc/lapacke.h	11485;"	d
LAPACK_dgetrf	Eigen/src/misc/lapacke.h	10613;"	d
LAPACK_dgetri	Eigen/src/misc/lapacke.h	10839;"	d
LAPACK_dgetrs	Eigen/src/misc/lapacke.h	10661;"	d
LAPACK_dggbak	Eigen/src/misc/lapacke.h	11243;"	d
LAPACK_dggbal	Eigen/src/misc/lapacke.h	11239;"	d
LAPACK_dgges	Eigen/src/misc/lapacke.h	11419;"	d
LAPACK_dggesx	Eigen/src/misc/lapacke.h	11423;"	d
LAPACK_dggev	Eigen/src/misc/lapacke.h	11427;"	d
LAPACK_dggevx	Eigen/src/misc/lapacke.h	11431;"	d
LAPACK_dggglm	Eigen/src/misc/lapacke.h	11299;"	d
LAPACK_dgghrd	Eigen/src/misc/lapacke.h	11235;"	d
LAPACK_dgglse	Eigen/src/misc/lapacke.h	11295;"	d
LAPACK_dggqrf	Eigen/src/misc/lapacke.h	11083;"	d
LAPACK_dggrqf	Eigen/src/misc/lapacke.h	11087;"	d
LAPACK_dggsvd	Eigen/src/misc/lapacke.h	11379;"	d
LAPACK_dggsvp	Eigen/src/misc/lapacke.h	11271;"	d
LAPACK_dgtcon	Eigen/src/misc/lapacke.h	10725;"	d
LAPACK_dgtrfs	Eigen/src/misc/lapacke.h	10785;"	d
LAPACK_dgtsv	Eigen/src/misc/lapacke.h	10943;"	d
LAPACK_dgtsvx	Eigen/src/misc/lapacke.h	10947;"	d
LAPACK_dgttrf	Eigen/src/misc/lapacke.h	10621;"	d
LAPACK_dgttrs	Eigen/src/misc/lapacke.h	10669;"	d
LAPACK_dhgeqz	Eigen/src/misc/lapacke.h	11247;"	d
LAPACK_dhsein	Eigen/src/misc/lapacke.h	11211;"	d
LAPACK_dhseqr	Eigen/src/misc/lapacke.h	11207;"	d
LAPACK_dlacpy	Eigen/src/misc/lapacke.h	11481;"	d
LAPACK_dlag2s	Eigen/src/misc/lapacke.h	11533;"	d
LAPACK_dlagge	Eigen/src/misc/lapacke.h	11541;"	d
LAPACK_dlagsy	Eigen/src/misc/lapacke.h	11551;"	d
LAPACK_dlamch	Eigen/src/misc/lapacke.h	11507;"	d
LAPACK_dlange	Eigen/src/misc/lapacke.h	11493;"	d
LAPACK_dlansy	Eigen/src/misc/lapacke.h	11499;"	d
LAPACK_dlantr	Eigen/src/misc/lapacke.h	11503;"	d
LAPACK_dlapmr	Eigen/src/misc/lapacke.h	11557;"	d
LAPACK_dlapy2	Eigen/src/misc/lapacke.h	11561;"	d
LAPACK_dlapy3	Eigen/src/misc/lapacke.h	11563;"	d
LAPACK_dlarfb	Eigen/src/misc/lapacke.h	11513;"	d
LAPACK_dlarfg	Eigen/src/misc/lapacke.h	11517;"	d
LAPACK_dlarft	Eigen/src/misc/lapacke.h	11521;"	d
LAPACK_dlarfx	Eigen/src/misc/lapacke.h	11525;"	d
LAPACK_dlarnv	Eigen/src/misc/lapacke.h	11473;"	d
LAPACK_dlartgp	Eigen/src/misc/lapacke.h	11565;"	d
LAPACK_dlartgs	Eigen/src/misc/lapacke.h	11567;"	d
LAPACK_dlaset	Eigen/src/misc/lapacke.h	11545;"	d
LAPACK_dlasrt	Eigen/src/misc/lapacke.h	11549;"	d
LAPACK_dlaswp	Eigen/src/misc/lapacke.h	11489;"	d
LAPACK_dlatms	Eigen/src/misc/lapacke.h	11529;"	d
LAPACK_dlauum	Eigen/src/misc/lapacke.h	11537;"	d
LAPACK_dopgtr	Eigen/src/misc/lapacke.h	11127;"	d
LAPACK_dopmtr	Eigen/src/misc/lapacke.h	11129;"	d
LAPACK_dorbdb	Eigen/src/misc/lapacke.h	11582;"	d
LAPACK_dorcsd	Eigen/src/misc/lapacke.h	11583;"	d
LAPACK_dorgbr	Eigen/src/misc/lapacke.h	11099;"	d
LAPACK_dorghr	Eigen/src/misc/lapacke.h	11191;"	d
LAPACK_dorglq	Eigen/src/misc/lapacke.h	11043;"	d
LAPACK_dorgql	Eigen/src/misc/lapacke.h	11055;"	d
LAPACK_dorgqr	Eigen/src/misc/lapacke.h	11031;"	d
LAPACK_dorgrq	Eigen/src/misc/lapacke.h	11067;"	d
LAPACK_dorgtr	Eigen/src/misc/lapacke.h	11115;"	d
LAPACK_dormbr	Eigen/src/misc/lapacke.h	11101;"	d
LAPACK_dormhr	Eigen/src/misc/lapacke.h	11193;"	d
LAPACK_dormlq	Eigen/src/misc/lapacke.h	11045;"	d
LAPACK_dormql	Eigen/src/misc/lapacke.h	11059;"	d
LAPACK_dormqr	Eigen/src/misc/lapacke.h	11033;"	d
LAPACK_dormrq	Eigen/src/misc/lapacke.h	11071;"	d
LAPACK_dormrz	Eigen/src/misc/lapacke.h	11079;"	d
LAPACK_dormtr	Eigen/src/misc/lapacke.h	11117;"	d
LAPACK_dpbcon	Eigen/src/misc/lapacke.h	10737;"	d
LAPACK_dpbequ	Eigen/src/misc/lapacke.h	10907;"	d
LAPACK_dpbrfs	Eigen/src/misc/lapacke.h	10801;"	d
LAPACK_dpbstf	Eigen/src/misc/lapacke.h	11183;"	d
LAPACK_dpbsv	Eigen/src/misc/lapacke.h	10973;"	d
LAPACK_dpbsvx	Eigen/src/misc/lapacke.h	10977;"	d
LAPACK_dpbtrf	Eigen/src/misc/lapacke.h	10641;"	d
LAPACK_dpbtrs	Eigen/src/misc/lapacke.h	10685;"	d
LAPACK_dpftrf	Eigen/src/misc/lapacke.h	10632;"	d
LAPACK_dpftri	Eigen/src/misc/lapacke.h	10846;"	d
LAPACK_dpftrs	Eigen/src/misc/lapacke.h	10676;"	d
LAPACK_dpocon	Eigen/src/misc/lapacke.h	10729;"	d
LAPACK_dpoequ	Eigen/src/misc/lapacke.h	10895;"	d
LAPACK_dpoequb	Eigen/src/misc/lapacke.h	10898;"	d
LAPACK_dporfs	Eigen/src/misc/lapacke.h	10789;"	d
LAPACK_dporfsx	Eigen/src/misc/lapacke.h	10792;"	d
LAPACK_dposv	Eigen/src/misc/lapacke.h	10951;"	d
LAPACK_dposvx	Eigen/src/misc/lapacke.h	10957;"	d
LAPACK_dposvxx	Eigen/src/misc/lapacke.h	10960;"	d
LAPACK_dpotrf	Eigen/src/misc/lapacke.h	10625;"	d
LAPACK_dpotri	Eigen/src/misc/lapacke.h	10843;"	d
LAPACK_dpotrs	Eigen/src/misc/lapacke.h	10673;"	d
LAPACK_dppcon	Eigen/src/misc/lapacke.h	10733;"	d
LAPACK_dppequ	Eigen/src/misc/lapacke.h	10903;"	d
LAPACK_dpprfs	Eigen/src/misc/lapacke.h	10797;"	d
LAPACK_dppsv	Eigen/src/misc/lapacke.h	10965;"	d
LAPACK_dppsvx	Eigen/src/misc/lapacke.h	10969;"	d
LAPACK_dpptrf	Eigen/src/misc/lapacke.h	10637;"	d
LAPACK_dpptri	Eigen/src/misc/lapacke.h	10851;"	d
LAPACK_dpptrs	Eigen/src/misc/lapacke.h	10681;"	d
LAPACK_dpstrf	Eigen/src/misc/lapacke.h	10628;"	d
LAPACK_dptcon	Eigen/src/misc/lapacke.h	10741;"	d
LAPACK_dpteqr	Eigen/src/misc/lapacke.h	11159;"	d
LAPACK_dptrfs	Eigen/src/misc/lapacke.h	10805;"	d
LAPACK_dptsv	Eigen/src/misc/lapacke.h	10981;"	d
LAPACK_dptsvx	Eigen/src/misc/lapacke.h	10985;"	d
LAPACK_dpttrf	Eigen/src/misc/lapacke.h	10645;"	d
LAPACK_dpttrs	Eigen/src/misc/lapacke.h	10689;"	d
LAPACK_dsbev	Eigen/src/misc/lapacke.h	11331;"	d
LAPACK_dsbevd	Eigen/src/misc/lapacke.h	11335;"	d
LAPACK_dsbevx	Eigen/src/misc/lapacke.h	11339;"	d
LAPACK_dsbgst	Eigen/src/misc/lapacke.h	11179;"	d
LAPACK_dsbgv	Eigen/src/misc/lapacke.h	11407;"	d
LAPACK_dsbgvd	Eigen/src/misc/lapacke.h	11411;"	d
LAPACK_dsbgvx	Eigen/src/misc/lapacke.h	11415;"	d
LAPACK_dsbtrd	Eigen/src/misc/lapacke.h	11137;"	d
LAPACK_dsfrk	Eigen/src/misc/lapacke.h	11434;"	d
LAPACK_dsgesv	Eigen/src/misc/lapacke.h	10920;"	d
LAPACK_dspcon	Eigen/src/misc/lapacke.h	10751;"	d
LAPACK_dspev	Eigen/src/misc/lapacke.h	11319;"	d
LAPACK_dspevd	Eigen/src/misc/lapacke.h	11323;"	d
LAPACK_dspevx	Eigen/src/misc/lapacke.h	11327;"	d
LAPACK_dspgst	Eigen/src/misc/lapacke.h	11175;"	d
LAPACK_dspgv	Eigen/src/misc/lapacke.h	11395;"	d
LAPACK_dspgvd	Eigen/src/misc/lapacke.h	11399;"	d
LAPACK_dspgvx	Eigen/src/misc/lapacke.h	11403;"	d
LAPACK_dsposv	Eigen/src/misc/lapacke.h	10954;"	d
LAPACK_dsprfs	Eigen/src/misc/lapacke.h	10821;"	d
LAPACK_dspsv	Eigen/src/misc/lapacke.h	11007;"	d
LAPACK_dspsvx	Eigen/src/misc/lapacke.h	11011;"	d
LAPACK_dsptrd	Eigen/src/misc/lapacke.h	11125;"	d
LAPACK_dsptrf	Eigen/src/misc/lapacke.h	10655;"	d
LAPACK_dsptri	Eigen/src/misc/lapacke.h	10861;"	d
LAPACK_dsptrs	Eigen/src/misc/lapacke.h	10699;"	d
LAPACK_dstebz	Eigen/src/misc/lapacke.h	11163;"	d
LAPACK_dstedc	Eigen/src/misc/lapacke.h	11151;"	d
LAPACK_dstegr	Eigen/src/misc/lapacke.h	11155;"	d
LAPACK_dstein	Eigen/src/misc/lapacke.h	11165;"	d
LAPACK_dstemr	Eigen/src/misc/lapacke.h	11147;"	d
LAPACK_dsteqr	Eigen/src/misc/lapacke.h	11143;"	d
LAPACK_dsterf	Eigen/src/misc/lapacke.h	11141;"	d
LAPACK_dstev	Eigen/src/misc/lapacke.h	11343;"	d
LAPACK_dstevd	Eigen/src/misc/lapacke.h	11345;"	d
LAPACK_dstevr	Eigen/src/misc/lapacke.h	11349;"	d
LAPACK_dstevx	Eigen/src/misc/lapacke.h	11347;"	d
LAPACK_dsycon	Eigen/src/misc/lapacke.h	10745;"	d
LAPACK_dsyconv	Eigen/src/misc/lapacke.h	11584;"	d
LAPACK_dsyequb	Eigen/src/misc/lapacke.h	10910;"	d
LAPACK_dsyev	Eigen/src/misc/lapacke.h	11303;"	d
LAPACK_dsyevd	Eigen/src/misc/lapacke.h	11307;"	d
LAPACK_dsyevr	Eigen/src/misc/lapacke.h	11315;"	d
LAPACK_dsyevx	Eigen/src/misc/lapacke.h	11311;"	d
LAPACK_dsygst	Eigen/src/misc/lapacke.h	11171;"	d
LAPACK_dsygv	Eigen/src/misc/lapacke.h	11383;"	d
LAPACK_dsygvd	Eigen/src/misc/lapacke.h	11387;"	d
LAPACK_dsygvx	Eigen/src/misc/lapacke.h	11391;"	d
LAPACK_dsyrfs	Eigen/src/misc/lapacke.h	10809;"	d
LAPACK_dsyrfsx	Eigen/src/misc/lapacke.h	10812;"	d
LAPACK_dsysv	Eigen/src/misc/lapacke.h	10989;"	d
LAPACK_dsysvx	Eigen/src/misc/lapacke.h	10993;"	d
LAPACK_dsysvxx	Eigen/src/misc/lapacke.h	10996;"	d
LAPACK_dsyswapr	Eigen/src/misc/lapacke.h	11585;"	d
LAPACK_dsytrd	Eigen/src/misc/lapacke.h	11113;"	d
LAPACK_dsytrf	Eigen/src/misc/lapacke.h	10649;"	d
LAPACK_dsytri	Eigen/src/misc/lapacke.h	10855;"	d
LAPACK_dsytri2	Eigen/src/misc/lapacke.h	11586;"	d
LAPACK_dsytri2x	Eigen/src/misc/lapacke.h	11587;"	d
LAPACK_dsytrs	Eigen/src/misc/lapacke.h	10693;"	d
LAPACK_dsytrs2	Eigen/src/misc/lapacke.h	11588;"	d
LAPACK_dtbcon	Eigen/src/misc/lapacke.h	10765;"	d
LAPACK_dtbrfs	Eigen/src/misc/lapacke.h	10835;"	d
LAPACK_dtbtrs	Eigen/src/misc/lapacke.h	10713;"	d
LAPACK_dtfsm	Eigen/src/misc/lapacke.h	11438;"	d
LAPACK_dtftri	Eigen/src/misc/lapacke.h	10870;"	d
LAPACK_dtfttp	Eigen/src/misc/lapacke.h	11442;"	d
LAPACK_dtfttr	Eigen/src/misc/lapacke.h	11446;"	d
LAPACK_dtgevc	Eigen/src/misc/lapacke.h	11251;"	d
LAPACK_dtgexc	Eigen/src/misc/lapacke.h	11255;"	d
LAPACK_dtgsen	Eigen/src/misc/lapacke.h	11259;"	d
LAPACK_dtgsja	Eigen/src/misc/lapacke.h	11275;"	d
LAPACK_dtgsna	Eigen/src/misc/lapacke.h	11267;"	d
LAPACK_dtgsyl	Eigen/src/misc/lapacke.h	11263;"	d
LAPACK_dtpcon	Eigen/src/misc/lapacke.h	10761;"	d
LAPACK_dtpmqrt	Eigen/src/misc/lapacke.h	11627;"	d
LAPACK_dtpqrt	Eigen/src/misc/lapacke.h	11630;"	d
LAPACK_dtpqrt2	Eigen/src/misc/lapacke.h	11634;"	d
LAPACK_dtprfb	Eigen/src/misc/lapacke.h	11638;"	d
LAPACK_dtprfs	Eigen/src/misc/lapacke.h	10831;"	d
LAPACK_dtptri	Eigen/src/misc/lapacke.h	10875;"	d
LAPACK_dtptrs	Eigen/src/misc/lapacke.h	10709;"	d
LAPACK_dtpttf	Eigen/src/misc/lapacke.h	11450;"	d
LAPACK_dtpttr	Eigen/src/misc/lapacke.h	11454;"	d
LAPACK_dtrcon	Eigen/src/misc/lapacke.h	10757;"	d
LAPACK_dtrevc	Eigen/src/misc/lapacke.h	11215;"	d
LAPACK_dtrexc	Eigen/src/misc/lapacke.h	11223;"	d
LAPACK_dtrrfs	Eigen/src/misc/lapacke.h	10827;"	d
LAPACK_dtrsen	Eigen/src/misc/lapacke.h	11227;"	d
LAPACK_dtrsna	Eigen/src/misc/lapacke.h	11219;"	d
LAPACK_dtrsyl	Eigen/src/misc/lapacke.h	11231;"	d
LAPACK_dtrtri	Eigen/src/misc/lapacke.h	10867;"	d
LAPACK_dtrtrs	Eigen/src/misc/lapacke.h	10705;"	d
LAPACK_dtrttf	Eigen/src/misc/lapacke.h	11458;"	d
LAPACK_dtrttp	Eigen/src/misc/lapacke.h	11462;"	d
LAPACK_dtzrzf	Eigen/src/misc/lapacke.h	11075;"	d
LAPACK_lsame	Eigen/src/misc/lapacke.h	147;"	d
LAPACK_sbbcsd	Eigen/src/misc/lapacke.h	11589;"	d
LAPACK_sbdsdc	Eigen/src/misc/lapacke.h	11110;"	d
LAPACK_sbdsqr	Eigen/src/misc/lapacke.h	11106;"	d
LAPACK_sdisna	Eigen/src/misc/lapacke.h	11168;"	d
LAPACK_sgbbrd	Eigen/src/misc/lapacke.h	11094;"	d
LAPACK_sgbcon	Eigen/src/misc/lapacke.h	10720;"	d
LAPACK_sgbequ	Eigen/src/misc/lapacke.h	10886;"	d
LAPACK_sgbequb	Eigen/src/misc/lapacke.h	10891;"	d
LAPACK_sgbrfs	Eigen/src/misc/lapacke.h	10776;"	d
LAPACK_sgbrfsx	Eigen/src/misc/lapacke.h	10781;"	d
LAPACK_sgbsv	Eigen/src/misc/lapacke.h	10930;"	d
LAPACK_sgbsvx	Eigen/src/misc/lapacke.h	10934;"	d
LAPACK_sgbsvxx	Eigen/src/misc/lapacke.h	10939;"	d
LAPACK_sgbtrf	Eigen/src/misc/lapacke.h	10616;"	d
LAPACK_sgbtrs	Eigen/src/misc/lapacke.h	10664;"	d
LAPACK_sgebak	Eigen/src/misc/lapacke.h	11202;"	d
LAPACK_sgebal	Eigen/src/misc/lapacke.h	11198;"	d
LAPACK_sgebrd	Eigen/src/misc/lapacke.h	11090;"	d
LAPACK_sgecon	Eigen/src/misc/lapacke.h	10716;"	d
LAPACK_sgeequ	Eigen/src/misc/lapacke.h	10878;"	d
LAPACK_sgeequb	Eigen/src/misc/lapacke.h	10883;"	d
LAPACK_sgees	Eigen/src/misc/lapacke.h	11350;"	d
LAPACK_sgeesx	Eigen/src/misc/lapacke.h	11354;"	d
LAPACK_sgeev	Eigen/src/misc/lapacke.h	11358;"	d
LAPACK_sgeevx	Eigen/src/misc/lapacke.h	11362;"	d
LAPACK_sgehrd	Eigen/src/misc/lapacke.h	11186;"	d
LAPACK_sgejsv	Eigen/src/misc/lapacke.h	11375;"	d
LAPACK_sgelq2	Eigen/src/misc/lapacke.h	11508;"	d
LAPACK_sgelqf	Eigen/src/misc/lapacke.h	11038;"	d
LAPACK_sgels	Eigen/src/misc/lapacke.h	11278;"	d
LAPACK_sgelsd	Eigen/src/misc/lapacke.h	11290;"	d
LAPACK_sgelss	Eigen/src/misc/lapacke.h	11286;"	d
LAPACK_sgelsy	Eigen/src/misc/lapacke.h	11282;"	d
LAPACK_sgemqrt	Eigen/src/misc/lapacke.h	11610;"	d
LAPACK_sgeqlf	Eigen/src/misc/lapacke.h	11050;"	d
LAPACK_sgeqp3	Eigen/src/misc/lapacke.h	11026;"	d
LAPACK_sgeqpf	Eigen/src/misc/lapacke.h	11022;"	d
LAPACK_sgeqr2	Eigen/src/misc/lapacke.h	11476;"	d
LAPACK_sgeqrf	Eigen/src/misc/lapacke.h	11018;"	d
LAPACK_sgeqrfp	Eigen/src/misc/lapacke.h	11466;"	d
LAPACK_sgeqrt	Eigen/src/misc/lapacke.h	11614;"	d
LAPACK_sgeqrt2	Eigen/src/misc/lapacke.h	11618;"	d
LAPACK_sgeqrt3	Eigen/src/misc/lapacke.h	11622;"	d
LAPACK_sgerfs	Eigen/src/misc/lapacke.h	10768;"	d
LAPACK_sgerfsx	Eigen/src/misc/lapacke.h	10773;"	d
LAPACK_sgerqf	Eigen/src/misc/lapacke.h	11062;"	d
LAPACK_sgesdd	Eigen/src/misc/lapacke.h	11370;"	d
LAPACK_sgesv	Eigen/src/misc/lapacke.h	10916;"	d
LAPACK_sgesvd	Eigen/src/misc/lapacke.h	11366;"	d
LAPACK_sgesvj	Eigen/src/misc/lapacke.h	11377;"	d
LAPACK_sgesvx	Eigen/src/misc/lapacke.h	10922;"	d
LAPACK_sgesvxx	Eigen/src/misc/lapacke.h	10927;"	d
LAPACK_sgetf2	Eigen/src/misc/lapacke.h	11484;"	d
LAPACK_sgetrf	Eigen/src/misc/lapacke.h	10612;"	d
LAPACK_sgetri	Eigen/src/misc/lapacke.h	10838;"	d
LAPACK_sgetrs	Eigen/src/misc/lapacke.h	10660;"	d
LAPACK_sggbak	Eigen/src/misc/lapacke.h	11242;"	d
LAPACK_sggbal	Eigen/src/misc/lapacke.h	11238;"	d
LAPACK_sgges	Eigen/src/misc/lapacke.h	11418;"	d
LAPACK_sggesx	Eigen/src/misc/lapacke.h	11422;"	d
LAPACK_sggev	Eigen/src/misc/lapacke.h	11426;"	d
LAPACK_sggevx	Eigen/src/misc/lapacke.h	11430;"	d
LAPACK_sggglm	Eigen/src/misc/lapacke.h	11298;"	d
LAPACK_sgghrd	Eigen/src/misc/lapacke.h	11234;"	d
LAPACK_sgglse	Eigen/src/misc/lapacke.h	11294;"	d
LAPACK_sggqrf	Eigen/src/misc/lapacke.h	11082;"	d
LAPACK_sggrqf	Eigen/src/misc/lapacke.h	11086;"	d
LAPACK_sggsvd	Eigen/src/misc/lapacke.h	11378;"	d
LAPACK_sggsvp	Eigen/src/misc/lapacke.h	11270;"	d
LAPACK_sgtcon	Eigen/src/misc/lapacke.h	10724;"	d
LAPACK_sgtrfs	Eigen/src/misc/lapacke.h	10784;"	d
LAPACK_sgtsv	Eigen/src/misc/lapacke.h	10942;"	d
LAPACK_sgtsvx	Eigen/src/misc/lapacke.h	10946;"	d
LAPACK_sgttrf	Eigen/src/misc/lapacke.h	10620;"	d
LAPACK_sgttrs	Eigen/src/misc/lapacke.h	10668;"	d
LAPACK_shgeqz	Eigen/src/misc/lapacke.h	11246;"	d
LAPACK_shsein	Eigen/src/misc/lapacke.h	11210;"	d
LAPACK_shseqr	Eigen/src/misc/lapacke.h	11206;"	d
LAPACK_slacpy	Eigen/src/misc/lapacke.h	11480;"	d
LAPACK_slag2d	Eigen/src/misc/lapacke.h	11532;"	d
LAPACK_slagge	Eigen/src/misc/lapacke.h	11540;"	d
LAPACK_slagsy	Eigen/src/misc/lapacke.h	11550;"	d
LAPACK_slamch	Eigen/src/misc/lapacke.h	11506;"	d
LAPACK_slange	Eigen/src/misc/lapacke.h	11492;"	d
LAPACK_slansy	Eigen/src/misc/lapacke.h	11498;"	d
LAPACK_slantr	Eigen/src/misc/lapacke.h	11502;"	d
LAPACK_slapmr	Eigen/src/misc/lapacke.h	11556;"	d
LAPACK_slapy2	Eigen/src/misc/lapacke.h	11560;"	d
LAPACK_slapy3	Eigen/src/misc/lapacke.h	11562;"	d
LAPACK_slarfb	Eigen/src/misc/lapacke.h	11512;"	d
LAPACK_slarfg	Eigen/src/misc/lapacke.h	11516;"	d
LAPACK_slarft	Eigen/src/misc/lapacke.h	11520;"	d
LAPACK_slarfx	Eigen/src/misc/lapacke.h	11524;"	d
LAPACK_slarnv	Eigen/src/misc/lapacke.h	11472;"	d
LAPACK_slartgp	Eigen/src/misc/lapacke.h	11564;"	d
LAPACK_slartgs	Eigen/src/misc/lapacke.h	11566;"	d
LAPACK_slaset	Eigen/src/misc/lapacke.h	11544;"	d
LAPACK_slasrt	Eigen/src/misc/lapacke.h	11548;"	d
LAPACK_slaswp	Eigen/src/misc/lapacke.h	11488;"	d
LAPACK_slatms	Eigen/src/misc/lapacke.h	11528;"	d
LAPACK_slauum	Eigen/src/misc/lapacke.h	11536;"	d
LAPACK_sopgtr	Eigen/src/misc/lapacke.h	11126;"	d
LAPACK_sopmtr	Eigen/src/misc/lapacke.h	11128;"	d
LAPACK_sorbdb	Eigen/src/misc/lapacke.h	11590;"	d
LAPACK_sorcsd	Eigen/src/misc/lapacke.h	11591;"	d
LAPACK_sorgbr	Eigen/src/misc/lapacke.h	11098;"	d
LAPACK_sorghr	Eigen/src/misc/lapacke.h	11190;"	d
LAPACK_sorglq	Eigen/src/misc/lapacke.h	11042;"	d
LAPACK_sorgql	Eigen/src/misc/lapacke.h	11054;"	d
LAPACK_sorgqr	Eigen/src/misc/lapacke.h	11030;"	d
LAPACK_sorgrq	Eigen/src/misc/lapacke.h	11066;"	d
LAPACK_sorgtr	Eigen/src/misc/lapacke.h	11114;"	d
LAPACK_sormbr	Eigen/src/misc/lapacke.h	11100;"	d
LAPACK_sormhr	Eigen/src/misc/lapacke.h	11192;"	d
LAPACK_sormlq	Eigen/src/misc/lapacke.h	11044;"	d
LAPACK_sormql	Eigen/src/misc/lapacke.h	11058;"	d
LAPACK_sormqr	Eigen/src/misc/lapacke.h	11032;"	d
LAPACK_sormrq	Eigen/src/misc/lapacke.h	11070;"	d
LAPACK_sormrz	Eigen/src/misc/lapacke.h	11078;"	d
LAPACK_sormtr	Eigen/src/misc/lapacke.h	11116;"	d
LAPACK_spbcon	Eigen/src/misc/lapacke.h	10736;"	d
LAPACK_spbequ	Eigen/src/misc/lapacke.h	10906;"	d
LAPACK_spbrfs	Eigen/src/misc/lapacke.h	10800;"	d
LAPACK_spbstf	Eigen/src/misc/lapacke.h	11182;"	d
LAPACK_spbsv	Eigen/src/misc/lapacke.h	10972;"	d
LAPACK_spbsvx	Eigen/src/misc/lapacke.h	10976;"	d
LAPACK_spbtrf	Eigen/src/misc/lapacke.h	10640;"	d
LAPACK_spbtrs	Eigen/src/misc/lapacke.h	10684;"	d
LAPACK_spftrf	Eigen/src/misc/lapacke.h	10633;"	d
LAPACK_spftri	Eigen/src/misc/lapacke.h	10847;"	d
LAPACK_spftrs	Eigen/src/misc/lapacke.h	10677;"	d
LAPACK_spocon	Eigen/src/misc/lapacke.h	10728;"	d
LAPACK_spoequ	Eigen/src/misc/lapacke.h	10894;"	d
LAPACK_spoequb	Eigen/src/misc/lapacke.h	10899;"	d
LAPACK_sporfs	Eigen/src/misc/lapacke.h	10788;"	d
LAPACK_sporfsx	Eigen/src/misc/lapacke.h	10793;"	d
LAPACK_sposv	Eigen/src/misc/lapacke.h	10950;"	d
LAPACK_sposvx	Eigen/src/misc/lapacke.h	10956;"	d
LAPACK_sposvxx	Eigen/src/misc/lapacke.h	10961;"	d
LAPACK_spotrf	Eigen/src/misc/lapacke.h	10624;"	d
LAPACK_spotri	Eigen/src/misc/lapacke.h	10842;"	d
LAPACK_spotrs	Eigen/src/misc/lapacke.h	10672;"	d
LAPACK_sppcon	Eigen/src/misc/lapacke.h	10732;"	d
LAPACK_sppequ	Eigen/src/misc/lapacke.h	10902;"	d
LAPACK_spprfs	Eigen/src/misc/lapacke.h	10796;"	d
LAPACK_sppsv	Eigen/src/misc/lapacke.h	10964;"	d
LAPACK_sppsvx	Eigen/src/misc/lapacke.h	10968;"	d
LAPACK_spptrf	Eigen/src/misc/lapacke.h	10636;"	d
LAPACK_spptri	Eigen/src/misc/lapacke.h	10850;"	d
LAPACK_spptrs	Eigen/src/misc/lapacke.h	10680;"	d
LAPACK_spstrf	Eigen/src/misc/lapacke.h	10629;"	d
LAPACK_sptcon	Eigen/src/misc/lapacke.h	10740;"	d
LAPACK_spteqr	Eigen/src/misc/lapacke.h	11158;"	d
LAPACK_sptrfs	Eigen/src/misc/lapacke.h	10804;"	d
LAPACK_sptsv	Eigen/src/misc/lapacke.h	10980;"	d
LAPACK_sptsvx	Eigen/src/misc/lapacke.h	10984;"	d
LAPACK_spttrf	Eigen/src/misc/lapacke.h	10644;"	d
LAPACK_spttrs	Eigen/src/misc/lapacke.h	10688;"	d
LAPACK_ssbev	Eigen/src/misc/lapacke.h	11330;"	d
LAPACK_ssbevd	Eigen/src/misc/lapacke.h	11334;"	d
LAPACK_ssbevx	Eigen/src/misc/lapacke.h	11338;"	d
LAPACK_ssbgst	Eigen/src/misc/lapacke.h	11178;"	d
LAPACK_ssbgv	Eigen/src/misc/lapacke.h	11406;"	d
LAPACK_ssbgvd	Eigen/src/misc/lapacke.h	11410;"	d
LAPACK_ssbgvx	Eigen/src/misc/lapacke.h	11414;"	d
LAPACK_ssbtrd	Eigen/src/misc/lapacke.h	11136;"	d
LAPACK_ssfrk	Eigen/src/misc/lapacke.h	11435;"	d
LAPACK_sspcon	Eigen/src/misc/lapacke.h	10750;"	d
LAPACK_sspev	Eigen/src/misc/lapacke.h	11318;"	d
LAPACK_sspevd	Eigen/src/misc/lapacke.h	11322;"	d
LAPACK_sspevx	Eigen/src/misc/lapacke.h	11326;"	d
LAPACK_sspgst	Eigen/src/misc/lapacke.h	11174;"	d
LAPACK_sspgv	Eigen/src/misc/lapacke.h	11394;"	d
LAPACK_sspgvd	Eigen/src/misc/lapacke.h	11398;"	d
LAPACK_sspgvx	Eigen/src/misc/lapacke.h	11402;"	d
LAPACK_ssprfs	Eigen/src/misc/lapacke.h	10820;"	d
LAPACK_sspsv	Eigen/src/misc/lapacke.h	11006;"	d
LAPACK_sspsvx	Eigen/src/misc/lapacke.h	11010;"	d
LAPACK_ssptrd	Eigen/src/misc/lapacke.h	11124;"	d
LAPACK_ssptrf	Eigen/src/misc/lapacke.h	10654;"	d
LAPACK_ssptri	Eigen/src/misc/lapacke.h	10860;"	d
LAPACK_ssptrs	Eigen/src/misc/lapacke.h	10698;"	d
LAPACK_sstebz	Eigen/src/misc/lapacke.h	11162;"	d
LAPACK_sstedc	Eigen/src/misc/lapacke.h	11150;"	d
LAPACK_sstegr	Eigen/src/misc/lapacke.h	11154;"	d
LAPACK_sstein	Eigen/src/misc/lapacke.h	11164;"	d
LAPACK_sstemr	Eigen/src/misc/lapacke.h	11146;"	d
LAPACK_ssteqr	Eigen/src/misc/lapacke.h	11142;"	d
LAPACK_ssterf	Eigen/src/misc/lapacke.h	11140;"	d
LAPACK_sstev	Eigen/src/misc/lapacke.h	11342;"	d
LAPACK_sstevd	Eigen/src/misc/lapacke.h	11344;"	d
LAPACK_sstevr	Eigen/src/misc/lapacke.h	11348;"	d
LAPACK_sstevx	Eigen/src/misc/lapacke.h	11346;"	d
LAPACK_ssycon	Eigen/src/misc/lapacke.h	10744;"	d
LAPACK_ssyconv	Eigen/src/misc/lapacke.h	11592;"	d
LAPACK_ssyequb	Eigen/src/misc/lapacke.h	10911;"	d
LAPACK_ssyev	Eigen/src/misc/lapacke.h	11302;"	d
LAPACK_ssyevd	Eigen/src/misc/lapacke.h	11306;"	d
LAPACK_ssyevr	Eigen/src/misc/lapacke.h	11314;"	d
LAPACK_ssyevx	Eigen/src/misc/lapacke.h	11310;"	d
LAPACK_ssygst	Eigen/src/misc/lapacke.h	11170;"	d
LAPACK_ssygv	Eigen/src/misc/lapacke.h	11382;"	d
LAPACK_ssygvd	Eigen/src/misc/lapacke.h	11386;"	d
LAPACK_ssygvx	Eigen/src/misc/lapacke.h	11390;"	d
LAPACK_ssyrfs	Eigen/src/misc/lapacke.h	10808;"	d
LAPACK_ssyrfsx	Eigen/src/misc/lapacke.h	10813;"	d
LAPACK_ssysv	Eigen/src/misc/lapacke.h	10988;"	d
LAPACK_ssysvx	Eigen/src/misc/lapacke.h	10992;"	d
LAPACK_ssysvxx	Eigen/src/misc/lapacke.h	10997;"	d
LAPACK_ssyswapr	Eigen/src/misc/lapacke.h	11593;"	d
LAPACK_ssytrd	Eigen/src/misc/lapacke.h	11112;"	d
LAPACK_ssytrf	Eigen/src/misc/lapacke.h	10648;"	d
LAPACK_ssytri	Eigen/src/misc/lapacke.h	10854;"	d
LAPACK_ssytri2	Eigen/src/misc/lapacke.h	11594;"	d
LAPACK_ssytri2x	Eigen/src/misc/lapacke.h	11595;"	d
LAPACK_ssytrs	Eigen/src/misc/lapacke.h	10692;"	d
LAPACK_ssytrs2	Eigen/src/misc/lapacke.h	11596;"	d
LAPACK_stbcon	Eigen/src/misc/lapacke.h	10764;"	d
LAPACK_stbrfs	Eigen/src/misc/lapacke.h	10834;"	d
LAPACK_stbtrs	Eigen/src/misc/lapacke.h	10712;"	d
LAPACK_stfsm	Eigen/src/misc/lapacke.h	11439;"	d
LAPACK_stftri	Eigen/src/misc/lapacke.h	10871;"	d
LAPACK_stfttp	Eigen/src/misc/lapacke.h	11443;"	d
LAPACK_stfttr	Eigen/src/misc/lapacke.h	11447;"	d
LAPACK_stgevc	Eigen/src/misc/lapacke.h	11250;"	d
LAPACK_stgexc	Eigen/src/misc/lapacke.h	11254;"	d
LAPACK_stgsen	Eigen/src/misc/lapacke.h	11258;"	d
LAPACK_stgsja	Eigen/src/misc/lapacke.h	11274;"	d
LAPACK_stgsna	Eigen/src/misc/lapacke.h	11266;"	d
LAPACK_stgsyl	Eigen/src/misc/lapacke.h	11262;"	d
LAPACK_stpcon	Eigen/src/misc/lapacke.h	10760;"	d
LAPACK_stpmqrt	Eigen/src/misc/lapacke.h	11626;"	d
LAPACK_stpqrt2	Eigen/src/misc/lapacke.h	11633;"	d
LAPACK_stprfb	Eigen/src/misc/lapacke.h	11637;"	d
LAPACK_stprfs	Eigen/src/misc/lapacke.h	10830;"	d
LAPACK_stptri	Eigen/src/misc/lapacke.h	10874;"	d
LAPACK_stptrs	Eigen/src/misc/lapacke.h	10708;"	d
LAPACK_stpttf	Eigen/src/misc/lapacke.h	11451;"	d
LAPACK_stpttr	Eigen/src/misc/lapacke.h	11455;"	d
LAPACK_strcon	Eigen/src/misc/lapacke.h	10756;"	d
LAPACK_strevc	Eigen/src/misc/lapacke.h	11214;"	d
LAPACK_strexc	Eigen/src/misc/lapacke.h	11222;"	d
LAPACK_strrfs	Eigen/src/misc/lapacke.h	10826;"	d
LAPACK_strsen	Eigen/src/misc/lapacke.h	11226;"	d
LAPACK_strsna	Eigen/src/misc/lapacke.h	11218;"	d
LAPACK_strsyl	Eigen/src/misc/lapacke.h	11230;"	d
LAPACK_strtri	Eigen/src/misc/lapacke.h	10866;"	d
LAPACK_strtrs	Eigen/src/misc/lapacke.h	10704;"	d
LAPACK_strttf	Eigen/src/misc/lapacke.h	11459;"	d
LAPACK_strttp	Eigen/src/misc/lapacke.h	11463;"	d
LAPACK_stzrzf	Eigen/src/misc/lapacke.h	11074;"	d
LAPACK_zbbcsd	Eigen/src/misc/lapacke.h	11597;"	d
LAPACK_zbdsqr	Eigen/src/misc/lapacke.h	11109;"	d
LAPACK_zcgesv	Eigen/src/misc/lapacke.h	10921;"	d
LAPACK_zcposv	Eigen/src/misc/lapacke.h	10955;"	d
LAPACK_zgbbrd	Eigen/src/misc/lapacke.h	11097;"	d
LAPACK_zgbcon	Eigen/src/misc/lapacke.h	10723;"	d
LAPACK_zgbequ	Eigen/src/misc/lapacke.h	10889;"	d
LAPACK_zgbequb	Eigen/src/misc/lapacke.h	10892;"	d
LAPACK_zgbrfs	Eigen/src/misc/lapacke.h	10779;"	d
LAPACK_zgbrfsx	Eigen/src/misc/lapacke.h	10782;"	d
LAPACK_zgbsv	Eigen/src/misc/lapacke.h	10933;"	d
LAPACK_zgbsvx	Eigen/src/misc/lapacke.h	10937;"	d
LAPACK_zgbsvxx	Eigen/src/misc/lapacke.h	10940;"	d
LAPACK_zgbtrf	Eigen/src/misc/lapacke.h	10619;"	d
LAPACK_zgbtrs	Eigen/src/misc/lapacke.h	10667;"	d
LAPACK_zgebak	Eigen/src/misc/lapacke.h	11205;"	d
LAPACK_zgebal	Eigen/src/misc/lapacke.h	11201;"	d
LAPACK_zgebrd	Eigen/src/misc/lapacke.h	11093;"	d
LAPACK_zgecon	Eigen/src/misc/lapacke.h	10719;"	d
LAPACK_zgeequ	Eigen/src/misc/lapacke.h	10881;"	d
LAPACK_zgeequb	Eigen/src/misc/lapacke.h	10884;"	d
LAPACK_zgees	Eigen/src/misc/lapacke.h	11353;"	d
LAPACK_zgeesx	Eigen/src/misc/lapacke.h	11357;"	d
LAPACK_zgeev	Eigen/src/misc/lapacke.h	11361;"	d
LAPACK_zgeevx	Eigen/src/misc/lapacke.h	11365;"	d
LAPACK_zgehrd	Eigen/src/misc/lapacke.h	11189;"	d
LAPACK_zgelq2	Eigen/src/misc/lapacke.h	11511;"	d
LAPACK_zgelqf	Eigen/src/misc/lapacke.h	11041;"	d
LAPACK_zgels	Eigen/src/misc/lapacke.h	11281;"	d
LAPACK_zgelsd	Eigen/src/misc/lapacke.h	11293;"	d
LAPACK_zgelss	Eigen/src/misc/lapacke.h	11289;"	d
LAPACK_zgelsy	Eigen/src/misc/lapacke.h	11285;"	d
LAPACK_zgemqrt	Eigen/src/misc/lapacke.h	11613;"	d
LAPACK_zgeqlf	Eigen/src/misc/lapacke.h	11053;"	d
LAPACK_zgeqp3	Eigen/src/misc/lapacke.h	11029;"	d
LAPACK_zgeqpf	Eigen/src/misc/lapacke.h	11025;"	d
LAPACK_zgeqr2	Eigen/src/misc/lapacke.h	11479;"	d
LAPACK_zgeqrf	Eigen/src/misc/lapacke.h	11021;"	d
LAPACK_zgeqrfp	Eigen/src/misc/lapacke.h	11469;"	d
LAPACK_zgeqrt	Eigen/src/misc/lapacke.h	11617;"	d
LAPACK_zgeqrt2	Eigen/src/misc/lapacke.h	11621;"	d
LAPACK_zgeqrt3	Eigen/src/misc/lapacke.h	11625;"	d
LAPACK_zgerfs	Eigen/src/misc/lapacke.h	10771;"	d
LAPACK_zgerfsx	Eigen/src/misc/lapacke.h	10774;"	d
LAPACK_zgerqf	Eigen/src/misc/lapacke.h	11065;"	d
LAPACK_zgesdd	Eigen/src/misc/lapacke.h	11373;"	d
LAPACK_zgesv	Eigen/src/misc/lapacke.h	10919;"	d
LAPACK_zgesvd	Eigen/src/misc/lapacke.h	11369;"	d
LAPACK_zgesvx	Eigen/src/misc/lapacke.h	10925;"	d
LAPACK_zgesvxx	Eigen/src/misc/lapacke.h	10928;"	d
LAPACK_zgetf2	Eigen/src/misc/lapacke.h	11487;"	d
LAPACK_zgetrf	Eigen/src/misc/lapacke.h	10615;"	d
LAPACK_zgetri	Eigen/src/misc/lapacke.h	10841;"	d
LAPACK_zgetrs	Eigen/src/misc/lapacke.h	10663;"	d
LAPACK_zggbak	Eigen/src/misc/lapacke.h	11245;"	d
LAPACK_zggbal	Eigen/src/misc/lapacke.h	11241;"	d
LAPACK_zgges	Eigen/src/misc/lapacke.h	11421;"	d
LAPACK_zggesx	Eigen/src/misc/lapacke.h	11425;"	d
LAPACK_zggev	Eigen/src/misc/lapacke.h	11429;"	d
LAPACK_zggevx	Eigen/src/misc/lapacke.h	11433;"	d
LAPACK_zggglm	Eigen/src/misc/lapacke.h	11301;"	d
LAPACK_zgghrd	Eigen/src/misc/lapacke.h	11237;"	d
LAPACK_zgglse	Eigen/src/misc/lapacke.h	11297;"	d
LAPACK_zggqrf	Eigen/src/misc/lapacke.h	11085;"	d
LAPACK_zggrqf	Eigen/src/misc/lapacke.h	11089;"	d
LAPACK_zggsvd	Eigen/src/misc/lapacke.h	11381;"	d
LAPACK_zggsvp	Eigen/src/misc/lapacke.h	11273;"	d
LAPACK_zgtcon	Eigen/src/misc/lapacke.h	10727;"	d
LAPACK_zgtrfs	Eigen/src/misc/lapacke.h	10787;"	d
LAPACK_zgtsv	Eigen/src/misc/lapacke.h	10945;"	d
LAPACK_zgtsvx	Eigen/src/misc/lapacke.h	10949;"	d
LAPACK_zgttrf	Eigen/src/misc/lapacke.h	10623;"	d
LAPACK_zgttrs	Eigen/src/misc/lapacke.h	10671;"	d
LAPACK_zhbev	Eigen/src/misc/lapacke.h	11333;"	d
LAPACK_zhbevd	Eigen/src/misc/lapacke.h	11337;"	d
LAPACK_zhbevx	Eigen/src/misc/lapacke.h	11341;"	d
LAPACK_zhbgst	Eigen/src/misc/lapacke.h	11181;"	d
LAPACK_zhbgv	Eigen/src/misc/lapacke.h	11409;"	d
LAPACK_zhbgvd	Eigen/src/misc/lapacke.h	11413;"	d
LAPACK_zhbgvx	Eigen/src/misc/lapacke.h	11417;"	d
LAPACK_zhbtrd	Eigen/src/misc/lapacke.h	11139;"	d
LAPACK_zhecon	Eigen/src/misc/lapacke.h	10749;"	d
LAPACK_zheequb	Eigen/src/misc/lapacke.h	10914;"	d
LAPACK_zheev	Eigen/src/misc/lapacke.h	11305;"	d
LAPACK_zheevd	Eigen/src/misc/lapacke.h	11309;"	d
LAPACK_zheevr	Eigen/src/misc/lapacke.h	11317;"	d
LAPACK_zheevx	Eigen/src/misc/lapacke.h	11313;"	d
LAPACK_zhegst	Eigen/src/misc/lapacke.h	11173;"	d
LAPACK_zhegv	Eigen/src/misc/lapacke.h	11385;"	d
LAPACK_zhegvd	Eigen/src/misc/lapacke.h	11389;"	d
LAPACK_zhegvx	Eigen/src/misc/lapacke.h	11393;"	d
LAPACK_zherfs	Eigen/src/misc/lapacke.h	10817;"	d
LAPACK_zherfsx	Eigen/src/misc/lapacke.h	10818;"	d
LAPACK_zhesv	Eigen/src/misc/lapacke.h	11001;"	d
LAPACK_zhesvx	Eigen/src/misc/lapacke.h	11003;"	d
LAPACK_zhesvxx	Eigen/src/misc/lapacke.h	11004;"	d
LAPACK_zheswapr	Eigen/src/misc/lapacke.h	11598;"	d
LAPACK_zhetrd	Eigen/src/misc/lapacke.h	11119;"	d
LAPACK_zhetrf	Eigen/src/misc/lapacke.h	10653;"	d
LAPACK_zhetri	Eigen/src/misc/lapacke.h	10859;"	d
LAPACK_zhetri2	Eigen/src/misc/lapacke.h	11599;"	d
LAPACK_zhetri2x	Eigen/src/misc/lapacke.h	11600;"	d
LAPACK_zhetrs	Eigen/src/misc/lapacke.h	10697;"	d
LAPACK_zhetrs2	Eigen/src/misc/lapacke.h	11601;"	d
LAPACK_zhfrk	Eigen/src/misc/lapacke.h	11436;"	d
LAPACK_zhgeqz	Eigen/src/misc/lapacke.h	11249;"	d
LAPACK_zhpcon	Eigen/src/misc/lapacke.h	10755;"	d
LAPACK_zhpev	Eigen/src/misc/lapacke.h	11321;"	d
LAPACK_zhpevd	Eigen/src/misc/lapacke.h	11325;"	d
LAPACK_zhpevx	Eigen/src/misc/lapacke.h	11329;"	d
LAPACK_zhpgst	Eigen/src/misc/lapacke.h	11177;"	d
LAPACK_zhpgv	Eigen/src/misc/lapacke.h	11397;"	d
LAPACK_zhpgvd	Eigen/src/misc/lapacke.h	11401;"	d
LAPACK_zhpgvx	Eigen/src/misc/lapacke.h	11405;"	d
LAPACK_zhprfs	Eigen/src/misc/lapacke.h	10825;"	d
LAPACK_zhpsv	Eigen/src/misc/lapacke.h	11015;"	d
LAPACK_zhpsvx	Eigen/src/misc/lapacke.h	11017;"	d
LAPACK_zhptrd	Eigen/src/misc/lapacke.h	11131;"	d
LAPACK_zhptrf	Eigen/src/misc/lapacke.h	10659;"	d
LAPACK_zhptri	Eigen/src/misc/lapacke.h	10865;"	d
LAPACK_zhptrs	Eigen/src/misc/lapacke.h	10703;"	d
LAPACK_zhsein	Eigen/src/misc/lapacke.h	11213;"	d
LAPACK_zhseqr	Eigen/src/misc/lapacke.h	11209;"	d
LAPACK_zlacgv	Eigen/src/misc/lapacke.h	11471;"	d
LAPACK_zlacpy	Eigen/src/misc/lapacke.h	11483;"	d
LAPACK_zlag2c	Eigen/src/misc/lapacke.h	11535;"	d
LAPACK_zlagge	Eigen/src/misc/lapacke.h	11543;"	d
LAPACK_zlaghe	Eigen/src/misc/lapacke.h	11555;"	d
LAPACK_zlagsy	Eigen/src/misc/lapacke.h	11553;"	d
LAPACK_zlange	Eigen/src/misc/lapacke.h	11495;"	d
LAPACK_zlanhe	Eigen/src/misc/lapacke.h	11497;"	d
LAPACK_zlansy	Eigen/src/misc/lapacke.h	11501;"	d
LAPACK_zlantr	Eigen/src/misc/lapacke.h	11505;"	d
LAPACK_zlapmr	Eigen/src/misc/lapacke.h	11559;"	d
LAPACK_zlarfb	Eigen/src/misc/lapacke.h	11515;"	d
LAPACK_zlarfg	Eigen/src/misc/lapacke.h	11519;"	d
LAPACK_zlarft	Eigen/src/misc/lapacke.h	11523;"	d
LAPACK_zlarfx	Eigen/src/misc/lapacke.h	11527;"	d
LAPACK_zlarnv	Eigen/src/misc/lapacke.h	11475;"	d
LAPACK_zlaset	Eigen/src/misc/lapacke.h	11547;"	d
LAPACK_zlaswp	Eigen/src/misc/lapacke.h	11491;"	d
LAPACK_zlatms	Eigen/src/misc/lapacke.h	11531;"	d
LAPACK_zlauum	Eigen/src/misc/lapacke.h	11539;"	d
LAPACK_zpbcon	Eigen/src/misc/lapacke.h	10739;"	d
LAPACK_zpbequ	Eigen/src/misc/lapacke.h	10909;"	d
LAPACK_zpbrfs	Eigen/src/misc/lapacke.h	10803;"	d
LAPACK_zpbstf	Eigen/src/misc/lapacke.h	11185;"	d
LAPACK_zpbsv	Eigen/src/misc/lapacke.h	10975;"	d
LAPACK_zpbsvx	Eigen/src/misc/lapacke.h	10979;"	d
LAPACK_zpbtrf	Eigen/src/misc/lapacke.h	10643;"	d
LAPACK_zpbtrs	Eigen/src/misc/lapacke.h	10687;"	d
LAPACK_zpftrf	Eigen/src/misc/lapacke.h	10634;"	d
LAPACK_zpftri	Eigen/src/misc/lapacke.h	10848;"	d
LAPACK_zpftrs	Eigen/src/misc/lapacke.h	10678;"	d
LAPACK_zpocon	Eigen/src/misc/lapacke.h	10731;"	d
LAPACK_zpoequ	Eigen/src/misc/lapacke.h	10897;"	d
LAPACK_zpoequb	Eigen/src/misc/lapacke.h	10900;"	d
LAPACK_zporfs	Eigen/src/misc/lapacke.h	10791;"	d
LAPACK_zporfsx	Eigen/src/misc/lapacke.h	10794;"	d
LAPACK_zposv	Eigen/src/misc/lapacke.h	10953;"	d
LAPACK_zposvx	Eigen/src/misc/lapacke.h	10959;"	d
LAPACK_zposvxx	Eigen/src/misc/lapacke.h	10962;"	d
LAPACK_zpotrf	Eigen/src/misc/lapacke.h	10627;"	d
LAPACK_zpotri	Eigen/src/misc/lapacke.h	10845;"	d
LAPACK_zpotrs	Eigen/src/misc/lapacke.h	10675;"	d
LAPACK_zppcon	Eigen/src/misc/lapacke.h	10735;"	d
LAPACK_zppequ	Eigen/src/misc/lapacke.h	10905;"	d
LAPACK_zpprfs	Eigen/src/misc/lapacke.h	10799;"	d
LAPACK_zppsv	Eigen/src/misc/lapacke.h	10967;"	d
LAPACK_zppsvx	Eigen/src/misc/lapacke.h	10971;"	d
LAPACK_zpptrf	Eigen/src/misc/lapacke.h	10639;"	d
LAPACK_zpptri	Eigen/src/misc/lapacke.h	10853;"	d
LAPACK_zpptrs	Eigen/src/misc/lapacke.h	10683;"	d
LAPACK_zpstrf	Eigen/src/misc/lapacke.h	10630;"	d
LAPACK_zptcon	Eigen/src/misc/lapacke.h	10743;"	d
LAPACK_zpteqr	Eigen/src/misc/lapacke.h	11161;"	d
LAPACK_zptrfs	Eigen/src/misc/lapacke.h	10807;"	d
LAPACK_zptsv	Eigen/src/misc/lapacke.h	10983;"	d
LAPACK_zptsvx	Eigen/src/misc/lapacke.h	10987;"	d
LAPACK_zpttrf	Eigen/src/misc/lapacke.h	10647;"	d
LAPACK_zpttrs	Eigen/src/misc/lapacke.h	10691;"	d
LAPACK_zspcon	Eigen/src/misc/lapacke.h	10753;"	d
LAPACK_zsprfs	Eigen/src/misc/lapacke.h	10823;"	d
LAPACK_zspsv	Eigen/src/misc/lapacke.h	11009;"	d
LAPACK_zspsvx	Eigen/src/misc/lapacke.h	11013;"	d
LAPACK_zsptrf	Eigen/src/misc/lapacke.h	10657;"	d
LAPACK_zsptri	Eigen/src/misc/lapacke.h	10863;"	d
LAPACK_zsptrs	Eigen/src/misc/lapacke.h	10701;"	d
LAPACK_zstedc	Eigen/src/misc/lapacke.h	11153;"	d
LAPACK_zstegr	Eigen/src/misc/lapacke.h	11157;"	d
LAPACK_zstein	Eigen/src/misc/lapacke.h	11167;"	d
LAPACK_zstemr	Eigen/src/misc/lapacke.h	11149;"	d
LAPACK_zsteqr	Eigen/src/misc/lapacke.h	11145;"	d
LAPACK_zsycon	Eigen/src/misc/lapacke.h	10747;"	d
LAPACK_zsyconv	Eigen/src/misc/lapacke.h	11602;"	d
LAPACK_zsyequb	Eigen/src/misc/lapacke.h	10912;"	d
LAPACK_zsyr	Eigen/src/misc/lapacke.h	11643;"	d
LAPACK_zsyrfs	Eigen/src/misc/lapacke.h	10811;"	d
LAPACK_zsyrfsx	Eigen/src/misc/lapacke.h	10814;"	d
LAPACK_zsysv	Eigen/src/misc/lapacke.h	10991;"	d
LAPACK_zsysvx	Eigen/src/misc/lapacke.h	10995;"	d
LAPACK_zsysvxx	Eigen/src/misc/lapacke.h	10998;"	d
LAPACK_zsyswapr	Eigen/src/misc/lapacke.h	11603;"	d
LAPACK_zsytrf	Eigen/src/misc/lapacke.h	10651;"	d
LAPACK_zsytri	Eigen/src/misc/lapacke.h	10857;"	d
LAPACK_zsytri2	Eigen/src/misc/lapacke.h	11604;"	d
LAPACK_zsytri2x	Eigen/src/misc/lapacke.h	11605;"	d
LAPACK_zsytrs	Eigen/src/misc/lapacke.h	10695;"	d
LAPACK_zsytrs2	Eigen/src/misc/lapacke.h	11606;"	d
LAPACK_ztbcon	Eigen/src/misc/lapacke.h	10767;"	d
LAPACK_ztbrfs	Eigen/src/misc/lapacke.h	10837;"	d
LAPACK_ztbtrs	Eigen/src/misc/lapacke.h	10715;"	d
LAPACK_ztfsm	Eigen/src/misc/lapacke.h	11440;"	d
LAPACK_ztftri	Eigen/src/misc/lapacke.h	10872;"	d
LAPACK_ztfttp	Eigen/src/misc/lapacke.h	11444;"	d
LAPACK_ztfttr	Eigen/src/misc/lapacke.h	11448;"	d
LAPACK_ztgevc	Eigen/src/misc/lapacke.h	11253;"	d
LAPACK_ztgexc	Eigen/src/misc/lapacke.h	11257;"	d
LAPACK_ztgsen	Eigen/src/misc/lapacke.h	11261;"	d
LAPACK_ztgsja	Eigen/src/misc/lapacke.h	11277;"	d
LAPACK_ztgsna	Eigen/src/misc/lapacke.h	11269;"	d
LAPACK_ztgsyl	Eigen/src/misc/lapacke.h	11265;"	d
LAPACK_ztpcon	Eigen/src/misc/lapacke.h	10763;"	d
LAPACK_ztpmqrt	Eigen/src/misc/lapacke.h	11629;"	d
LAPACK_ztpqrt	Eigen/src/misc/lapacke.h	11632;"	d
LAPACK_ztpqrt2	Eigen/src/misc/lapacke.h	11636;"	d
LAPACK_ztprfb	Eigen/src/misc/lapacke.h	11640;"	d
LAPACK_ztprfs	Eigen/src/misc/lapacke.h	10833;"	d
LAPACK_ztptri	Eigen/src/misc/lapacke.h	10877;"	d
LAPACK_ztptrs	Eigen/src/misc/lapacke.h	10711;"	d
LAPACK_ztpttf	Eigen/src/misc/lapacke.h	11452;"	d
LAPACK_ztpttr	Eigen/src/misc/lapacke.h	11456;"	d
LAPACK_ztrcon	Eigen/src/misc/lapacke.h	10759;"	d
LAPACK_ztrevc	Eigen/src/misc/lapacke.h	11217;"	d
LAPACK_ztrexc	Eigen/src/misc/lapacke.h	11225;"	d
LAPACK_ztrrfs	Eigen/src/misc/lapacke.h	10829;"	d
LAPACK_ztrsen	Eigen/src/misc/lapacke.h	11229;"	d
LAPACK_ztrsna	Eigen/src/misc/lapacke.h	11221;"	d
LAPACK_ztrsyl	Eigen/src/misc/lapacke.h	11233;"	d
LAPACK_ztrtri	Eigen/src/misc/lapacke.h	10869;"	d
LAPACK_ztrtrs	Eigen/src/misc/lapacke.h	10707;"	d
LAPACK_ztrttf	Eigen/src/misc/lapacke.h	11460;"	d
LAPACK_ztrttp	Eigen/src/misc/lapacke.h	11464;"	d
LAPACK_ztzrzf	Eigen/src/misc/lapacke.h	11077;"	d
LAPACK_zunbdb	Eigen/src/misc/lapacke.h	11607;"	d
LAPACK_zuncsd	Eigen/src/misc/lapacke.h	11608;"	d
LAPACK_zungbr	Eigen/src/misc/lapacke.h	11103;"	d
LAPACK_zunghr	Eigen/src/misc/lapacke.h	11195;"	d
LAPACK_zunglq	Eigen/src/misc/lapacke.h	11047;"	d
LAPACK_zungql	Eigen/src/misc/lapacke.h	11057;"	d
LAPACK_zungqr	Eigen/src/misc/lapacke.h	11035;"	d
LAPACK_zungrq	Eigen/src/misc/lapacke.h	11069;"	d
LAPACK_zungtr	Eigen/src/misc/lapacke.h	11121;"	d
LAPACK_zunmbr	Eigen/src/misc/lapacke.h	11105;"	d
LAPACK_zunmhr	Eigen/src/misc/lapacke.h	11197;"	d
LAPACK_zunmlq	Eigen/src/misc/lapacke.h	11049;"	d
LAPACK_zunmql	Eigen/src/misc/lapacke.h	11061;"	d
LAPACK_zunmqr	Eigen/src/misc/lapacke.h	11037;"	d
LAPACK_zunmrq	Eigen/src/misc/lapacke.h	11073;"	d
LAPACK_zunmrz	Eigen/src/misc/lapacke.h	11081;"	d
LAPACK_zunmtr	Eigen/src/misc/lapacke.h	11123;"	d
LAPACK_zupgtr	Eigen/src/misc/lapacke.h	11133;"	d
LAPACK_zupmtr	Eigen/src/misc/lapacke.h	11135;"	d
LDLT	Eigen/src/Cholesky/LDLT.h	/^    LDLT()$/;"	f	class:Eigen::LDLT
LDLT	Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LDLT
LDLT	Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(Index size)$/;"	f	class:Eigen::LDLT
LDLT	Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LDLT
LDLT	Eigen/src/Cholesky/LDLT.h	/^template<typename _MatrixType, int _UpLo> class LDLT$/;"	c	namespace:Eigen
LDLTTraits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT<MatrixType,UpLo> > LDLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LDLT_Traits	Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LDLT_Traits	Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLT	Eigen/src/Cholesky/LLT.h	/^    LLT() : m_matrix(), m_isInitialized(false) {}$/;"	f	class:Eigen::LLT
LLT	Eigen/src/Cholesky/LLT.h	/^    explicit LLT(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LLT
LLT	Eigen/src/Cholesky/LLT.h	/^    explicit LLT(Index size) : m_matrix(size, size),$/;"	f	class:Eigen::LLT
LLT	Eigen/src/Cholesky/LLT.h	/^    explicit LLT(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LLT
LLT	Eigen/src/Cholesky/LLT.h	/^template<typename _MatrixType, int _UpLo> class LLT$/;"	c	namespace:Eigen
LLTTraits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT<MatrixType,UpLo>  > LLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LLT_Traits	Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LLT_Traits	Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLVL	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
LMatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType, Lower|UnitDiag>  LMatrixType;$/;"	t	class:Eigen::SuperLU
LSUB	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
LUMatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::SuperLUBase
LUMatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::LUMatrixType LUMatrixType;$/;"	t	class:Eigen::SuperLU
LUMatrixType	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::UmfPackLU
LUNoMarker	Eigen/src/SparseLU/SparseLU_Memory.h	/^enum { LUNoMarker = 3 };$/;"	e	enum:Eigen::internal::__anon122
LUSUP	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
LUTempSpace	Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUTempSpace(Index&m, Index& w)$/;"	f	namespace:Eigen::internal
LU_GlobalLU_t	Eigen/src/SparseLU/SparseLU_Structs.h	/^struct LU_GlobalLU_t {$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <> struct LU_kernel_bmod<1>$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <int SegSizeAtCompileTime> struct LU_kernel_bmod$/;"	s	namespace:Eigen::internal
LUnumTempV	Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUnumTempV(Index& m, Index& w, Index& t, Index& b)$/;"	f	namespace:Eigen::internal
Large	Eigen/src/Core/GeneralProduct.h	/^  Large = 2,$/;"	e	enum:Eigen::__anon586
LargeEnough	Eigen/src/Core/Assign_MKL.h	/^      LargeEnough = VmlSize==Dynamic || VmlSize>=EIGEN_MKL_VML_THRESHOLD$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
LazyCoeffBasedProductMode	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
LazyProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
LeastSquareDiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner() : Base() {}$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit LeastSquareDiagonalPreconditioner(const MatType& mat) : Base()$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class LeastSquareDiagonalPreconditioner : public DiagonalPreconditioner<_Scalar>$/;"	c	namespace:Eigen
LeastSquaresConjugateGradient	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  LeastSquaresConjugateGradient() : Base() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  explicit LeastSquaresConjugateGradient(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^class LeastSquaresConjugateGradient : public IterativeSolverBase<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
LgammaReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_lgamma_op<Scalar>, const Derived> LgammaReturnType;$/;"	t
Lhs	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<LhsType>::type Lhs;$/;"	t	class:Eigen::CwiseBinaryOp
Lhs	Eigen/src/Core/Product.h	/^    typedef _Lhs Lhs;$/;"	t	class:Eigen::Product
Lhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,LhsMode,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<SparseLhsType>::type Lhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Lhs1	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,RhsT,LhsT>::type Lhs1;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsAlignment	Eigen/src/Core/ProductEvaluators.h	/^    LhsAlignment = EIGEN_PLAIN_ENUM_MIN(LhsEtorType::Alignment,LhsVecPacketSize*int(sizeof(typename LhsNestedCleaned::Scalar))),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsArg	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Lhs LhsArg;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsArg	Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1 const&, SparseView<Lhs1> >::type LhsArg;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsBlasTraits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsBlasTraits	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsBlasTraits	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsCleaned	Eigen/src/Core/Product.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::traits
LhsCleaned	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
LhsCoeffReadCost	Eigen/src/Core/ProductEvaluators.h	/^    LhsCoeffReadCost = LhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsEtorType	Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<LhsNestedCleaned> LhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
LhsEval	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualLhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsEval	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsEval	Eigen/src/SparseCore/TriangularSolver.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsEvaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<LhsArg> LhsEvaluator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsFlags	Eigen/src/Core/CoreEvaluators.h	/^    LhsFlags = evaluator<Lhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
LhsFlags	Eigen/src/Core/ProductEvaluators.h	/^    LhsFlags = LhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsInnerIterator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsIsSelfAdjoint	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsSelfAdjoint = (LhsMode&SelfAdjoint)==SelfAdjoint,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon289
LhsIsUpper	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsUpper = (LhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon289
LhsIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Lhs>::InnerIterator  LhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
LhsIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<LhsArg>::InnerIterator  LhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<LhsArg>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsIterator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<ActualLhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsIterator	Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsMatrixType	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename take_matrix_for_product<Lhs>::type LhsMatrixType;$/;"	t	struct:Eigen::internal::traits
LhsMatrixType	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<homogeneous_left_product_impl>::LhsMatrixType LhsMatrixType;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
LhsMatrixTypeNested	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename LhsMatrixTypeCleaned::Nested>::type LhsMatrixTypeNested;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<LhsType>::type LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
LhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Lhs>::type LhsNested;$/;"	t	class:Eigen::Product
LhsNested	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Lhs,Rhs::ColsAtCompileTime>::type LhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
LhsNested	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<Lhs,1>::type LhsNested;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsNestedCleaned	Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	class:Eigen::Product
LhsNestedCleaned	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
LhsOuterStrideBytes	Eigen/src/Core/ProductEvaluators.h	/^    LhsOuterStrideBytes = int(LhsNestedCleaned::OuterStrideAtCompileTime) * int(sizeof(typename LhsNestedCleaned::Scalar)),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::LhsPacket LhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
LhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,RealPacket,  Scalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
LhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
LhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
LhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
LhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
LhsPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon281
LhsPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon282
LhsProductTraits	Eigen/src/Core/SolveTriangular.h	/^  typedef blas_traits<Lhs> LhsProductTraits;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress   = Traits::LhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon294
LhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
LhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
LhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
LhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
LhsRowMajor	Eigen/src/Core/ProductEvaluators.h	/^    LhsRowMajor = LhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsScalar	Eigen/src/Core/SolveTriangular.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar> LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
LhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_RhsScalar,_LhsScalar>::type LhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
LhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsTraits	Eigen/src/Core/Product.h	/^  typedef traits<LhsCleaned> LhsTraits;$/;"	t	struct:Eigen::internal::traits
LhsUpLo	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { LhsUpLo = LhsMode&(Upper|Lower) };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon283
LhsVecPacketSize	Eigen/src/Core/ProductEvaluators.h	/^    LhsVecPacketSize = unpacket_traits<LhsVecPacketType>::size,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
LhsVecPacketType	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename find_best_packet<Scalar,RowsAtCompileTime>::type LhsVecPacketType;$/;"	t	struct:Eigen::internal::product_evaluator
LinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinearAccess	Eigen/src/Core/CoreEvaluators.h	/^    LinearAccess = ( (Direction==BothDirections) && (int(Flags0)&PacketAccessBit) )$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
LinearAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int LinearAccessBit = 0x10;$/;"	m	namespace:Eigen
LinearAccessMask	Eigen/src/Core/CoreEvaluators.h	/^    LinearAccessMask = XprType::IsVectorAtCompileTime ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon318
LinearAccessMask	Eigen/src/Core/CoreEvaluators.h	/^    LinearAccessMask = bool(HasNoStride) || bool(PlainObjectType::IsVectorAtCompileTime) ? ~int(0) : ~int(LinearAccessBit),$/;"	e	enum:Eigen::internal::evaluator::__anon312
LinearBlock	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlock	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearBlockConst	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::template ConstNColsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlockConst	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::template ConstNRowsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearMapper	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gebp_kernel
LinearMapper	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_lhs
LinearMapper	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
LinearMapper	Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasLinearMapper<Scalar, Index, AlignmentType> LinearMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
LinearMatrixType	Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim,Options> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearPacketSize	Eigen/src/Core/AssignEvaluator.h	/^    LinearPacketSize = unpacket_traits<LinearPacketType>::size,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon256
LinearPacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename find_best_packet<DstScalar,Dst::SizeAtCompileTime>::type LinearPacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
LinearPart	Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> LinearPart;$/;"	t	class:Eigen::Transform
LinearProduct	Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs,LinearBlock,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearProduct	Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<LinearBlock,Rhs,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearRequiredAlignment	Eigen/src/Core/AssignEvaluator.h	/^    LinearRequiredAlignment = unpacket_traits<LinearPacketType>::alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon257
LinearTraversal	Eigen/src/Core/util/Constants.h	/^  LinearTraversal,$/;"	e	enum:Eigen::TraversalType
LinearVectorizedTraversal	Eigen/src/Core/util/Constants.h	/^  LinearVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
ListEl	Eigen/src/SparseCore/AmbiVector.h	/^    struct ListEl$/;"	s	class:Eigen::internal::AmbiVector
Literal	Eigen/src/SVD/BDCSVD.h	/^  typedef typename NumTraits<RealScalar>::Literal Literal;$/;"	t	class:Eigen::BDCSVD
Log10ReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log10_op<Scalar>, const Derived> Log10ReturnType;$/;"	t
Log1pReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log1p_op<Scalar>, const Derived> Log1pReturnType;$/;"	t
LogReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log_op<Scalar>, const Derived> LogReturnType;$/;"	t
Lorenz	models/models.hpp	/^    Lorenz(Real sigma,Real rho,Real beta):Equation(3),sigma(sigma),rho(rho),beta(beta) { }$/;"	f	class:Lorenz
Lorenz	models/models.hpp	/^class Lorenz:public Equation$/;"	c
Lower	Eigen/src/Core/util/Constants.h	/^  Lower=0x1,                      $/;"	e	enum:Eigen::UpLoType
LpNormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    template<int p> struct LpNormReturnType {$/;"	s	class:Eigen::VectorwiseOp
LuType	Eigen/src/LU/FullPivLU.h	/^  typedef FullPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LuType	Eigen/src/LU/PartialPivLU.h	/^  typedef PartialPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LvalueBit	Eigen/src/Core/util/Constants.h	/^const unsigned int LvalueBit = 0x20;$/;"	m	namespace:Eigen
LvalueBitFlag	Eigen/src/Core/ArrayWrapper.h	/^    LvalueBitFlag = is_lvalue<ExpressionType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon129
LvalueBitFlag	Eigen/src/Core/ArrayWrapper.h	/^    LvalueBitFlag = is_lvalue<ExpressionType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon130
MALA_HPP	mcmc/mala.hpp	2;"	d
MALA_Sampler	mcmc/mala.hpp	/^  MALA_Sampler(RandomVariable* rand_var,Real gamma, int no_iter,Real*init_val):rand_var(rand_var),gamma(gamma),no_iter(no_iter),init_val(init_val),n(rand_var->dim()),U(0,1)$/;"	f	class:MALA_Sampler
MALA_Sampler	mcmc/mala.hpp	/^class MALA_Sampler$/;"	c
MATRIX_FREE_CONJUGATE_GRADIENT_IS_COMPATIBLE_WITH_UPPER_UNION_LOWER_MODE_ONLY	Eigen/src/Core/util/StaticAssert.h	/^        MATRIX_FREE_CONJUGATE_GRADIENT_IS_COMPATIBLE_WITH_UPPER_UNION_LOWER_MODE_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
MCMC_H	tools/mcmc.hpp	2;"	d
MCMC_Sampler	tools/mcmc.hpp	/^  MCMC_Sampler(RandomVariable* rand_var,Real gamma, int no_iter,Real*init_val):rand_var(rand_var),gamma(gamma),no_iter(no_iter),init_val(init_val),n(rand_var->dim()),U(0,1)$/;"	f	class:MCMC_Sampler
MCMC_Sampler	tools/mcmc.hpp	/^class MCMC_Sampler$/;"	c
METHODS_H	core_methods.hpp	3;"	d
METHODS_HPP	methods/methods.hpp	2;"	d
METIS_SUPPORT_H	Eigen/src/MetisSupport/MetisSupport.h	10;"	d
MODELS_H	models/models.hpp	2;"	d
Map	Eigen/src/Core/Map.h	/^    explicit inline Map(PointerArgType dataPtr, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index rows, Index cols, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index size, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/Map.h	/^template<typename PlainObjectType, int MapOptions, typename StrideType> class Map$/;"	c	namespace:Eigen
Map	Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/PermutationMatrix.h	/^class Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess>$/;"	c	namespace:Eigen
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	Eigen/src/Core/Transpositions.h	/^    explicit inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/Transpositions.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	Eigen/src/Core/Transpositions.h	/^class Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,PacketAccess>$/;"	c	namespace:Eigen
Map	Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC explicit EIGEN_STRONG_INLINE Map(Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC explicit EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	Eigen/src/Geometry/Quaternion.h	/^class Map<Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	Eigen/src/Geometry/Quaternion.h	/^class Map<const Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, const StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	Eigen/src/SparseCore/SparseMap.h	/^class Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	Eigen/src/SparseCore/SparseMap.h	/^class Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::SparseMatrix
Map	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(MatrixBase<MatrixType>& _mat)$/;"	f	struct:Eigen::SluMatrix
Map	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(SparseMatrixBase<MatrixType>& a_mat)$/;"	f	struct:Eigen::SluMatrix
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapBase	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index rows, Index cols) : Base(dataPtr, rows, cols) {}$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^    explicit inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index rows, Index cols)$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index vecSize)$/;"	f	class:Eigen::MapBase
MapBase	Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
MapBase	Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, WriteAccessors>$/;"	c	namespace:Eigen
MapLU	Eigen/src/LU/PartialPivLU.h	/^  typedef Map<Matrix<Scalar, Dynamic, Dynamic, StorageOrder> > MapLU;$/;"	t	struct:Eigen::internal::partial_lu_impl
MapType	Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Unaligned>  MapType;$/;"	t	class:Eigen::PlainObjectBase
MappedMatrixBlock	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Map<ScalarMatrix, 0,  OuterStride<> > MappedMatrixBlock;$/;"	t	class:Eigen::internal::SparseLUImpl
MappedRhs	Eigen/src/Core/SolveTriangular.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;$/;"	t	struct:Eigen::internal::triangular_solver_selector
MappedSparseMatrix	Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline MappedSparseMatrix(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr, Scalar* valuePtr, StorageIndex* innerNonZeroPtr = 0)$/;"	f	class:Eigen::MappedSparseMatrix
MappedSparseMatrix	Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix$/;"	c	namespace:Eigen
MappedSuperNodalMatrix	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix(Index m, Index n,  ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix$/;"	c	namespace:Eigen::internal
MaskLvalueBit	Eigen/src/Core/Diagonal.h	/^    MaskLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon271
MaskPacketAccessBit	Eigen/src/Core/CoreEvaluators.h	/^    MaskPacketAccessBit = (InnerStrideAtCompileTime == 1) ? PacketAccessBit : 0,$/;"	e	enum:Eigen::internal::evaluator::__anon314
MatchAtCompileTime	Eigen/src/Core/Ref.h	/^      MatchAtCompileTime = HasDirectAccess && StorageOrderMatch && InnerStrideMatch && OuterStrideMatch && AlignmentMatch && ScalarTypeMatch$/;"	e	enum:Eigen::internal::traits::match::__anon456
MatchAtCompileTime	Eigen/src/SparseCore/SparseRef.h	/^      MatchAtCompileTime = (Derived::Flags&CompressedAccessBit) && Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon7
MatchAtCompileTime	Eigen/src/SparseCore/SparseRef.h	/^      MatchAtCompileTime = (Derived::Flags&CompressedAccessBit) && StorageOrderMatch$/;"	e	enum:Eigen::internal::traits::match::__anon4
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix() : Base()$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Matrix& other) : Base(other)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix(const T& x)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^    explicit Matrix(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Matrix
Matrix	Eigen/src/Core/Matrix.h	/^class Matrix$/;"	c	namespace:Eigen
Matrix	Eigen/src/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix2	Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2s	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,2> Matrix2s;$/;"	t	class:Eigen::RealQZ
Matrix3	Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::QuaternionBase
MatrixAlignment	Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon647
MatrixAlignment	Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon648
MatrixBase	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase() : Base() {}$/;"	f	class:Eigen::MatrixBase
MatrixBase	Eigen/src/Core/MatrixBase.h	/^template<typename Derived> class MatrixBase$/;"	c	namespace:Eigen
MatrixCols	Eigen/src/Core/Block.h	/^    MatrixCols = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon245
MatrixConjugateReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::SelfAdjointView
MatrixConjugateReturnType	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::TriangularView
MatrixFlags	Eigen/src/Core/ProductEvaluators.h	/^    MatrixFlags = evaluator<MatrixType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
MatrixFree	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MatrixFree = false$/;"	e	enum:Eigen::internal::generic_matrix_wrapper::__anon659
MatrixFree	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MatrixFree = true$/;"	e	enum:Eigen::internal::generic_matrix_wrapper::__anon660
MatrixHReturnType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef internal::HessenbergDecompositionMatrixHReturnType<MatrixType> MatrixHReturnType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixL	Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLDLT
MatrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLLT
MatrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::Lower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::UnitLower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixOptions	Eigen/src/SVD/BDCSVD.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::BDCSVD::__anon629
MatrixOptions	Eigen/src/SVD/JacobiSVD.h	/^      MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::JacobiSVD::__anon628
MatrixOptions	Eigen/src/SVD/SVDBase.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::SVDBase::__anon621
MatrixQReturnType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef internal::FullPivHouseholderQRMatrixQReturnType<MatrixType> MatrixQReturnType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixQType	Eigen/src/QR/HouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, (MatrixType::Flags&RowMajorBit) ? RowMajor : ColMajor, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::HouseholderQR
MatrixRows	Eigen/src/Core/Block.h	/^    MatrixRows = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon245
MatrixTReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef internal::TridiagonalizationMatrixTReturnType<MatrixTypeRealView> MatrixTReturnType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	Eigen/src/Cholesky/LDLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LDLT
MatrixType	Eigen/src/Cholesky/LLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LLT
MatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodBase
MatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodDecomposition
MatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLDLT
MatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLLT
MatrixType	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSupernodalLLT
MatrixType	Eigen/src/Core/ProductEvaluators.h	/^    typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixType	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<typename internal::conditional<int(Side)==OnTheRight,LhsNested,RhsNested>::type>::type MatrixType;$/;"	t	struct:Eigen::internal::generic_product_impl
MatrixType	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixType	Eigen/src/Core/SelfAdjointView.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointView
MatrixType	Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularView
MatrixType	Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularViewImpl
MatrixType	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexEigenSolver
MatrixType	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexSchur
MatrixType	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::EigenSolver
MatrixType	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedEigenSolver
MatrixType	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
MatrixType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixType	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealQZ
MatrixType	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealSchur
MatrixType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
MatrixType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
MatrixType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	Eigen/src/Geometry/Transform.h	/^  typedef typename Transform<Scalar,Dim,AffineCompact,Options>::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
MatrixType	Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	Eigen/src/Geometry/Transform.h	/^  typedef typename internal::make_proper_matrix_type<Scalar,Rows,HDim,Options>::type MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BiCGSTAB
MatrixType	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ConjugateGradient
MatrixType	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::IterativeSolverBase
MatrixType	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
MatrixType	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/LU/FullPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivLU
MatrixType	Eigen/src/LU/PartialPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PartialPivLU
MatrixType	Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MapLU, Dynamic, Dynamic> MatrixType;$/;"	t	struct:Eigen::internal::partial_lu_impl
MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixBase
MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLDLT
MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLLT
MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLU
MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pastix_traits
MatrixType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pardiso_traits
MatrixType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::MatrixType MatrixType;$/;"	t	class:Eigen::PardisoImpl
MatrixType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
MatrixType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixType	Eigen/src/QR/HouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HouseholderQR
MatrixType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor, StorageIndex> MatrixType;$/;"	t	class:Eigen::SPQR
MatrixType	Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BDCSVD
MatrixType	Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/SVD/JacobiSVD.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::JacobiSVD
MatrixType	Eigen/src/SVD/JacobiSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SVDBase
MatrixType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
MatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholesky
MatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLDLT
MatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLLT
MatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
MatrixType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar, _Options, _StorageIndex> MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixType	Eigen/src/SparseLU/SparseLU.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Eigen::SparseLU
MatrixType	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> MatrixType; $/;"	t	class:Eigen::internal::SparseLUImpl
MatrixType	Eigen/src/SparseQR/SparseQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SparseQR
MatrixType	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::evaluator_traits
MatrixType	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::QRMatrixType MatrixType;$/;"	t	struct:Eigen::SparseQR_QProduct
MatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperILU
MatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLU
MatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLUBase
MatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Derived MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Matrix<Scalar,Rows,Cols,Options,MRows,MCols> MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::UmfPackLU
MatrixType	Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::image_retval_base
MatrixType	Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	Eigen/src/misc/Kernel.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixTypeCleaned	Eigen/src/Core/ProductEvaluators.h	/^    typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeCleaned	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixTypeCleaned	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeCleaned	Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeInnerStride	Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeInnerStride =  inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon619
MatrixTypeNested	Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryView
MatrixTypeNested	Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/Diagonal.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::Replicate
MatrixTypeNested	Eigen/src/Core/Replicate.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/Reverse.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNested	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/Transpose.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::Transpose
MatrixTypeNested	Eigen/src/Core/Transpose.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::TriangularView
MatrixTypeNested	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
MatrixTypeNested	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
MatrixTypeNested	Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNested	Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseView
MatrixTypeNestedCleaned	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNestedCleaned	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedNonRef	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedNonRef MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedNonRef	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedNonRef	Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedPlain	Eigen/src/Core/Transpose.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedPlain;$/;"	t	struct:Eigen::internal::traits
MatrixTypeOuterStride	Eigen/src/Core/Diagonal.h	/^    MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon271
MatrixTypeRealView	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::remove_all<typename MatrixType::RealReturnType>::type MatrixTypeRealView;$/;"	t	class:Eigen::Tridiagonalization
MatrixU	Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLDLT
MatrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLLT
MatrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::Upper>   MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixUType	Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::BDCSVD
MatrixUType	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::JacobiSVD
MatrixUType	Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, MatrixOptions, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixUType;$/;"	t	class:Eigen::SVDBase
MatrixVType	Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::BDCSVD
MatrixVType	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::JacobiSVD
MatrixVType	Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, ColsAtCompileTime, ColsAtCompileTime, MatrixOptions, MaxColsAtCompileTime, MaxColsAtCompileTime> MatrixVType;$/;"	t	class:Eigen::SVDBase
MatrixWrapper	Eigen/src/Core/ArrayWrapper.h	/^    explicit inline MatrixWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::MatrixWrapper
MatrixWrapper	Eigen/src/Core/ArrayWrapper.h	/^class MatrixWrapper : public MatrixBase<MatrixWrapper<ExpressionType> >$/;"	c	namespace:Eigen
MatrixWrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef internal::generic_matrix_wrapper<MatrixType> MatrixWrapper;$/;"	t	class:Eigen::IterativeSolverBase
MatrixX	Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<Scalar, Dynamic, Dynamic, ColMajor> MatrixX;$/;"	t	class:Eigen::BDCSVD
MatrixXpr	Eigen/src/Core/util/Constants.h	/^struct MatrixXpr {};$/;"	s	namespace:Eigen
MatrixXr	Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, Dynamic, ColMajor> MatrixXr;$/;"	t	class:Eigen::BDCSVD
Max	Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MaxCoeffReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_maxCoeff>::Type MaxCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MaxCols	Eigen/src/Core/GeneralProduct.h	/^    MaxCols = traits<_Rhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
MaxColsAtCompileTime	Eigen/src/Cholesky/LDLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon667
MaxColsAtCompileTime	Eigen/src/Cholesky/LLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::LLT::__anon665
MaxColsAtCompileTime	Eigen/src/CholmodSupport/CholmodSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::CholmodBase::__anon128
MaxColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
MaxColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon234
MaxColsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon235
MaxColsAtCompileTime	Eigen/src/Core/Block.h	/^    MaxColsAtCompileTime = BlockCols==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon245
MaxColsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    MaxColsAtCompileTime = traits<XprType>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon314
MaxColsAtCompileTime	Eigen/src/Core/CwiseBinaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon226
MaxColsAtCompileTime	Eigen/src/Core/CwiseTernaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon273
MaxColsAtCompileTime	Eigen/src/Core/DenseBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
MaxColsAtCompileTime	Eigen/src/Core/Diagonal.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon271
MaxColsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^      MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon457
MaxColsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^    MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon459
MaxColsAtCompileTime	Eigen/src/Core/Matrix.h	/^    MaxColsAtCompileTime = _MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon451
MaxColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = PermTraits::MaxColsAtCompileTime$/;"	e	enum:Eigen::InverseImpl::__anon244
MaxColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::PermutationBase::__anon242
MaxColsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^    MaxColsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon243
MaxColsAtCompileTime	Eigen/src/Core/Product.h	/^    MaxColsAtCompileTime = RhsTraits::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon423
MaxColsAtCompileTime	Eigen/src/Core/ProductEvaluators.h	/^    MaxColsAtCompileTime = RhsNestedCleaned::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::product_evaluator::__anon443
MaxColsAtCompileTime	Eigen/src/Core/Redux.h	/^    MaxColsAtCompileTime = XprType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
MaxColsAtCompileTime	Eigen/src/Core/Replicate.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon270
MaxColsAtCompileTime	Eigen/src/Core/Reverse.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon453
MaxColsAtCompileTime	Eigen/src/Core/Select.h	/^    MaxColsAtCompileTime = ConditionMatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon131
MaxColsAtCompileTime	Eigen/src/Core/SolverBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
MaxColsAtCompileTime	Eigen/src/Core/Transpose.h	/^    MaxColsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon438
MaxColsAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
MaxColsAtCompileTime	Eigen/src/Core/VectorwiseOp.h	/^    MaxColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon432
MaxColsAtCompileTime	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexEigenSolver::__anon634
MaxColsAtCompileTime	Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexSchur::__anon640
MaxColsAtCompileTime	Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::EigenSolver::__anon633
MaxColsAtCompileTime	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon635
MaxColsAtCompileTime	Eigen/src/Eigenvalues/RealQZ.h	/^        MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealQZ::__anon632
MaxColsAtCompileTime	Eigen/src/Eigenvalues/RealSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealSchur::__anon636
MaxColsAtCompileTime	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon631
MaxColsAtCompileTime	Eigen/src/Geometry/Homogeneous.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon96
MaxColsAtCompileTime	Eigen/src/Geometry/Transform.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon87
MaxColsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^      MaxColsAtCompileTime = internal::traits<HouseholderSequence>::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderSequence::__anon126
MaxColsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^    MaxColsAtCompileTime = MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon125
MaxColsAtCompileTime	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::DiagonalPreconditioner::__anon656
MaxColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::IncompleteCholesky::__anon663
MaxColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::IncompleteLUT::__anon664
MaxColsAtCompileTime	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::IterativeSolverBase::__anon661
MaxColsAtCompileTime	Eigen/src/LU/FullPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivLU::__anon644
MaxColsAtCompileTime	Eigen/src/LU/PartialPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PartialPivLU::__anon642
MaxColsAtCompileTime	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PastixBase::__anon76
MaxColsAtCompileTime	Eigen/src/PardisoSupport/PardisoSupport.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::PardisoImpl::__anon115
MaxColsAtCompileTime	Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon670
MaxColsAtCompileTime	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon674
MaxColsAtCompileTime	Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon672
MaxColsAtCompileTime	Eigen/src/QR/HouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderQR::__anon668
MaxColsAtCompileTime	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::SPQR::__anon114
MaxColsAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon629
MaxColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon628
MaxColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon625
MaxColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon626
MaxColsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon627
MaxColsAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon621
MaxColsAtCompileTime	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon66
MaxColsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon43
MaxColsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon42
MaxColsAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
MaxColsAtCompileTime	Eigen/src/SparseCore/SparseVector.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon10
MaxColsAtCompileTime	Eigen/src/SparseLU/SparseLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SparseLU::__anon120
MaxColsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SparseQR::__anon74
MaxColsAtCompileTime	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SuperLUBase::__anon113
MaxColsAtCompileTime	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::UmfPackLU::__anon1
MaxDepth	Eigen/src/Core/GeneralProduct.h	/^    MaxDepth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
MaxDepthAtCompileTime	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    MaxDepthAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(Lhs::MaxColsAtCompileTime,Rhs::MaxRowsAtCompileTime)$/;"	e	enum:Eigen::internal::generic_product_impl::__anon300
MaxDiagSizeAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime, MaxColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon629
MaxDiagSizeAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon628
MaxDiagSizeAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon621
MaxRows	Eigen/src/Core/GeneralProduct.h	/^    MaxRows = traits<_Lhs>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
MaxRowsAtCompileTime	Eigen/src/Cholesky/LDLT.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon667
MaxRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
MaxRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon234
MaxRowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon235
MaxRowsAtCompileTime	Eigen/src/Core/Block.h	/^    MaxRowsAtCompileTime = BlockRows==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon245
MaxRowsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    MaxRowsAtCompileTime = traits<XprType>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon314
MaxRowsAtCompileTime	Eigen/src/Core/CwiseBinaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon226
MaxRowsAtCompileTime	Eigen/src/Core/CwiseTernaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon273
MaxRowsAtCompileTime	Eigen/src/Core/DenseBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
MaxRowsAtCompileTime	Eigen/src/Core/Diagonal.h	/^    MaxRowsAtCompileTime = int(MatrixType::MaxSizeAtCompileTime) == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon271
MaxRowsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^      MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon457
MaxRowsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^    MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon459
MaxRowsAtCompileTime	Eigen/src/Core/Matrix.h	/^    MaxRowsAtCompileTime = _MaxRows,$/;"	e	enum:Eigen::internal::traits::__anon451
MaxRowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = PermTraits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon244
MaxRowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon242
MaxRowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^    MaxRowsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon243
MaxRowsAtCompileTime	Eigen/src/Core/Product.h	/^    MaxRowsAtCompileTime = LhsTraits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon423
MaxRowsAtCompileTime	Eigen/src/Core/ProductEvaluators.h	/^    MaxRowsAtCompileTime = LhsNestedCleaned::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon443
MaxRowsAtCompileTime	Eigen/src/Core/Redux.h	/^    MaxRowsAtCompileTime = XprType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
MaxRowsAtCompileTime	Eigen/src/Core/Replicate.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon270
MaxRowsAtCompileTime	Eigen/src/Core/Reverse.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon453
MaxRowsAtCompileTime	Eigen/src/Core/Select.h	/^    MaxRowsAtCompileTime = ConditionMatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon131
MaxRowsAtCompileTime	Eigen/src/Core/SolverBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
MaxRowsAtCompileTime	Eigen/src/Core/Transpose.h	/^    MaxRowsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon438
MaxRowsAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
MaxRowsAtCompileTime	Eigen/src/Core/VectorwiseOp.h	/^    MaxRowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon432
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon634
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon640
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon633
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon635
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/RealQZ.h	/^        MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon632
MaxRowsAtCompileTime	Eigen/src/Eigenvalues/RealSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon636
MaxRowsAtCompileTime	Eigen/src/Geometry/Homogeneous.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon96
MaxRowsAtCompileTime	Eigen/src/Geometry/Transform.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon87
MaxRowsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^      MaxRowsAtCompileTime = internal::traits<HouseholderSequence>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon126
MaxRowsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^    MaxRowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon125
MaxRowsAtCompileTime	Eigen/src/LU/FullPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon644
MaxRowsAtCompileTime	Eigen/src/LU/PartialPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon642
MaxRowsAtCompileTime	Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon670
MaxRowsAtCompileTime	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon674
MaxRowsAtCompileTime	Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon672
MaxRowsAtCompileTime	Eigen/src/QR/HouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon668
MaxRowsAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon629
MaxRowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon628
MaxRowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon624
MaxRowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon625
MaxRowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon626
MaxRowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon627
MaxRowsAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon621
MaxRowsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon42
MaxRowsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon43
MaxRowsAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
MaxRowsAtCompileTime	Eigen/src/SparseCore/SparseVector.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon10
MaxSize	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon639
MaxSize	Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon638
MaxSizeAtCompileTime	Eigen/src/Core/AssignEvaluator.h	/^    MaxSizeAtCompileTime = Dst::SizeAtCompileTime$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon255
MaxSizeAtCompileTime	Eigen/src/Core/Assign_MKL.h	/^      MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
MaxSizeAtCompileTime	Eigen/src/Core/DenseBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
MaxSizeAtCompileTime	Eigen/src/Core/SolverBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
MaxSizeAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
MaxSizeAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
MaxSizeMinusOne	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : MaxSize - 1$/;"	e	enum:Eigen::HessenbergDecomposition::__anon639
MaxSizeMinusOne	Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : (MaxSize > 1 ? MaxSize - 1 : 1)$/;"	e	enum:Eigen::Tridiagonalization::__anon638
MaxSmallDimAtCompileTime	Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::image_retval::__anon646
MaxSmallDimAtCompileTime	Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::kernel_retval::__anon645
MayInnerVectorize	Eigen/src/Core/AssignEvaluator.h	/^    MayInnerVectorize  = MightVectorize$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
MayLinearVectorize	Eigen/src/Core/AssignEvaluator.h	/^    MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
MayLinearVectorize	Eigen/src/Core/Redux.h	/^    MayLinearVectorize = bool(MightVectorize) && (int(Derived::Flags)&LinearAccessBit),$/;"	e	enum:Eigen::internal::redux_traits::__anon570
MayLinearize	Eigen/src/Core/AssignEvaluator.h	/^    MayLinearize = bool(StorageOrdersAgree) && (int(DstFlags) & int(SrcFlags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
MaySliceVectorize	Eigen/src/Core/AssignEvaluator.h	/^    MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
MaySliceVectorize	Eigen/src/Core/Redux.h	/^    MaySliceVectorize  = bool(MightVectorize) && int(InnerMaxSize)>=3*PacketSize$/;"	e	enum:Eigen::internal::redux_traits::__anon570
MayUnrollCompletely	Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollCompletely = int(Dst::SizeAtCompileTime) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon260
MayUnrollInner	Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollInner      = int(InnerSize) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon260
MeanReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_mean>::Type MeanReturnType;$/;"	t	class:Eigen::VectorwiseOp
MemType	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	t	namespace:Eigen::internal	typeref:enum:Eigen::internal::__anon119
MetisOrdering	Eigen/src/MetisSupport/MetisSupport.h	/^class MetisOrdering$/;"	c	namespace:Eigen
MightEnableVml	Eigen/src/Core/Assign_MKL.h	/^      MightEnableVml = StorageOrdersAgree && DstHasDirectAccess && SrcHasDirectAccess && Src::InnerStrideAtCompileTime==1 && Dst::InnerStrideAtCompileTime==1,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
MightLinearize	Eigen/src/Core/Assign_MKL.h	/^      MightLinearize = MightEnableVml && (int(Dst::Flags) & int(Src::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
MightVectorize	Eigen/src/Core/AssignEvaluator.h	/^    MightVectorize = bool(StorageOrdersAgree)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
MightVectorize	Eigen/src/Core/Redux.h	/^    MightVectorize = (int(Derived::Flags)&ActualPacketAccessBit)$/;"	e	enum:Eigen::internal::redux_traits::__anon570
Min	Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MinCoeffReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_minCoeff>::Type MinCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MinRowsAtCompileTime	Eigen/src/Geometry/Umeyama.h	/^    MinRowsAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, OtherMatrixType::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon85
Mode	Eigen/src/Core/SelfAdjointView.h	/^      Mode = internal::traits<SelfAdjointView>::Mode,$/;"	e	enum:Eigen::SelfAdjointView::__anon278
Mode	Eigen/src/Core/SelfAdjointView.h	/^    Mode = UpLo | SelfAdjoint,$/;"	e	enum:Eigen::internal::traits::__anon277
Mode	Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularView::__anon267
Mode	Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularViewImpl::__anon268
Mode	Eigen/src/Core/TriangularMatrix.h	/^      Mode = internal::traits<Derived>::Mode,$/;"	e	enum:Eigen::TriangularBase::__anon265
Mode	Eigen/src/Core/TriangularMatrix.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::internal::traits::__anon266
Mode	Eigen/src/Geometry/Transform.h	/^    Mode = Transform::Mode,$/;"	e	enum:Eigen::internal::transform_traits::__anon86
Mode	Eigen/src/Geometry/Transform.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::Transform::__anon88
Mode	Eigen/src/Geometry/Transform.h	/^    Mode =$/;"	e	enum:Eigen::internal::transform_product_result::__anon90
Mode	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon39
Model	models/models.hpp	/^    Model(Real *x0,Real t0, Real tf,Equation *equation):t0(t0), tf(tf), equation(equation)$/;"	f	class:Model
Model	models/models.hpp	/^class Model$/;"	c
MoveOuter	Eigen/src/SparseCore/SparsePermutation.h	/^      MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon61
MulCost	Eigen/src/Core/NumTraits.h	/^    MulCost = 1$/;"	e	enum:Eigen::GenericNumTraits::__anon427
NCMatrix	Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> NCMatrix;$/;"	t	class:Eigen::SparseLU
NColsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
NEON	Eigen/src/Core/util/Constants.h	/^    NEON = 0x4,$/;"	e	enum:Eigen::Architecture::Type
NRowsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
NUMERIC_TYPE_MUST_BE_REAL	Eigen/src/Core/util/StaticAssert.h	/^        NUMERIC_TYPE_MUST_BE_REAL,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
NaturalOrdering	Eigen/src/OrderingMethods/Ordering.h	/^class NaturalOrdering$/;"	c	namespace:Eigen
NeedToConjugate	Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = Base::NeedToConjugate ? 0 : IsComplex$/;"	e	enum:Eigen::internal::blas_traits::__anon221
NeedToConjugate	Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon220
NeedsAlignment	Eigen/src/Geometry/Quaternion.h	/^  enum { NeedsAlignment = internal::traits<Quaternion>::Alignment>0 };$/;"	e	enum:Eigen::Quaternion::__anon83
NeedsToAlign	Eigen/src/Core/PlainObjectBase.h	/^    enum { NeedsToAlign = (SizeAtCompileTime != Dynamic) && (internal::traits<Derived>::Alignment>0) };$/;"	e	enum:Eigen::PlainObjectBase::__anon461
NegativeReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_opposite_op<Scalar>, const Derived> NegativeReturnType;$/;"	t
NegativeSemiDef	Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
NestByRefBit	Eigen/src/Core/util/Constants.h	/^const unsigned int NestByRefBit = 0x100;$/;"	m	namespace:Eigen
NestByValue	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC explicit inline NestByValue(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::NestByValue
NestByValue	Eigen/src/Core/NestByValue.h	/^template<typename ExpressionType> class NestByValue$/;"	c	namespace:Eigen
Nested	Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper Nested;$/;"	t	class:Eigen::DiagonalWrapper
Nested	Eigen/src/Core/DiagonalMatrix.h	/^    typedef const DiagonalMatrix& Nested;$/;"	t	class:Eigen::DiagonalMatrix
Nested	Eigen/src/Core/Inverse.h	/^  typedef typename internal::ref_selector<Inverse>::type Nested;$/;"	t	class:Eigen::Inverse
Nested	Eigen/src/Core/PermutationMatrix.h	/^    typedef const PermutationMatrix& Nested;$/;"	t	class:Eigen::PermutationMatrix
Nested	Eigen/src/Core/TriangularMatrix.h	/^    typedef Derived const& Nested;$/;"	t	class:Eigen::TriangularBase
Nested	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::ref_selector<SolveWithGuess>::type Nested;$/;"	t	class:Eigen::SolveWithGuess
NestedExpression	Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::ArrayWrapper
NestedExpression	Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::MatrixWrapper
NestedExpression	Eigen/src/Core/Block.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::Block
NestedExpression	Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryOp
NestedExpression	Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryView
NestedExpression	Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::Inverse
NestedExpression	Eigen/src/Core/Replicate.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Replicate
NestedExpression	Eigen/src/Core/Reverse.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Reverse
NestedExpression	Eigen/src/Core/SelfAdjointView.h	/^    typedef MatrixTypeNestedCleaned NestedExpression;$/;"	t	class:Eigen::SelfAdjointView
NestedExpression	Eigen/src/Core/Transpose.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Transpose
NestedExpression	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedCleaned NestedExpression;$/;"	t	class:Eigen::TriangularView
NestedExpression	Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixType NestedExpression;$/;"	t	class:Eigen::Homogeneous
NestedExpression	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type NestedExpression;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
NestedExpression	Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::SparseView
NestedExpressionType	Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type NestedExpressionType;$/;"	t	class:Eigen::ArrayWrapper
NestedExpressionType	Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type NestedExpressionType;$/;"	t	class:Eigen::MatrixWrapper
NewInf	Eigen/src/Core/util/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen::internal
NewSup	Eigen/src/Core/util/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen::internal
NoAlias	Eigen/src/Core/NoAlias.h	/^    explicit NoAlias(ExpressionType& expression) : m_expression(expression) {}$/;"	f	class:Eigen::NoAlias
NoAlias	Eigen/src/Core/NoAlias.h	/^class NoAlias$/;"	c	namespace:Eigen
NoChange	Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	e	enum:Eigen::NoChange_t
NoChange_t	Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	g	namespace:Eigen
NoConvergence	Eigen/src/Core/util/Constants.h	/^  NoConvergence = 2,$/;"	e	enum:Eigen::ComputationInfo
NoPivoting	Eigen/src/Core/util/Constants.h	/^  NoPivoting          = 0x02, $/;"	e	enum:Eigen::DecompositionOptions
NoPreferredStorageOrderBit	Eigen/src/Core/util/Constants.h	/^const unsigned int NoPreferredStorageOrderBit = 0x200;$/;"	m	namespace:Eigen
NoQRPreconditioner	Eigen/src/Core/util/Constants.h	/^  NoQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
NoUnrolling	Eigen/src/Core/util/Constants.h	/^  NoUnrolling,$/;"	e	enum:Eigen::UnrollingType
NonConstImagReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;$/;"	t
NonConstRealReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type NonConstRealReturnType;$/;"	t
NonInteger	Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::NonInteger         NonInteger;$/;"	t	class:Eigen::AlignedBox
NormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_norm,RealScalar>::Type NormReturnType;$/;"	t	class:Eigen::VectorwiseOp
NormalDistribution	tools/random_variable.hpp	/^    NormalDistribution(Real mean, Real variance):seed(std::chrono::system_clock::now().time_since_epoch().count())$/;"	f	class:NormalDistribution
NormalDistribution	tools/random_variable.hpp	/^class NormalDistribution: public RandomVariable$/;"	c
NormalReturnType	Eigen/src/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NullaryExpr	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NumTraits	Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct NumTraits<Eigen::half>$/;"	s	namespace:Eigen
NumberOfRegisters	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
NumberOfRegisters	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
NumberOfRegisters	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
NumericalIssue	Eigen/src/Core/util/Constants.h	/^  NumericalIssue = 1, $/;"	e	enum:Eigen::ComputationInfo
NumericalMethod	core_methods.hpp	/^class NumericalMethod$/;"	c
NumericalMethod	methods/core_methods.cpp	/^NumericalMethod::NumericalMethod(Model& m, Real h0, StepIntegrator& base_integrator) :model(m),h0(h0),base_integrator(base_integrator)$/;"	f	class:NumericalMethod
NumericalMethod	methods/core_methods.hpp	/^class NumericalMethod$/;"	c
NumericalMethodFactory	methods/methods.hpp	/^    NumericalMethodFactory(std::string method_name ):method_name(method_name){}$/;"	f	class:NumericalMethodFactory
NumericalMethodFactory	methods/methods.hpp	/^class NumericalMethodFactory$/;"	c
OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG	Eigen/src/Core/util/StaticAssert.h	/^        OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
ONES_COMPLEMENT	Eigen/src/OrderingMethods/Eigen_Colamd.h	101;"	d
OUT_OF_RANGE_ACCESS	Eigen/src/Core/util/StaticAssert.h	/^        OUT_OF_RANGE_ACCESS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
OffsetCol	Eigen/src/Core/Reverse.h	/^      OffsetCol  = ReverseCol && IsRowMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon454
OffsetRow	Eigen/src/Core/Reverse.h	/^      OffsetRow  = ReverseRow && IsColMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon454
OnTheLeft	Eigen/src/Core/util/Constants.h	/^  OnTheLeft = 1,  $/;"	e	enum:Eigen::SideType
OnTheRight	Eigen/src/Core/util/Constants.h	/^  OnTheRight = 2  $/;"	e	enum:Eigen::SideType
Ones	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones()$/;"	f	class:Eigen::DenseBase
Ones	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index newSize)$/;"	f	class:Eigen::DenseBase
Ones	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
OppositeExtendedType	Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct OppositeExtendedType {$/;"	s	class:Eigen::VectorwiseOp
Options	Eigen/src/Core/Array.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Array::__anon422
Options	Eigen/src/Core/BandMatrix.h	/^      Options = internal::traits<Derived>::Options$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
Options	Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon234
Options	Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon235
Options	Eigen/src/Core/Map.h	/^  enum { Options }; \/\/ Expressions don't have Options$/;"	e	enum:Eigen::internal::traits::__anon276
Options	Eigen/src/Core/Matrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon451
Options	Eigen/src/Core/Matrix.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Matrix::__anon452
Options	Eigen/src/Core/PlainObjectBase.h	/^    enum { Options = internal::traits<Derived>::Options };$/;"	e	enum:Eigen::PlainObjectBase::__anon460
Options	Eigen/src/Core/Ref.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon455
Options	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon634
Options	Eigen/src/Eigenvalues/ComplexSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexSchur::__anon640
Options	Eigen/src/Eigenvalues/EigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::EigenSolver::__anon633
Options	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon635
Options	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon639
Options	Eigen/src/Eigenvalues/RealQZ.h	/^        Options = MatrixType::Options,$/;"	e	enum:Eigen::RealQZ::__anon632
Options	Eigen/src/Eigenvalues/RealSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::RealSchur::__anon636
Options	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon631
Options	Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::Tridiagonalization::__anon638
Options	Eigen/src/Geometry/Hyperplane.h	/^    Options = _Options$/;"	e	enum:Eigen::Hyperplane::__anon95
Options	Eigen/src/Geometry/ParametrizedLine.h	/^    Options = _Options$/;"	e	enum:Eigen::ParametrizedLine::__anon100
Options	Eigen/src/Geometry/Transform.h	/^    Options = _Options,$/;"	e	enum:Eigen::Transform::__anon88
Options	Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon627
Options	Eigen/src/SparseCore/SparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseMatrix::__anon45
Options	Eigen/src/SparseCore/SparseRef.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon3
Options	Eigen/src/SparseCore/SparseRef.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon6
Options	Eigen/src/SparseCore/SparseVector.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseVector::__anon13
OrderingType	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::IncompleteCholesky
OrderingType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::OrderingType OrderingType;$/;"	t	class:Eigen::SimplicialCholeskyBase
OrderingType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _Ordering OrderingType;$/;"	t	struct:Eigen::internal::traits
OrderingType	Eigen/src/SparseLU/SparseLU.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseLU
OrderingType	Eigen/src/SparseQR/SparseQR.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseQR
OtherCols	Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon91
OtherCols	Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon92
OtherRows	Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon91
OtherRows	Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon92
OtherRows	Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon93
OuterProduct	Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
OuterRandomAccessPattern	Eigen/src/SparseCore/SparseUtil.h	/^const int OuterRandomAccessPattern  = 0x4 | CoherentAccessPattern;$/;"	m	namespace:Eigen
OuterSize	Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::BlockImpl::__anon47
OuterSize	Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon49
OuterStride	Eigen/src/Core/AssignEvaluator.h	/^    OuterStride = int(outer_stride_at_compile_time<Dst>::ret),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon255
OuterStride	Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride() : Base() {}$/;"	f	class:Eigen::OuterStride
OuterStride	Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride(Index v) : Base(v,0) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::OuterStride
OuterStride	Eigen/src/Core/Stride.h	/^class OuterStride : public Stride<Value, 0>$/;"	c	namespace:Eigen
OuterStrideAtCompileTime	Eigen/src/Core/Block.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon245
OuterStrideAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon314
OuterStrideAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon312
OuterStrideAtCompileTime	Eigen/src/Core/CwiseUnaryView.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon619
OuterStrideAtCompileTime	Eigen/src/Core/DenseBase.h	/^      OuterStrideAtCompileTime = internal::outer_stride_at_compile_time<Derived>::ret$/;"	e	enum:Eigen::DenseBase::__anon420
OuterStrideAtCompileTime	Eigen/src/Core/Diagonal.h	/^    OuterStrideAtCompileTime = 0$/;"	e	enum:Eigen::internal::traits::__anon271
OuterStrideAtCompileTime	Eigen/src/Core/Map.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon275
OuterStrideAtCompileTime	Eigen/src/Core/Matrix.h	/^    OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon451
OuterStrideAtCompileTime	Eigen/src/Core/Stride.h	/^      OuterStrideAtCompileTime = _OuterStrideAtCompileTime$/;"	e	enum:Eigen::Stride::__anon620
OuterStrideAtCompileTime	Eigen/src/Core/Transpose.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon438
OuterStrideMatch	Eigen/src/Core/Ref.h	/^      OuterStrideMatch = Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon456
OuterType	Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef internal::variable_if_dynamic<Index,Derived::IsVectorAtCompileTime?0:Dynamic> OuterType;$/;"	t	class:Eigen::SparseCompressedBase::InnerIterator
OuterType	Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef internal::variable_if_dynamic<Index,Derived::IsVectorAtCompileTime?0:Dynamic> OuterType;$/;"	t	class:Eigen::SparseCompressedBase::ReverseInnerIterator
OuterVector	Eigen/src/SparseCore/SparseBlock.h	/^      OuterVector =  (BlockCols==1 && ArgType::IsRowMajor)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
OuterVectorInnerIterator	Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE OuterVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
OuterVectorInnerIterator	Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::OuterVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1	Eigen/src/Core/util/StaticAssert.h	/^        PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
PACK_OUTPUT	Eigen/src/Core/arch/AVX512/PacketMath.h	1046;"	d
PACK_OUTPUT_2	Eigen/src/Core/arch/AVX512/PacketMath.h	1160;"	d
PACK_OUTPUT_D	Eigen/src/Core/arch/AVX512/PacketMath.h	1202;"	d
PACK_OUTPUT_SQ_D	Eigen/src/Core/arch/AVX512/PacketMath.h	1198;"	d
PALIGN_NEON	Eigen/src/Core/arch/NEON/PacketMath.h	481;"	d
PALIGN_NEON	Eigen/src/Core/arch/NEON/PacketMath.h	501;"	d
PALIGN_NEON	Eigen/src/Core/arch/NEON/PacketMath.h	700;"	d
PALIGN_NEON	Eigen/src/Core/arch/NEON/PacketMath.h	713;"	d
PASTIX_COMPLEX	Eigen/src/PaStiXSupport/PaStiXSupport.h	16;"	d
PASTIX_DCOMPLEX	Eigen/src/PaStiXSupport/PaStiXSupport.h	17;"	d
PCN_HPP	mcmc/pcn.hpp	2;"	d
PCN_Sampler	mcmc/pcn.hpp	/^    PCN_Sampler(InverseProblem* rand_var,Real gamma, int no_iter,Real*init_val):rand_var(rand_var),gamma(gamma),no_iter(no_iter),init_val(init_val),n(rand_var->dim()),U(0,1)$/;"	f	class:PCN_Sampler
PCN_Sampler	mcmc/pcn.hpp	/^class PCN_Sampler$/;"	c
PF_SMC	smc/smc.hpp	/^    PF_SMC(int no_particles,InverseProblem* inverse_problem,Real a=0.97, int no_steps=50000):no_particles(no_particles),inverse_problem(inverse_problem),a(a),no_steps(no_steps)$/;"	f	class:PF_SMC
PF_SMC	smc/smc.hpp	/^class PF_SMC$/;"	c
PHMC_H	mcmc/phmc.hpp	2;"	d
PHMC_Sampler	mcmc/phmc.hpp	/^  PHMC_Sampler(RandomVariable* rand_var,Real gamma, int no_iter,Real*init_val):rand_var(rand_var),gamma(gamma),no_iter(no_iter),init_val(init_val),n(rand_var->dim()),U(0,1)$/;"	f	class:PHMC_Sampler
PHMC_Sampler	mcmc/phmc.hpp	/^class PHMC_Sampler$/;"	c
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	386;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	371;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	386;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	371;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
Packet	Eigen/src/Core/arch/ZVector/PacketMath.h	/^} Packet;$/;"	t	namespace:Eigen::internal	typeref:union:Eigen::internal::__anon513
Packet	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
Packet	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::BlasLinearMapper
Packet	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::blas_data_mapper
Packet16f	Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512 Packet16f;$/;"	t	namespace:Eigen::internal
Packet16i	Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512i Packet16i;$/;"	t	namespace:Eigen::internal
Packet16uc	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned char  Packet16uc;$/;"	t	namespace:Eigen::internal
Packet16uc	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned char       Packet16uc;$/;"	t	namespace:Eigen::internal
Packet1cd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const __m128d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	Eigen/src/Core/arch/ZVector/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1d	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x1_t Packet1d;$/;"	t	namespace:Eigen::internal
Packet2bl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef Packet2ul                    Packet2bl;$/;"	t	namespace:Eigen::internal
Packet2bl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool long         Packet2bl;$/;"	t	namespace:Eigen::internal
Packet2cd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd() {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cd(const __m256d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet2cd$/;"	s	namespace:Eigen::internal
Packet2cf	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf() : v(p4f_ZERO) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const __m128& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	Eigen/src/Core/arch/ZVector/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2d	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector double              Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x2_t Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128d> Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector double              Packet2d;$/;"	t	namespace:Eigen::internal
Packet2f	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x2_t Packet2f;$/;"	t	namespace:Eigen::internal
Packet2i	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x2_t   Packet2i;$/;"	t	namespace:Eigen::internal
Packet2l	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector long long           Packet2l;$/;"	t	namespace:Eigen::internal
Packet2l	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector long long           Packet2l;$/;"	t	namespace:Eigen::internal
Packet2ul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned long long  Packet2ul;$/;"	t	namespace:Eigen::internal
Packet2ul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned long long  Packet2ul;$/;"	t	namespace:Eigen::internal
Packet4bi	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool int     Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4bi	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector __bool int          Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4cf	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf() {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet4cf(const __m256& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet4cf$/;"	s	namespace:Eigen::internal
Packet4d	Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256d Packet4d;$/;"	t	namespace:Eigen::internal
Packet4f	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector float          Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x4_t Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128>  Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	Eigen/src/Core/arch/ZVector/PacketMath.h	/^} Packet4f;$/;"	t	namespace:Eigen::internal	typeref:struct:Eigen::internal::__anon512
Packet4i	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector int            Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x4_t   Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128i> Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector int                 Packet4i;$/;"	t	namespace:Eigen::internal
Packet4ui	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned int   Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef uint32x4_t  Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned int        Packet4ui;$/;"	t	namespace:Eigen::internal
Packet8d	Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512d Packet8d;$/;"	t	namespace:Eigen::internal
Packet8f	Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256  Packet8f;$/;"	t	namespace:Eigen::internal
Packet8i	Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256i Packet8i;$/;"	t	namespace:Eigen::internal
Packet8i	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector short int      Packet8i;$/;"	t	namespace:Eigen::internal
Packet8i	Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector short int           Packet8i;$/;"	t	namespace:Eigen::internal
PacketAccess	Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon426
PacketAccess	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon544
PacketAccess	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon545
PacketAccess	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon546
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon415
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasDiv$/;"	e	enum:Eigen::internal::functor_traits::__anon418
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon417
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon416
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::Vectorizable && packet_traits<SrcScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon414
PacketAccess	Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon419
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon366
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon367
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon371
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon372
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon373
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMax$/;"	e	enum:Eigen::internal::functor_traits::__anon365
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMin$/;"	e	enum:Eigen::internal::functor_traits::__anon364
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon363
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasAdd && packet_traits<RhsScalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon360
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasDiv && packet_traits<RhsScalar>::HasDiv,$/;"	e	enum:Eigen::internal::functor_traits::__anon370
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon361
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasSub && packet_traits<RhsScalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon369
PacketAccess	Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon368
PacketAccess	Eigen/src/Core/functors/NullaryFunctors.h	/^         PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon398
PacketAccess	Eigen/src/Core/functors/NullaryFunctors.h	/^    PacketAccess =   (!NumTraits<Scalar>::IsInteger) && packet_traits<Scalar>::HasSetLinear && packet_traits<Scalar>::HasBlend,$/;"	e	enum:Eigen::internal::functor_traits::__anon400
PacketAccess	Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon399
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon392
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon393
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon394
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon395
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon390
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon391
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon379
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon380
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon381
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon382
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon383
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon384
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon385
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon386
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon387
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon376
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon377
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon378
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon374
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon375
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon397
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon396
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon388
PacketAccess	Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon389
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon355
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon356
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon357
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon358
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasACos$/;"	e	enum:Eigen::internal::functor_traits::__anon343
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasASin$/;"	e	enum:Eigen::internal::functor_traits::__anon344
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasATan$/;"	e	enum:Eigen::internal::functor_traits::__anon345
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasAbs$/;"	e	enum:Eigen::internal::functor_traits::__anon325
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasArg$/;"	e	enum:Eigen::internal::functor_traits::__anon328
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCeil$/;"	e	enum:Eigen::internal::functor_traits::__anon354
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasConj$/;"	e	enum:Eigen::internal::functor_traits::__anon327
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCos$/;"	e	enum:Eigen::internal::functor_traits::__anon340
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCosh$/;"	e	enum:Eigen::internal::functor_traits::__anon348
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasExp,$/;"	e	enum:Eigen::internal::functor_traits::__anon334
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasFloor$/;"	e	enum:Eigen::internal::functor_traits::__anon353
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasLog,$/;"	e	enum:Eigen::internal::functor_traits::__anon335
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasLog1p,$/;"	e	enum:Eigen::internal::functor_traits::__anon336
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasNegate };$/;"	e	enum:Eigen::internal::functor_traits::__anon324
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRound$/;"	e	enum:Eigen::internal::functor_traits::__anon352
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRsqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon339
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSign$/;"	e	enum:Eigen::internal::functor_traits::__anon359
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSin$/;"	e	enum:Eigen::internal::functor_traits::__anon341
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSinh$/;"	e	enum:Eigen::internal::functor_traits::__anon347
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon338
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTan$/;"	e	enum:Eigen::internal::functor_traits::__anon342
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTanh,$/;"	e	enum:Eigen::internal::functor_traits::__anon346
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon330
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon331
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon332
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon333
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon351
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon337
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon326
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon349
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon350
PacketAccess	Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon329
PacketAccessBit	Eigen/src/Core/util/Constants.h	/^const unsigned int PacketAccessBit = 0x8;$/;"	m	namespace:Eigen
PacketAccessMask	Eigen/src/Core/CoreEvaluators.h	/^    PacketAccessMask = bool(HasNoInnerStride) ? ~int(0) : ~int(PacketAccessBit),$/;"	e	enum:Eigen::internal::evaluator::__anon312
PacketAlignment	Eigen/src/Core/CoreEvaluators.h	/^    PacketAlignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::evaluator::__anon314
PacketBlock	Eigen/src/Core/GenericPacketMath.h	/^template <typename Packet,int N=unpacket_traits<Packet>::size> struct PacketBlock {$/;"	s	namespace:Eigen::internal
PacketReturnType	Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
PacketReturnType	Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
PacketReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::SparseMatrixBase
PacketScalar	Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::ArrayBase
PacketScalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::evaluator
PacketScalar	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::find_best_packet<Scalar,SizeAtCompileTime>::type PacketScalar;$/;"	t	class:Eigen::DenseBase
PacketScalar	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseCoeffsBase
PacketScalar	Eigen/src/Core/MapBase.h	/^    typedef typename Base::PacketScalar PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	Eigen/src/Core/MapBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	Eigen/src/Core/Matrix.h	/^  typedef typename find_best_packet<_Scalar,size>::type PacketScalar;$/;"	t	struct:Eigen::internal::traits
PacketScalar	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MatrixBase
PacketScalar	Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::PlainObjectBase
PacketScalar	Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketScalar PacketScalar;$/;"	t	class:Eigen::internal::redux_evaluator
PacketScalar	Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketScalar;$/;"	t	struct:Eigen::internal::redux_impl
PacketScalar	Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketScalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
PacketScalar	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::SparseMatrixBase
PacketSize	Eigen/src/Cholesky/LLT.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::LLT::__anon666
PacketSize	Eigen/src/Core/GeneralProduct.h	/^    PacketSize      = internal::packet_traits<Scalar>::size$/;"	e	enum:Eigen::internal::gemv_static_vector_if::__anon615
PacketSize	Eigen/src/Core/Redux.h	/^    PacketSize = redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_impl::__anon578
PacketSize	Eigen/src/Core/Redux.h	/^    PacketSize = redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon576
PacketSize	Eigen/src/Core/Redux.h	/^    PacketSize = unpacket_traits<PacketType>::size,$/;"	e	enum:Eigen::internal::redux_traits::__anon569
PacketSize	Eigen/src/Core/Reverse.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::Reverse::__anon454
PacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon295
PacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon296
PacketSize	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::symm_pack_rhs::__anon288
PacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename AssignmentTraits::PacketType PacketType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
PacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
PacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
PacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::dense_assignment_loop
PacketType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename conditional<int(Traversal)==LinearVectorizedTraversal, LinearPacketType, InnerPacketType>::type PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
PacketType	Eigen/src/Core/Redux.h	/^    typedef typename find_best_packet<typename Derived::Scalar,Derived::SizeAtCompileTime>::type PacketType;$/;"	t	struct:Eigen::internal::redux_traits
PacketType	Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketType;$/;"	t	struct:Eigen::internal::redux_impl
ParameterType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Array<StorageIndex,64,1,DontAlign> ParameterType;$/;"	t	class:Eigen::PardisoImpl
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ParametrizedLine(const ParametrizedLine<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline explicit ParametrizedLine(Index _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline ParametrizedLine<_Scalar, _AmbientDim,_Options>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim,OtherOptions>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
PardisoImpl	Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoImpl : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PardisoLDLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT()$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLDLT : public PardisoImpl< PardisoLDLT<MatrixType,Options> >$/;"	c	namespace:Eigen
PardisoLLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT()$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLLT : public PardisoImpl< PardisoLLT<MatrixType,_UpLo> >$/;"	c	namespace:Eigen
PardisoLU	Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU()$/;"	f	class:Eigen::PardisoLU
PardisoLU	Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLU(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
PardisoLU	Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLU : public PardisoImpl< PardisoLU<MatrixType> >$/;"	c	namespace:Eigen
PartialPivLU	Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU()$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(Index size)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> class PartialPivLU$/;"	c	namespace:Eigen
PartialReduxExpr	Eigen/src/Core/VectorwiseOp.h	/^    explicit PartialReduxExpr(const MatrixType& mat, const MemberOp& func = MemberOp())$/;"	f	class:Eigen::PartialReduxExpr
PartialReduxExpr	Eigen/src/Core/VectorwiseOp.h	/^class PartialReduxExpr : public internal::dense_xpr_base< PartialReduxExpr<MatrixType, MemberOp, Direction> >::type,$/;"	c	namespace:Eigen
Particle	smc/smc.hpp	/^    Particle(Real w,std::vector<Real> params, std::vector<Real>x):weight(w),params(params),x(x) { }$/;"	f	class:Particle
Particle	smc/smc.hpp	/^class Particle$/;"	c
PastixBase	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixBase() : m_initisOk(false), m_analysisIsOk(false), m_factorizationIsOk(false), m_pastixdata(0), m_size(0)$/;"	f	class:Eigen::PastixBase
PastixBase	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PastixLDLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT():Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLDLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLDLT : public PastixBase< PastixLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT() : Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLLT : public PastixBase< PastixLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLU	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU() : Base()$/;"	f	class:Eigen::PastixLU
PastixLU	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLU(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLU
PastixLU	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLU : public PastixBase< PastixLU<_MatrixType> >$/;"	c	namespace:Eigen
Perm	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> Perm;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
PermIndexType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename PermutationType::StorageIndex PermIndexType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermIndexType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename PermutationType::Index PermIndexType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PermPermProduct	Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	e	enum:Eigen::internal::PermPermProduct_t
PermPermProduct_t	Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	g	namespace:Eigen::internal
PermTraits	Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationType> PermTraits;$/;"	t	class:Eigen::InverseImpl
PermutationBase	Eigen/src/Core/PermutationMatrix.h	/^class PermutationBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
PermutationMap	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Map<PermutationMatrix<Dynamic,Dynamic,int> > PermutationMap;$/;"	t	class:Eigen::SuperLUBase
PermutationMap	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::PermutationMap PermutationMap;$/;"	t	class:Eigen::SuperLU
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(const InverseImpl<Other,PermutationStorage>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(internal::PermPermProduct_t, const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    explicit PermutationMatrix(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(Index size) : m_indices(size)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix()$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	Eigen/src/Core/PermutationMatrix.h	/^class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	c	namespace:Eigen
PermutationPType	Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationPType;$/;"	t	class:Eigen::FullPivLU
PermutationQType	Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationQType;$/;"	t	class:Eigen::FullPivLU
PermutationShape	Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	s	namespace:Eigen
PermutationStorage	Eigen/src/Core/util/Constants.h	/^struct PermutationStorage {};$/;"	s	namespace:Eigen
PermutationType	Eigen/src/Cholesky/LDLT.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::LDLT
PermutationType	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename OrderingType::PermutationType PermutationType;$/;"	t	class:Eigen::IncompleteCholesky
PermutationType	Eigen/src/LU/PartialPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::PartialPivLU
PermutationType	Eigen/src/MetisSupport/MetisSupport.h	/^  typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> PermutationType;$/;"	t	class:Eigen::MetisOrdering
PermutationType	Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType; $/;"	t	class:Eigen::COLAMDOrdering
PermutationType	Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::AMDOrdering
PermutationType	Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::NaturalOrdering
PermutationType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermutationType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      PermutationType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PermutationType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::FullPivHouseholderQR
PermutationType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef Map<PermutationMatrix<Dynamic, Dynamic, StorageIndex> > PermutationType;$/;"	t	class:Eigen::SPQR
PermutationType	Eigen/src/SparseLU/SparseLU.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseLU
PermutationType	Eigen/src/SparseQR/SparseQR.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseQR
PermutationWrapper	Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationWrapper(const IndicesType& indices)$/;"	f	class:Eigen::PermutationWrapper
PermutationWrapper	Eigen/src/Core/PermutationMatrix.h	/^class PermutationWrapper : public PermutationBase<PermutationWrapper<_IndicesType> >$/;"	c	namespace:Eigen
PeroxideOxideEquation	models/models.hpp	/^    PeroxideOxideEquation(Real A0,Real B0,Real X0,Real*k):Equation(4),A0(A0),B0(B0),X0(X0)$/;"	f	class:PeroxideOxideEquation
PeroxideOxideEquation	models/models.hpp	/^class PeroxideOxideEquation:public Equation$/;"	c
Pivoting	Eigen/src/Core/util/Constants.h	/^  Pivoting            = 0x01, $/;"	e	enum:Eigen::DecompositionOptions
PlainArray	Eigen/src/Core/DenseBase.h	/^          > PlainArray;$/;"	t	class:Eigen::DenseBase
PlainMatrix	Eigen/src/Core/DenseBase.h	/^          > PlainMatrix;$/;"	t	class:Eigen::DenseBase
PlainObject	Eigen/src/Core/Array.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Array
PlainObject	Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ArrayBase
PlainObject	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::PlainObject         PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	Eigen/src/Core/DenseBase.h	/^                                 PlainMatrix, PlainArray>::type PlainObject;$/;"	t	class:Eigen::DenseBase
PlainObject	Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalMatrix<Scalar,DiagonalVectorType::SizeAtCompileTime,DiagonalVectorType::MaxSizeAtCompileTime> PlainObject;$/;"	t	class:Eigen::DiagonalBase
PlainObject	Eigen/src/Core/Inverse.h	/^  typedef typename InverseType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject                       PlainObject;$/;"	t	class:Eigen::Inverse
PlainObject	Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	Eigen/src/Core/Matrix.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Matrix
PlainObject	Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::MatrixBase
PlainObject	Eigen/src/Core/PermutationMatrix.h	/^    typedef PlainPermutationType PlainObject;$/;"	t	class:Eigen::PermutationBase
PlainObject	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	Eigen/src/Core/ReturnByValue.h	/^  typedef typename internal::traits<Derived>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::SelfAdjointView
PlainObject	Eigen/src/Core/Solve.h	/^                 RhsType::MaxColsAtCompileTime>::type PlainObject;$/;"	t	struct:Eigen::internal::solve_traits
PlainObject	Eigen/src/Core/Solve.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::PlainObject PlainObject;$/;"	t	class:Eigen::Solve
PlainObject	Eigen/src/Core/Solve.h	/^  typedef typename solve_traits<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType PlainObject;$/;"	t	class:Eigen::TriangularViewImpl
PlainObject	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	Eigen/src/Geometry/Quaternion.h	/^  typedef Quaternion<_Scalar,_Options> PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::PlainObject PlainObject;$/;"	t	class:Eigen::SolveWithGuess
PlainObject	Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivLU
PlainObject	Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::PartialPivLU
PlainObject	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::ColPivHouseholderQR
PlainObject	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PlainObject	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivHouseholderQR
PlainObject	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrix<Scalar, Flags&RowMajorBit ? RowMajor : ColMajor, StorageIndex> PlainObject;$/;"	t	class:Eigen::SparseMatrixBase
PlainObject	Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Lhs,OnTheRight,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Rhs,OnTheLeft,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename sparse_eval<RhsType, RhsType::RowsAtCompileTime, RhsType::ColsAtCompileTime,traits<RhsType>::Flags>::type PlainObject;$/;"	t	struct:Eigen::internal::solve_traits
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(Index size, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const DenseBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^    explicit PlainObjectBase(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	Eigen/src/Core/PlainObjectBase.h	/^class PlainObjectBase : public doxygen::dense_xpr_base_dispatcher<Derived>$/;"	c	namespace:Eigen
PlainObjectType	Eigen/src/Core/CoreEvaluators.h	/^  typedef PlainObjectBase<Derived> PlainObjectType;$/;"	t	struct:Eigen::internal::evaluator
PlainObjectType	Eigen/src/Core/Ref.h	/^  typedef _PlainObjectType PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::PlainObjectType PlainObjectType;$/;"	t	class:Eigen::RefBase
PlainObjectType	Eigen/src/SparseCore/SparseMap.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	class:Eigen::Ref
PlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseVector<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	class:Eigen::Ref
PlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseVector<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectTypeCleaned	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<PlainObjectType>::type PlainObjectTypeCleaned;$/;"	t	struct:Eigen::internal::evaluator
PlainPermutationType	Eigen/src/Core/PermutationMatrix.h	/^            PlainPermutationType;$/;"	t	class:Eigen::PermutationBase
PlainPermutationType	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::PlainPermutationType PlainPermutationType;$/;"	t	class:Eigen::InverseImpl
PointerArgType	Eigen/src/Core/Map.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::Map
PointerType	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::PointerType PointerType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
PointerType	Eigen/src/Core/Map.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::Map
PointerType	Eigen/src/Core/MapBase.h	/^                     PointerType;$/;"	t	class:Eigen::MapBase
PointerType	Eigen/src/Core/MapBase.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::MapBase
PositiveSemiDef	Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
PreconditionIfMoreColsThanRows	Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon622
PreconditionIfMoreRowsThanCols	Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon622
Preconditioner	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::BiCGSTAB
Preconditioner	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::ConjugateGradient
Preconditioner	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::Preconditioner Preconditioner;$/;"	t	class:Eigen::IterativeSolverBase
Preconditioner	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Preconditioner	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
PrivateType	Eigen/src/Core/Array.h	/^    struct PrivateType {};$/;"	s	class:Eigen::Array
ProdReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_prod>::Type ProdReturnType;$/;"	t	class:Eigen::VectorwiseOp
ProdXprType	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<LhsT,RhsT,DefaultProduct> ProdXprType;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Product	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)$/;"	f	class:Eigen::Product
Product	Eigen/src/Core/Product.h	/^class Product : public ProductImpl<_Lhs,_Rhs,Option,$/;"	c	namespace:Eigen
ProductImpl	Eigen/src/Core/Product.h	/^class ProductImpl : public internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
ProductImpl	Eigen/src/Core/Product.h	/^class ProductImpl<Lhs,Rhs,Option,Dense>$/;"	c	namespace:Eigen
ProductImplType	Eigen/src/Core/util/Constants.h	/^enum ProductImplType$/;"	g	namespace:Eigen
ProductType	Eigen/src/Geometry/Transform.h	/^    typedef internal::transform_transform_product_impl<Transform,Transform<Scalar,Dim,OtherMode,OtherOptions> > ProductType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ProductXpr	Eigen/src/Core/Product.h	/^  typedef Product<Lhs,Rhs,Option> ProductXpr;$/;"	t	class:Eigen::internal::dense_product_base
Projective	Eigen/src/Core/util/Constants.h	/^  Projective    = 0x20$/;"	e	enum:Eigen::TransformTraits
Projective2d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Projective> Projective2d;$/;"	t	namespace:Eigen
Projective2f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Projective> Projective2f;$/;"	t	namespace:Eigen
Projective3d	Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Projective> Projective3d;$/;"	t	namespace:Eigen
Projective3f	Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Projective> Projective3f;$/;"	t	namespace:Eigen
QRMatrixType	Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> QRMatrixType;$/;"	t	class:Eigen::SparseQR
QRPreconditioners	Eigen/src/Core/util/Constants.h	/^enum QRPreconditioners {$/;"	g	namespace:Eigen
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QrType	Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef ColPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
QrType	Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef FullPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const Scalar* data) : m_coeffs(data) {}$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion(const Scalar& w, const Scalar& x, const Scalar& y, const Scalar& z) : m_coeffs(x, y, z, w){}$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }$/;"	f	class:Eigen::Quaternion
Quaternion	Eigen/src/Geometry/Quaternion.h	/^class Quaternion : public QuaternionBase<Quaternion<_Scalar,_Options> >$/;"	c	namespace:Eigen
QuaternionBase	Eigen/src/Geometry/Quaternion.h	/^class QuaternionBase : public RotationBase<Derived, 3>$/;"	c	namespace:Eigen
QuaternionMapAlignedd	Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, Aligned>  QuaternionMapAlignedd;$/;"	t	namespace:Eigen
QuaternionMapAlignedf	Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, Aligned>   QuaternionMapAlignedf;$/;"	t	namespace:Eigen
QuaternionMapd	Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, 0>        QuaternionMapd;$/;"	t	namespace:Eigen
QuaternionMapf	Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, 0>         QuaternionMapf;$/;"	t	namespace:Eigen
QuaternionType	Eigen/src/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
Quaterniond	Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaternionf	Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
QuickSplit	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^Index QuickSplit(VectorV &row, VectorI &ind, Index ncut)$/;"	f	namespace:Eigen::internal
RAND_VAR_H	tools/random_variable.hpp	2;"	d
RK3	core_methods.hpp	/^    RK3(Equation *e):StepIntegrator(e)$/;"	f	class:RK3
RK3	core_methods.hpp	/^class RK3:public StepIntegrator$/;"	c
RK3	methods/core_methods.hpp	/^    RK3(Equation *e):StepIntegrator(e)$/;"	f	class:RK3
RK3	methods/core_methods.hpp	/^class RK3:public StepIntegrator$/;"	c
RK3	methods/step_integrators.hpp	/^    RK3(Equation *e):StepIntegrator(e)$/;"	f	class:RK3
RK3	methods/step_integrators.hpp	/^class RK3:public StepIntegrator$/;"	c
RK4	core_methods.hpp	/^    RK4(Equation *e):StepIntegrator(e)$/;"	f	class:RK4
RK4	core_methods.hpp	/^class RK4:public StepIntegrator$/;"	c
RK4	methods/core_methods.hpp	/^    RK4(Equation *e):StepIntegrator(e)$/;"	f	class:RK4
RK4	methods/core_methods.hpp	/^class RK4:public StepIntegrator$/;"	c
RK4	methods/step_integrators.hpp	/^    RK4(Equation *e):StepIntegrator(e)$/;"	f	class:RK4
RK4	methods/step_integrators.hpp	/^class RK4:public StepIntegrator$/;"	c
RKC	methods/stabilized_methods.hpp	/^    RKC(Equation *e):StepIntegrator(e)$/;"	f	class:RKC
RKC	methods/stabilized_methods.hpp	/^class RKC:public StepIntegrator$/;"	c
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	cmake-build-debug/Makefile	/^RM = \/home\/aleksa\/opt\/clion\/bin\/cmake\/bin\/cmake -E remove -f$/;"	m
ROCK2	methods/stabilized_methods.hpp	/^    ROCK2(Equation *e):StepIntegrator(e)$/;"	f	class:ROCK2
ROCK2	methods/stabilized_methods.hpp	/^class ROCK2:public StepIntegrator$/;"	c
ROW_IS_ALIVE	Eigen/src/OrderingMethods/Eigen_Colamd.h	118;"	d
ROW_IS_DEAD	Eigen/src/OrderingMethods/Eigen_Colamd.h	116;"	d
ROW_IS_MARKED_DEAD	Eigen/src/OrderingMethods/Eigen_Colamd.h	117;"	d
Random	Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random()$/;"	f	class:Eigen::DenseBase
Random	Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Random	Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index size)$/;"	f	class:Eigen::DenseBase
RandomAccessLinSpacedReturnType	Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar>,PlainObject> RandomAccessLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
RandomAccessPattern	Eigen/src/SparseCore/SparseUtil.h	/^const int RandomAccessPattern       = 0x8 | OuterRandomAccessPattern | InnerRandomAccessPattern;$/;"	m	namespace:Eigen
RandomReturnType	Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_random_op<Scalar>,PlainObject> RandomReturnType;$/;"	t	class:Eigen::DenseBase
RandomVariable	tools/random_variable.hpp	/^class RandomVariable$/;"	c
ReadCost	Eigen/src/Core/NumTraits.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
ReadOnlyAccessors	Eigen/src/Core/util/Constants.h	/^  ReadOnlyAccessors, $/;"	e	enum:Eigen::AccessorLevels
ReadOnlyMapBase	Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::MapBase
ReadOnlyMapBase	Eigen/src/SparseCore/SparseMap.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::SparseMapBase
Real	Eigen/src/Core/NumTraits.h	/^  typedef T Real;$/;"	t	struct:Eigen::GenericNumTraits
Real	config.h	/^typedef boost::multiprecision::number<boost::multiprecision::cpp_dec_float<12>> Real;$/;"	t
Real	config.h	/^typedef double Real;$/;"	t
RealPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RealScalar>::type RealPacket;$/;"	t	class:Eigen::internal::gebp_traits
RealPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacketSize  = Vectorizable ? packet_traits<RealScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
RealQZ	Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ(const MatrixType& A, const MatrixType& B, bool computeQZ = true) :$/;"	f	class:Eigen::RealQZ
RealQZ	Eigen/src/Eigenvalues/RealQZ.h	/^      explicit RealQZ(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime) :$/;"	f	class:Eigen::RealQZ
RealQZ	Eigen/src/Eigenvalues/RealQZ.h	/^  template<typename _MatrixType> class RealQZ$/;"	c	namespace:Eigen
RealReturnType	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type RealReturnType;$/;"	t
RealRowVectorType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, RealScalar>::type RealRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RealRowVectorType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      RealRowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RealScalar	Eigen/src/Cholesky/LDLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LDLT
RealScalar	Eigen/src/Cholesky/LLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LLT
RealScalar	Eigen/src/Cholesky/LLT.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::llt_inplace
RealScalar	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CholmodBase
RealScalar	Eigen/src/Core/ArrayBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArrayBase
RealScalar	Eigen/src/Core/DenseBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseBase
RealScalar	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseCoeffsBase
RealScalar	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::RealScalar RealScalar;$/;"	t	class:Eigen::DiagonalBase
RealScalar	Eigen/src/Core/Dot.h	/^  typedef typename NumTraits<typename traits<Derived>::Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::lpNorm_selector
RealScalar	Eigen/src/Core/MapBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MapBase
RealScalar	Eigen/src/Core/MathFunctions.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::arg_default_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef T RealScalar;$/;"	t	struct:Eigen::internal::imag_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef T RealScalar;$/;"	t	struct:Eigen::internal::real_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef bool RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl_default
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::hypot_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_default_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_ref_default_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::norm1_default_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_default_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_ref_impl
RealScalar	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_default_impl
RealScalar	Eigen/src/Core/MatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixBase
RealScalar	Eigen/src/Core/PlainObjectBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::PlainObjectBase
RealScalar	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointView
RealScalar	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::RealScalar RealScalar;$/;"	t	class:Eigen::VectorwiseOp
RealScalar	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexEigenSolver
RealScalar	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexSchur
RealScalar	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::EigenSolver
RealScalar	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
RealScalar	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::HessenbergDecomposition
RealScalar	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealScalar	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tridiagonalization
RealScalar	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
RealScalar	Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::Real               RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	Eigen/src/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
RealScalar	Eigen/src/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	Eigen/src/Geometry/Quaternion.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::QuaternionBase
RealScalar	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
RealScalar	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::BiCGSTAB
RealScalar	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ConjugateGradient
RealScalar	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar; $/;"	t	class:Eigen::IncompleteCholesky
RealScalar	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::IncompleteLUT
RealScalar	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::IterativeSolverBase
RealScalar	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
RealScalar	Eigen/src/Jacobi/Jacobi.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiRotation
RealScalar	Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::partial_lu_impl
RealScalar	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::PastixBase
RealScalar	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pastix_traits
RealScalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLDLT
RealScalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLLT
RealScalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLU
RealScalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoImpl
RealScalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pardiso_traits
RealScalar	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RealScalar	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::FullPivHouseholderQR
RealScalar	Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::HouseholderQR
RealScalar	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SPQR
RealScalar	Eigen/src/SVD/BDCSVD.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::BDCSVD
RealScalar	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiSVD
RealScalar	Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
RealScalar	Eigen/src/SVD/SVDBase.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SVDBase
RealScalar	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RealScalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholesky
RealScalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
RealScalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLDLT
RealScalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLLT
RealScalar	Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector
RealScalar	Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
RealScalar	Eigen/src/SparseCore/CompressedStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::CompressedStorage
RealScalar	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SparseMatrixBase
RealScalar	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename ResultType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
RealScalar	Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::RealScalar RealScalar; $/;"	t	class:Eigen::SparseLU
RealScalar	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef typename ScalarVector::RealScalar RealScalar; $/;"	t	class:Eigen::internal::SparseLUImpl
RealScalar	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SparseQR
RealScalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperILU
RealScalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLU
RealScalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLUBase
RealScalar	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::UmfPackLU
RealSchur	Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::RealSchur
RealSchur	Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(const EigenBase<InputType>& matrix, bool computeU = true)$/;"	f	class:Eigen::RealSchur
RealSchur	Eigen/src/Eigenvalues/RealSchur.h	/^template<typename _MatrixType> class RealSchur$/;"	c	namespace:Eigen
RealVectorType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Real_params	models/inverse_model.hpp	/^    std::vector<Real> Real_params;$/;"	m	class:InverseProblem
ReduxReturnType	Eigen/src/Core/VectorwiseOp.h	/^    template<typename BinaryOp> struct ReduxReturnType$/;"	s	class:Eigen::VectorwiseOp
Ref	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(PlainObjectBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const DenseBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const Ref& other) : Base(other) {$/;"	f	class:Eigen::Ref
Ref	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const RefBase<OtherRef>& other) {$/;"	f	class:Eigen::Ref
Ref	Eigen/src/Core/Ref.h	/^template<typename PlainObjectType, int Options, typename StrideType> class Ref$/;"	c	namespace:Eigen
Ref	Eigen/src/Core/Ref.h	/^template<typename TPlainObjectType, int Options, typename StrideType> class Ref<const TPlainObjectType, Options, StrideType>$/;"	c	namespace:Eigen
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(MappedSparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(SparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(SparseVector<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const Ref& other) : Base(other), m_hasCopy(false) {$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const RefBase<OtherRef>& other) : m_hasCopy(false) {$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseCompressedBase<Derived>& expr)$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseMatrixBase<Derived>& expr) : m_hasCopy(false)$/;"	f	class:Eigen::Ref
Ref	Eigen/src/SparseCore/SparseRef.h	/^class Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType >$/;"	c	namespace:Eigen
Ref	Eigen/src/SparseCore/SparseRef.h	/^class Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType >$/;"	c	namespace:Eigen
Ref	Eigen/src/SparseCore/SparseRef.h	/^class Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Ref	Eigen/src/SparseCore/SparseRef.h	/^class Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
RefBase	Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC RefBase()$/;"	f	class:Eigen::RefBase
RefBase	Eigen/src/Core/Ref.h	/^template<typename Derived> class RefBase$/;"	c	namespace:Eigen
RefactoredXpr	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::Xpr RefactoredXpr;$/;"	t	struct:Eigen::internal::product_evaluator
Replicate	Eigen/src/Core/Replicate.h	/^    inline Replicate(const OriginalMatrixType& matrix, Index rowFactor, Index colFactor)$/;"	f	class:Eigen::Replicate
Replicate	Eigen/src/Core/Replicate.h	/^    inline explicit Replicate(const OriginalMatrixType& matrix)$/;"	f	class:Eigen::Replicate
Replicate	Eigen/src/Core/Replicate.h	/^template<typename MatrixType,int RowFactor,int ColFactor> class Replicate$/;"	c	namespace:Eigen
ReplicateReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef Replicate<ExpressionType,(isVertical?Dynamic:1),(isHorizontal?Dynamic:1)> ReplicateReturnType;$/;"	t	class:Eigen::VectorwiseOp
RequireInitialization	Eigen/src/Core/NumTraits.h	/^    RequireInitialization = internal::is_arithmetic<T>::value ? 0 : 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon427
RequireInitialization	Eigen/src/Core/arch/CUDA/Half.h	/^    RequireInitialization = false$/;"	e	enum:Eigen::NumTraits::__anon567
Res	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseResType>::type Res;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
ResAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<double> >::Alignment$/;"	e	enum:Eigen::internal::quat_conj::__anon108
ResAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<double> >::Alignment$/;"	e	enum:Eigen::internal::quat_product::__anon107
ResAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<float> >::Alignment$/;"	e	enum:Eigen::internal::quat_conj::__anon105
ResAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<float> >::Alignment$/;"	e	enum:Eigen::internal::quat_product::__anon104
ResAlignment	Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<typename plain_matrix_type<VectorLhs>::type>::Alignment$/;"	e	enum:Eigen::internal::cross3_impl::__anon106
ResPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResPacket ResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
ResPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,ScalarPacket,Scalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize   = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
ResPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Traits::ResPacketSize$/;"	e	enum:Eigen::internal::gebp_kernel::__anon294
ResPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
ResPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
ResPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
ResPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon281
ResPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon282
ResScalar	Eigen/src/Core/Dot.h	/^  typedef typename conj_prod::result_type ResScalar;$/;"	t	struct:Eigen::internal::dot_nocheck
ResScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
ResScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_triangular_product
ResScalar	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::tribb_kernel
ResScalar	Eigen/src/Core/products/GeneralMatrixVector.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	Eigen/src/Core/products/TriangularMatrixVector.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::triangular_matrix_vector_product
ResultAlignment	Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon647
ResultAlignment	Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon648
ResultMode	Eigen/src/Geometry/Transform.h	/^  enum { ResultMode = transform_product_result<LhsMode,RhsMode>::Mode };$/;"	e	enum:Eigen::internal::transform_transform_product_impl::__anon94
ResultScalar	Eigen/src/Householder/HouseholderSequence.h	/^    ResultScalar;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
ResultType	Eigen/src/Geometry/Transform.h	/^    typedef typename ProductType::ResultType ResultType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ResultType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,ResultMode,LhsOptions> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Projective,Options> ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	Eigen/src/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	Eigen/src/Geometry/Transform.h	/^  typedef typename MatrixType::PlainObject ResultType;$/;"	t	struct:Eigen::internal::transform_right_product_impl
ReturnByValue	Eigen/src/Core/ReturnByValue.h	/^template<typename Derived> class ReturnByValue$/;"	c	namespace:Eigen
ReturnOpposite	Eigen/src/Core/BandMatrix.h	/^        ReturnOpposite = (Options&SelfAdjoint) && (((Index)>0 && Supers==0) || ((Index)<0 && Subs==0)),$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon233
ReturnType	Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::traits<Derived>::ReturnType ReturnType;$/;"	t	class:Eigen::ReturnByValue
ReturnType	Eigen/src/Core/SolveTriangular.h	/^  typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/Core/VectorwiseOp.h	/^                      typename Scalar_=Scalar> struct ReturnType$/;"	s	class:Eigen::VectorwiseOp
ReturnType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^  typedef MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::PlainObject ReturnType; \/\/ FIXME shall it be a BandMatrix?$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/Geometry/Homogeneous.h	/^                 MatrixTypeCleaned::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/Geometry/Homogeneous.h	/^                 Rhs::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,1> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,Dim> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	Eigen/src/Geometry/RotationBase.h	/^  typedef Transform<Scalar,Dim,Affine> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename SPQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/SparseCore/SparsePermutation.h	/^        SparseMatrix<Scalar,int(SrcStorageOrder)==RowMajor?ColMajor:RowMajor,StorageIndex> >::type ReturnType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
ReturnType	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename SparseQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/misc/Image.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	Eigen/src/misc/Kernel.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
Reverse	Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC explicit inline Reverse(const MatrixType& matrix) : m_matrix(matrix) { }$/;"	f	class:Eigen::Reverse
Reverse	Eigen/src/Core/Reverse.h	/^template<typename MatrixType, int Direction> class Reverse$/;"	c	namespace:Eigen
ReverseCol	Eigen/src/Core/CoreEvaluators.h	/^    ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
ReverseCol	Eigen/src/Core/Reverse.h	/^      ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon454
ReverseInnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    ReverseInnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit ReverseInnerIterator(const SparseCompressedBase& mat)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit ReverseInnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::ReverseInnerIterator$/;"	c	class:Eigen::SparseCompressedBase
ReverseInnerIterator	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ReverseInnerIterator ReverseInnerIterator;$/;"	t	class:Eigen::SparseMatrix
ReverseInnerIterator	Eigen/src/SparseCore/SparseVector.h	/^    typedef typename Base::ReverseInnerIterator ReverseInnerIterator;$/;"	t	class:Eigen::SparseVector
ReverseInnerIterator	Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::ReverseInnerIterator ReverseInnerIterator;$/;"	t	struct:Eigen::internal::evaluator
ReversePacket	Eigen/src/Core/CoreEvaluators.h	/^    ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
ReversePacket	Eigen/src/Core/Reverse.h	/^      ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::Reverse::__anon454
ReverseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef Reverse<Derived, BothDirections> ReverseReturnType;$/;"	t	class:Eigen::DenseBase
ReverseReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef Reverse<ExpressionType, Direction> ReverseReturnType;$/;"	t	class:Eigen::VectorwiseOp
ReverseRow	Eigen/src/Core/CoreEvaluators.h	/^    ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon322
ReverseRow	Eigen/src/Core/Reverse.h	/^      ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon454
Rhs	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<RhsType>::type Rhs;$/;"	t	class:Eigen::CwiseBinaryOp
Rhs	Eigen/src/Core/Product.h	/^    typedef _Rhs Rhs;$/;"	t	class:Eigen::Product
Rhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,RhsMode,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseRhsType>::type Rhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
RhsAlignment	Eigen/src/Core/ProductEvaluators.h	/^    RhsAlignment = EIGEN_PLAIN_ENUM_MIN(RhsEtorType::Alignment,RhsVecPacketSize*int(sizeof(typename RhsNestedCleaned::Scalar))),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsArg	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Rhs RhsArg;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsBlasTraits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsBlasTraits	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsBlasTraits	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsCleaned	Eigen/src/Core/Product.h	/^  typedef typename remove_all<Rhs>::type RhsCleaned;$/;"	t	struct:Eigen::internal::traits
RhsCoeffReadCost	Eigen/src/Core/ProductEvaluators.h	/^    RhsCoeffReadCost = RhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsEtorType	Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<RhsNestedCleaned> RhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
RhsEval	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualRhs> RhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
RhsEvaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<RhsArg> RhsEvaluator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsFlags	Eigen/src/Core/CoreEvaluators.h	/^    RhsFlags = evaluator<Rhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
RhsFlags	Eigen/src/Core/ProductEvaluators.h	/^    RhsFlags = RhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsIsSelfAdjoint	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsSelfAdjoint = (RhsMode&SelfAdjoint)==SelfAdjoint$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon289
RhsIsUpper	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsUpper = (RhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon289
RhsIsVectorAtCompileTime	Eigen/src/Core/SolveTriangular.h	/^      RhsIsVectorAtCompileTime = (Side==OnTheLeft ? Rhs::ColsAtCompileTime : Rhs::RowsAtCompileTime)==1$/;"	e	enum:Eigen::internal::trsolve_traits::__anon228
RhsIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Rhs>::InnerIterator  RhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
RhsIterator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<RhsArg>::InnerIterator  RhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<RhsType>::type RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
RhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Rhs>::type RhsNested;$/;"	t	class:Eigen::Product
RhsNested	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Rhs,Lhs::RowsAtCompileTime>::type RhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNested	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<Rhs,1>::type RhsNested;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsNested	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNested;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
RhsNestedCleaned	Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	class:Eigen::Product
RhsNestedCleaned	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNestedCleaned	Eigen/src/Core/SolveTriangular.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::triangular_solve_retval
RhsOuterStrideBytes	Eigen/src/Core/ProductEvaluators.h	/^    RhsOuterStrideBytes = int(RhsNestedCleaned::OuterStrideAtCompileTime) * int(sizeof(typename RhsNestedCleaned::Scalar)),$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
RhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
RhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
RhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
RhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
RhsPacketSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
RhsPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon281
RhsPacketSize	Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon282
RhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress   = Traits::RhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon294
RhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
RhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
RhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
RhsProgress	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
RhsRowMajor	Eigen/src/Core/ProductEvaluators.h	/^    RhsRowMajor = RhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsScalar	Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
RhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
RhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_LhsScalar,_RhsScalar>::type RhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
RhsScalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsTraits	Eigen/src/Core/Product.h	/^  typedef traits<RhsCleaned> RhsTraits;$/;"	t	struct:Eigen::internal::traits
RhsUpLo	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { RhsUpLo = RhsMode&(Upper|Lower)  };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon284
RhsVecPacketSize	Eigen/src/Core/ProductEvaluators.h	/^    RhsVecPacketSize = unpacket_traits<RhsVecPacketType>::size,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
RhsVecPacketType	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename find_best_packet<Scalar,ColsAtCompileTime>::type RhsVecPacketType;$/;"	t	struct:Eigen::internal::product_evaluator
RhsVectors	Eigen/src/Core/SolveTriangular.h	/^      RhsVectors  = RhsIsVectorAtCompileTime ? 1 : Dynamic$/;"	e	enum:Eigen::internal::trsolve_traits::__anon229
Rotation2D	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Rotation2D() {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC explicit Rotation2D(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::Rotation2D
Rotation2D	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC explicit inline Rotation2D(const Scalar& a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	Eigen/src/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2Dd	Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Df	Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
RotationBase	Eigen/src/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationMatrixType	Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RoundReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_round_op<Scalar>, const Derived> RoundReturnType;$/;"	t
RowMajor	Eigen/src/Core/util/Constants.h	/^  RowMajor = 0x1,  \/\/ it is only a coincidence that this is equal to RowMajorBit -- don't rely on that$/;"	e	enum:Eigen::StorageOptions
RowMajorBit	Eigen/src/Core/util/Constants.h	/^const unsigned int RowMajorBit = 0x1;$/;"	m	namespace:Eigen
RowType	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowType;$/;"	t	class:Eigen::JacobiSVD
RowVectorType	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RowVectorType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RowVectorType	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
RowVectorType	Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::HouseholderQR
RowVectorType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, 1, ColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RowXpr	Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::RowXpr RowXpr;$/;"	t	class:Eigen::MatrixBase
RowXpr	Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowXpr;$/;"	t
Rows	Eigen/src/Core/GeneralProduct.h	/^    Rows    = traits<_Lhs>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon588
Rows	Eigen/src/Geometry/Homogeneous.h	/^    Rows = Lhs::RowsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon98
Rows	Eigen/src/Geometry/Transform.h	/^    Rows = int(Mode)==(AffineCompact) ? Dim : HDim$/;"	e	enum:Eigen::Transform::__anon88
RowsAtCompileTime	Eigen/src/Cholesky/LDLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon667
RowsAtCompileTime	Eigen/src/Cholesky/LLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon665
RowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
RowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon234
RowsAtCompileTime	Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon235
RowsAtCompileTime	Eigen/src/Core/Block.h	/^    RowsAtCompileTime = MatrixRows == 0 ? 0 : BlockRows,$/;"	e	enum:Eigen::internal::traits::__anon245
RowsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = PlainObjectType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon304
RowsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime$/;"	e	enum:Eigen::internal::unary_evaluator::__anon315
RowsAtCompileTime	Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon314
RowsAtCompileTime	Eigen/src/Core/CwiseBinaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon226
RowsAtCompileTime	Eigen/src/Core/CwiseTernaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon273
RowsAtCompileTime	Eigen/src/Core/DenseBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
RowsAtCompileTime	Eigen/src/Core/Diagonal.h	/^    RowsAtCompileTime = (int(DiagIndex) == DynamicIndex || int(MatrixType::SizeAtCompileTime) == Dynamic) ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon271
RowsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^      RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon457
RowsAtCompileTime	Eigen/src/Core/DiagonalMatrix.h	/^    RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon459
RowsAtCompileTime	Eigen/src/Core/MapBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon431
RowsAtCompileTime	Eigen/src/Core/Matrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon451
RowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = PermTraits::RowsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon244
RowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon242
RowsAtCompileTime	Eigen/src/Core/PermutationMatrix.h	/^    RowsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon243
RowsAtCompileTime	Eigen/src/Core/Product.h	/^    RowsAtCompileTime    = LhsTraits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon423
RowsAtCompileTime	Eigen/src/Core/ProductEvaluators.h	/^    RowsAtCompileTime = LhsNestedCleaned::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon443
RowsAtCompileTime	Eigen/src/Core/Replicate.h	/^    RowsAtCompileTime = RowFactor==Dynamic || int(MatrixType::RowsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon270
RowsAtCompileTime	Eigen/src/Core/Reverse.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon453
RowsAtCompileTime	Eigen/src/Core/Select.h	/^    RowsAtCompileTime = ConditionMatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon131
RowsAtCompileTime	Eigen/src/Core/SolverBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
RowsAtCompileTime	Eigen/src/Core/Transpose.h	/^    RowsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon438
RowsAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
RowsAtCompileTime	Eigen/src/Core/VectorwiseOp.h	/^    RowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon432
RowsAtCompileTime	Eigen/src/Core/Visitor.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon248
RowsAtCompileTime	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon634
RowsAtCompileTime	Eigen/src/Eigenvalues/ComplexSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon640
RowsAtCompileTime	Eigen/src/Eigenvalues/EigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon633
RowsAtCompileTime	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon635
RowsAtCompileTime	Eigen/src/Eigenvalues/RealQZ.h	/^        RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon632
RowsAtCompileTime	Eigen/src/Eigenvalues/RealSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon636
RowsAtCompileTime	Eigen/src/Geometry/Homogeneous.h	/^    RowsAtCompileTime = Direction==Vertical  ?  RowsPlusOne : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon96
RowsAtCompileTime	Eigen/src/Geometry/Transform.h	/^    RowsAtCompileTime = _Mode==Projective ? Dim1 : _Dim,$/;"	e	enum:Eigen::internal::traits::__anon87
RowsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^      RowsAtCompileTime = internal::traits<HouseholderSequence>::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon126
RowsAtCompileTime	Eigen/src/Householder/HouseholderSequence.h	/^    RowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon125
RowsAtCompileTime	Eigen/src/QR/ColPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon670
RowsAtCompileTime	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon674
RowsAtCompileTime	Eigen/src/QR/FullPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon672
RowsAtCompileTime	Eigen/src/QR/HouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon668
RowsAtCompileTime	Eigen/src/SVD/BDCSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon629
RowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon628
RowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon624
RowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon625
RowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon626
RowsAtCompileTime	Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon627
RowsAtCompileTime	Eigen/src/SVD/SVDBase.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon621
RowsAtCompileTime	Eigen/src/SVD/UpperBidiagonalization.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon630
RowsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon42
RowsAtCompileTime	Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon43
RowsAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
RowsAtCompileTime	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSelfAdjointView>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon39
RowsAtCompileTime	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon40
RowsAtCompileTime	Eigen/src/SparseCore/SparseVector.h	/^    RowsAtCompileTime = IsColVector ? Dynamic : 1,$/;"	e	enum:Eigen::internal::traits::__anon10
RowsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^      RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon73
RowsAtCompileTime	Eigen/src/SparseQR/SparseQR.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon75
RowsBlockXpr	Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowsBlockXpr;$/;"	t
RowsPlusOne	Eigen/src/Geometry/Homogeneous.h	/^    RowsPlusOne = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon96
RowwiseReturnType	Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Horizontal> RowwiseReturnType;$/;"	t	class:Eigen::DenseBase
RsqrtReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_rsqrt_op<Scalar>, const Derived> RsqrtReturnType;$/;"	t
SAccPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::AccPacket SAccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SCMatrix	Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::MappedSuperNodalMatrix<Scalar, StorageIndex> SCMatrix;$/;"	t	class:Eigen::SparseLU
SDP_AsCwiseProduct	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsCwiseProduct$/;"	e	enum:Eigen::internal::__anon58
SDP_AsScalarProduct	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsScalarProduct,$/;"	e	enum:Eigen::internal::__anon58
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	cmake-build-debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SLhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::LhsPacket SLhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SMC_H	smc/smc.hpp	2;"	d
SPARSELU_COLUMN_BMOD_H	Eigen/src/SparseLU/SparseLU_column_bmod.h	32;"	d
SPARSELU_COLUMN_DFS_H	Eigen/src/SparseLU/SparseLU_column_dfs.h	31;"	d
SPARSELU_COPY_TO_UCOL_H	Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	30;"	d
SPARSELU_HEAP_RELAX_SNODE_H	Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	29;"	d
SPARSELU_IMPL_H	Eigen/src/SparseLU/SparseLUImpl.h	10;"	d
SPARSELU_KERNEL_BMOD_H	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	12;"	d
SPARSELU_PANEL_BMOD_H	Eigen/src/SparseLU/SparseLU_panel_bmod.h	32;"	d
SPARSELU_PANEL_DFS_H	Eigen/src/SparseLU/SparseLU_panel_dfs.h	31;"	d
SPARSELU_PIVOTL_H	Eigen/src/SparseLU/SparseLU_pivotL.h	31;"	d
SPARSELU_PRUNEL_H	Eigen/src/SparseLU/SparseLU_pruneL.h	31;"	d
SPARSELU_RELAX_SNODE_H	Eigen/src/SparseLU/SparseLU_relax_snode.h	29;"	d
SPARSE_COLETREE_H	Eigen/src/SparseCore/SparseColEtree.h	32;"	d
SPQR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQR() $/;"	f	class:Eigen::SPQR
SPQR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    explicit SPQR(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
SPQR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^class SPQR : public SparseSolverBase<SPQR<_MatrixType> >$/;"	c	namespace:Eigen
SPQRMatrixQReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQReturnType
SPQRMatrixQReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQReturnType{$/;"	s	namespace:Eigen
SPQRMatrixQTransposeReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
SPQRMatrixQTransposeReturnType	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQTransposeReturnType{$/;"	s	namespace:Eigen
SPQR_QProduct	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct(const SPQRType& spqr, const Derived& other, bool transpose) : m_spqr(spqr),m_other(other),m_transpose(transpose) {}$/;"	f	struct:Eigen::SPQR_QProduct
SPQR_QProduct	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQR_QProduct : ReturnByValue<SPQR_QProduct<SPQRType,Derived> >$/;"	s	namespace:Eigen
SPQR_free	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void SPQR_free()$/;"	f	class:Eigen::SPQR
SResPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResPacket SResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SResScalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResScalar SResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
SRhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::RhsPacket SRhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SSE	Eigen/src/Core/util/Constants.h	/^    SSE = 0x1,$/;"	e	enum:Eigen::Architecture::Type
STABILIZED_MODELS_HPP	methods/stabilized_methods.hpp	2;"	d
STORAGE_INDEX_MUST_MATCH	Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_INDEX_MUST_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
STORAGE_KIND_MUST_MATCH	Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_KIND_MUST_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
STORAGE_LAYOUT_DOES_NOT_MATCH	Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_LAYOUT_DOES_NOT_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
STRINGIFY	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
STRINGIFY	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
STRINGIFY	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
STRINGIFY	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
STRINGIFY_HELPER	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
STRINGIFY_HELPER	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	cmake-build-debug/Makefile	/^SUFFIXES =$/;"	m
SVA_Inner	Eigen/src/SparseCore/SparseVector.h	/^  SVA_Inner,$/;"	e	enum:Eigen::internal::__anon11
SVA_Outer	Eigen/src/SparseCore/SparseVector.h	/^  SVA_Outer$/;"	e	enum:Eigen::internal::__anon11
SVA_RuntimeSwitch	Eigen/src/SparseCore/SparseVector.h	/^  SVA_RuntimeSwitch,$/;"	e	enum:Eigen::internal::__anon11
SVD	Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<MatrixType, QRPreconditioner> SVD;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
SVDBase	Eigen/src/SVD/SVDBase.h	/^  SVDBase()$/;"	f	class:Eigen::SVDBase
SVDBase	Eigen/src/SVD/SVDBase.h	/^class SVDBase$/;"	c	namespace:Eigen
SameType	Eigen/src/Core/CoreEvaluators.h	/^    SameType = is_same<typename Arg1::Scalar,typename Arg2::Scalar>::value && is_same<typename Arg1::Scalar,typename Arg3::Scalar>::value,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
SameType	Eigen/src/Core/CoreEvaluators.h	/^    SameType = is_same<typename Lhs::Scalar,typename Rhs::Scalar>::value,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
SameType	Eigen/src/Core/ProductEvaluators.h	/^    SameType = is_same<typename LhsNestedCleaned::Scalar,typename RhsNestedCleaned::Scalar>::value,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
SarkaDistribution	tools/random_variable.hpp	/^    SarkaDistribution() { }$/;"	f	class:SarkaDistribution
SarkaDistribution	tools/random_variable.hpp	/^class SarkaDistribution:public RandomVariable$/;"	c
Scalar	Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LDLT
Scalar	Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LLT
Scalar	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CholmodBase
Scalar	Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::ArrayBase
Scalar	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrix
Scalar	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Scalar	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixBase
Scalar	Eigen/src/Core/BandMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::CommaInitializer
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::block_evaluator
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::mapbase_evaluator
Scalar	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	Eigen/src/Core/CoreIterators.h	/^  typedef typename internal::traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::InnerIterator
Scalar	Eigen/src/Core/CoreIterators.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::internal::inner_iterator_selector
Scalar	Eigen/src/Core/CwiseBinaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/CwiseTernaryOp.h	/^      const typename Arg3::Scalar&)>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/CwiseUnaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/CwiseUnaryView.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseBase
Scalar	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseCoeffsBase
Scalar	Eigen/src/Core/DiagonalMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalMatrix
Scalar	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	class:Eigen::DiagonalBase
Scalar	Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/Inverse.h	/^  typedef typename XprType::Scalar                            Scalar;$/;"	t	class:Eigen::Inverse
Scalar	Eigen/src/Core/Inverse.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::InverseImpl
Scalar	Eigen/src/Core/MapBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	Eigen/src/Core/Matrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/MatrixBase.h	/^      typedef typename ScalarBinaryOpTraits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
Scalar	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MatrixBase
Scalar	Eigen/src/Core/NoAlias.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::NoAlias
Scalar	Eigen/src/Core/PermutationMatrix.h	/^    typedef void Scalar;$/;"	t	class:Eigen::PermutationBase
Scalar	Eigen/src/Core/PermutationMatrix.h	/^  typedef void Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::PlainObjectBase
Scalar	Eigen/src/Core/Product.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::dense_product_base
Scalar	Eigen/src/Core/Product.h	/^  typedef typename ScalarBinaryOpTraits<typename traits<LhsCleaned>::Scalar, typename traits<RhsCleaned>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/ProductEvaluators.h	/^   typedef typename ScalarBinaryOpTraits<typename MatrixType::Scalar, typename DiagonalType::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::diagonal_product_evaluator_base
Scalar	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl_base
Scalar	Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_impl
Scalar	Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_novec_unroller
Scalar	Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
Scalar	Eigen/src/Core/Redux.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::redux_evaluator
Scalar	Eigen/src/Core/Replicate.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/Reverse.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::Scalar Scalar; $/;"	t	class:Eigen::SelfAdjointView
Scalar	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Scalar	Eigen/src/Core/SolverBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SolverBase
Scalar	Eigen/src/Core/Swap.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::TriangularBase
Scalar	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Scalar Scalar;$/;"	t	class:Eigen::TriangularView
Scalar	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::Scalar Scalar;$/;"	t	class:Eigen::TriangularViewImpl
Scalar	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Scalar	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::VectorwiseOp
Scalar	Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::result_type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar; $/;"	t	struct:Eigen::internal::max_coeff_visitor
Scalar	Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::coeff_visitor
Scalar	Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Scalar	Eigen/src/Core/Visitor.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::visitor_evaluator
Scalar	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  Scalar;$/;"	t	class:Eigen::internal::gebp_traits
Scalar	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	Eigen/src/Core/util/BlasUtil.h	/^  typedef std::complex<RealScalar> Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename NestedXpr::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	Eigen/src/Core/util/BlasUtil.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexEigenSolver
Scalar	Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexSchur
Scalar	Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::EigenSolver
Scalar	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
Scalar	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HessenbergDecomposition
Scalar	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealQZ
Scalar	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealSchur
Scalar	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Scalar	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::Scalar Scalar;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
Scalar	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::Tridiagonalization
Scalar	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Scalar	Eigen/src/Geometry/AlignedBox.h	/^  typedef _Scalar                                   Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename traits<Derived>::Scalar Scalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Scalar	Eigen/src/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::Map
Scalar	Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Scalar	Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::QuaternionBase
Scalar	Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Geometry/RotationBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	Eigen/src/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::UniformScaling
Scalar	Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::traits<HouseholderSequence>::Scalar Scalar;$/;"	t	class:Eigen::HouseholderSequence
Scalar	Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalPreconditioner
Scalar	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Scalar	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BiCGSTAB
Scalar	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ConjugateGradient
Scalar	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLUT
Scalar	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterativeSolverBase
Scalar	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Scalar	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::Scalar Scalar;$/;"	t	class:Eigen::SolveWithGuess
Scalar	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PastixBase
Scalar	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pastix_traits
Scalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLDLT
Scalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLLT
Scalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLU
Scalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PardisoImpl
Scalar	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pardiso_traits
Scalar	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ColPivHouseholderQR
Scalar	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
Scalar	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivHouseholderQR
Scalar	Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HouseholderQR
Scalar	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SPQR
Scalar	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::Scalar Scalar;$/;"	t	struct:Eigen::SPQR_QProduct
Scalar	Eigen/src/SVD/BDCSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BDCSVD
Scalar	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::JacobiSVD
Scalar	Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Scalar	Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Scalar	Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SVDBase
Scalar	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholesky
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLDLT
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLLT
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                             Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                         Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector
Scalar	Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
Scalar	Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::CompressedStorage
Scalar	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename LhsCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MappedSparseMatrix
Scalar	Eigen/src/SparseCore/SparseAssign.h	/^  typedef typename DstXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::Assignment
Scalar	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::binary_evaluator
Scalar	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
Scalar	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename ProdXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Scalar	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
Scalar	Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SparseMapBase
Scalar	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SparseMatrixBase
Scalar	Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::permutation_matrix_product
Scalar	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSelfAdjointView
Scalar	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Scalar	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
Scalar	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Scalar	Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	Eigen/src/SparseCore/SparseVector.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	Eigen/src/SparseCore/SparseView.h	/^        typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
Scalar	Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Scalar	Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::Scalar Scalar; $/;"	t	class:Eigen::SparseLU
Scalar	Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MappedSupernodalType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixLReturnType
Scalar	Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MatrixLType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixUReturnType
Scalar	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _Scalar Scalar; $/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
Scalar	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename ScalarVector::Scalar Scalar;$/;"	t	struct:Eigen::internal::column_dfs_traits
Scalar	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseQR
Scalar	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::Assignment
Scalar	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
Scalar	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQR_QProduct
Scalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperILU
Scalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperLU
Scalar	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SuperLUBase
Scalar	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::UmfPackLU
ScalarIsComplex	Eigen/src/PardisoSupport/PardisoSupport.h	/^      ScalarIsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::PardisoImpl::__anon115
ScalarMatrix	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic,ColMajor> ScalarMatrix;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type     ScalarPacket;$/;"	t	class:Eigen::internal::gebp_traits
ScalarPointer	Eigen/src/SparseCore/SparseMap.h	/^                         Scalar *, const Scalar *>::type ScalarPointer;$/;"	t	class:Eigen::SparseMapBase
ScalarTraits	Eigen/src/Geometry/AlignedBox.h	/^  typedef NumTraits<Scalar>                         ScalarTraits;$/;"	t	class:Eigen::AlignedBox
ScalarTypeMatch	Eigen/src/Core/Ref.h	/^      ScalarTypeMatch = internal::is_same<typename PlainObjectType::Scalar, typename Derived::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::match::__anon456
ScalarVector	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ScalarVector ScalarVector;$/;"	t	class:Eigen::SparseMatrix
ScalarVector	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseMatrixBase
ScalarVector	Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseLU
ScalarVector	Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarVector	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
ScalarVector	Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<Scalar, Dynamic, 1> ScalarVector;$/;"	t	class:Eigen::SparseQR
ScalarWithConstIfNotLvalue	Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::ArrayWrapper
ScalarWithConstIfNotLvalue	Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MatrixWrapper
ScalarWithConstIfNotLvalue	Eigen/src/Core/Diagonal.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::Diagonal
ScalarWithConstIfNotLvalue	Eigen/src/Core/MapBase.h	/^                  >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MapBase
ScalarWithConstIfNotLvalue	Eigen/src/Core/Transpose.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::TransposeImpl
Scaling	Eigen/src/Geometry/Scaling.h	/^inline DiagonalMatrix<Scalar,2> Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	namespace:Eigen
Scaling	Eigen/src/Geometry/Scaling.h	/^inline DiagonalMatrix<Scalar,3> Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	namespace:Eigen
Scaling	Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<double> Scaling(double s) { return UniformScaling<double>(s); }$/;"	f	namespace:Eigen
Scaling	Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<float> Scaling(float s) { return UniformScaling<float>(s); }$/;"	f	namespace:Eigen
Scaling	Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<std::complex<RealScalar> > Scaling(const std::complex<RealScalar>& s)$/;"	f	namespace:Eigen
Scaling	Eigen/src/Geometry/Scaling.h	/^inline const DiagonalWrapper<const Derived> Scaling(const MatrixBase<Derived>& coeffs)$/;"	f	namespace:Eigen
Score_is_abs	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef void Score_is_abs;$/;"	t	struct:Eigen::internal::scalar_score_coeff_op
SegmentReturnType	Eigen/src/plugins/BlockMethods.h	/^typedef VectorBlock<Derived> SegmentReturnType;$/;"	t
Select	Eigen/src/Core/Select.h	/^    Select(const ConditionMatrixType& a_conditionMatrix,$/;"	f	class:Eigen::Select
Select	Eigen/src/Core/Select.h	/^class Select : public internal::dense_xpr_base< Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >::type,$/;"	c	namespace:Eigen
Selector	Eigen/src/Core/GenericPacketMath.h	/^template <size_t N> struct Selector {$/;"	s	namespace:Eigen::internal
SelfAdjoint	Eigen/src/Core/util/Constants.h	/^  SelfAdjoint=0x10,$/;"	e	enum:Eigen::UpLoType
SelfAdjointEigenSolver	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver()$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(const EigenBase<InputType>& matrix, int options = ComputeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename _MatrixType> class SelfAdjointEigenSolver$/;"	c	namespace:Eigen
SelfAdjointShape	Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	s	namespace:Eigen
SelfAdjointView	Eigen/src/Core/SelfAdjointView.h	/^    explicit inline SelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SelfAdjointView
SelfAdjointView	Eigen/src/Core/SelfAdjointView.h	/^template<typename _MatrixType, unsigned int UpLo> class SelfAdjointView$/;"	c	namespace:Eigen
SelfAdjointViewReturnType	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
SelfAdjointViewReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
Sequential	Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	e	enum:Eigen::Sequential_t
SequentialLinSpacedReturnType	Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar>,PlainObject> SequentialLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
Sequential_t	Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	g	namespace:Eigen
SetAction	Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
SetDiag	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon279
SetDiag	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon280
Shape	Eigen/src/Core/BandMatrix.h	/^  typedef BandShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_shape<typename traits<T>::StorageKind>::Shape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<SolverStorage>          { typedef SolverShape Shape;           };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/Core/SelfAdjointView.h	/^  typedef SelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename glue_shapes<typename evaluator_traits<MatrixType>::Shape, TriangularShape>::type Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/Geometry/Homogeneous.h	/^  typedef HomogeneousShape Shape;  $/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequenceShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/SparseCore/SparseAssign.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
ShuffleSelect	smc/pf_smc.cpp	/^  ShuffleSelect(double up_bound,int index):up_bound(up_bound),index(index){}$/;"	f	struct:ShuffleSelect
ShuffleSelect	smc/pf_smc.cpp	/^struct ShuffleSelect$/;"	s	file:
ShuffleSelect	smc/stuart_smc.cpp	/^  ShuffleSelect(double up_bound,int index):up_bound(up_bound),index(index){}$/;"	f	struct:ShuffleSelect
ShuffleSelect	smc/stuart_smc.cpp	/^struct ShuffleSelect$/;"	s	file:
Side	Eigen/src/Core/ProductEvaluators.h	/^  enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };$/;"	e	enum:Eigen::internal::generic_product_impl::__anon442
SideType	Eigen/src/Core/util/Constants.h	/^enum SideType {$/;"	g	namespace:Eigen
SignMatrix	Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	g	namespace:Eigen::internal
SignReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sign_op<Scalar>, const Derived> SignReturnType;$/;"	t
SimplicialCholesky	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky() : Base(), m_LDLT(true) {}$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialCholesky : public SimplicialCholeskyBase<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialCholesky	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholesky(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholeskyBase	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholeskyBase(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^class SimplicialCholeskyBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
SimplicialCholeskyLDLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLDLT$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyLLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLLT,$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyMode	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^enum SimplicialCholeskyMode {$/;"	g	namespace:Eigen
SimplicialLDLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT() : Base() {}$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLDLT : public SimplicialCholeskyBase<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLDLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT() : Base() {}$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLLT : public SimplicialCholeskyBase<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
SinReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sin_op<Scalar>, const Derived> SinReturnType;$/;"	t
SingletonVector	Eigen/src/SparseCore/SparseMatrix.h	/^        SingletonVector(Index i, Index v)$/;"	f	class:Eigen::SparseMatrix::SingletonVector
SingletonVector	Eigen/src/SparseCore/SparseMatrix.h	/^    class SingletonVector$/;"	c	class:Eigen::SparseMatrix
SingularValuesType	Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::BDCSVD
SingularValuesType	Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::JacobiSVD
SingularValuesType	Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::plain_diag_type<MatrixType, RealScalar>::type SingularValuesType;$/;"	t	class:Eigen::SVDBase
SinhReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sinh_op<Scalar>, const Derived> SinhReturnType;$/;"	t
Size	Eigen/src/Core/Redux.h	/^    Size = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_impl::__anon578
Size	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon639
Size	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon631
Size	Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon638
SizeA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeA = ActualRows * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon298
SizeAtCompileTime	Eigen/src/Core/BandMatrix.h	/^      SizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime)$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon232
SizeAtCompileTime	Eigen/src/Core/DenseBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon420
SizeAtCompileTime	Eigen/src/Core/MapBase.h	/^      SizeAtCompileTime = Base::SizeAtCompileTime$/;"	e	enum:Eigen::MapBase::__anon431
SizeAtCompileTime	Eigen/src/Core/Redux.h	/^    SizeAtCompileTime = XprType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon579
SizeAtCompileTime	Eigen/src/Core/SolverBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon437
SizeAtCompileTime	Eigen/src/Core/TriangularMatrix.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon265
SizeAtCompileTime	Eigen/src/SparseCore/SparseMatrixBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
SizeB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeB = ActualCols * MaxDepth$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon298
SizeMinusOne	Eigen/src/Core/MatrixBase.h	/^      SizeMinusOne = SizeAtCompileTime==Dynamic ? Dynamic : SizeAtCompileTime-1$/;"	e	enum:Eigen::MatrixBase::__anon252
SizeMinusOne	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : Size - 1,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon639
SizeMinusOne	Eigen/src/Eigenvalues/Tridiagonalization.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : (Size > 1 ? Size - 1 : 1),$/;"	e	enum:Eigen::Tridiagonalization::__anon638
SkipDiag	Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::TriangularViewImpl::__anon54
SkipDiag	Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon55
SkipFirst	Eigen/src/SparseCore/SparseTriangularView.h	/^    enum { SkipFirst = ((Mode&Lower) && !(MatrixType::Flags&RowMajorBit))$/;"	e	enum:Eigen::TriangularViewImpl::__anon54
SkipFirst	Eigen/src/SparseCore/SparseTriangularView.h	/^  enum { SkipFirst = ((Mode&Lower) && !(ArgType::Flags&RowMajorBit))$/;"	e	enum:Eigen::internal::unary_evaluator::__anon55
SkipLast	Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipLast = !SkipFirst,$/;"	e	enum:Eigen::TriangularViewImpl::__anon54
SkipLast	Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipLast = !SkipFirst,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon55
SliceVectorizedTraversal	Eigen/src/Core/util/Constants.h	/^  SliceVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
SluMatrix	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix()$/;"	f	struct:Eigen::SluMatrix
SluMatrix	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
SluMatrix	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrix : SuperMatrix$/;"	s	namespace:Eigen
SluMatrixMapHelper	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<Matrix<Scalar,Rows,Cols,Options,MRows,MCols> >$/;"	s	namespace:Eigen
SluMatrixMapHelper	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<SparseMatrixBase<Derived> >$/;"	s	namespace:Eigen
Small	Eigen/src/Core/GeneralProduct.h	/^  Small = 3$/;"	e	enum:Eigen::__anon586
SmallPanelWidth	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = 2 * EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon279
SmallPanelWidth	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon280
Solve	Eigen/src/Core/Solve.h	/^  Solve(const Decomposition &dec, const RhsType &rhs)$/;"	f	class:Eigen::Solve
Solve	Eigen/src/Core/Solve.h	/^class Solve : public SolveImpl<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>$/;"	c	namespace:Eigen
SolveImpl	Eigen/src/Core/Solve.h	/^class SolveImpl : public internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
SolveImpl	Eigen/src/Core/Solve.h	/^class SolveImpl<Decomposition,RhsType,Dense>$/;"	c	namespace:Eigen
SolveType	Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveType	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<Decomposition,RhsType,GuessType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveWithGuess	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  SolveWithGuess(const Decomposition &dec, const RhsType &rhs, const GuessType &guess)$/;"	f	class:Eigen::SolveWithGuess
SolveWithGuess	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^class SolveWithGuess : public internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type$/;"	c	namespace:Eigen
SolverBase	Eigen/src/Core/SolverBase.h	/^    SolverBase()$/;"	f	class:Eigen::SolverBase
SolverBase	Eigen/src/Core/SolverBase.h	/^class SolverBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
SolverShape	Eigen/src/Core/util/Constants.h	/^struct SolverShape            { static std::string debugName() { return "SolverShape"; } };$/;"	s	namespace:Eigen
SolverStorage	Eigen/src/Core/util/Constants.h	/^struct SolverStorage {};$/;"	s	namespace:Eigen
Sparse	Eigen/src/Core/util/Constants.h	/^struct Sparse {};$/;"	s	namespace:Eigen
Sparse2Dense	Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Dense  {};$/;"	s	namespace:Eigen::internal
Sparse2Sparse	Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Sparse {};$/;"	s	namespace:Eigen::internal
SparseCompressedBase	Eigen/src/SparseCore/SparseCompressedBase.h	/^    SparseCompressedBase() {}$/;"	f	class:Eigen::SparseCompressedBase
SparseCompressedBase	Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase$/;"	c	namespace:Eigen
SparseLU	Eigen/src/SparseLU/SparseLU.h	/^    SparseLU():m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	Eigen/src/SparseLU/SparseLU.h	/^    explicit SparseLU(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
SparseLU	Eigen/src/SparseLU/SparseLU.h	/^class SparseLU : public SparseSolverBase<SparseLU<_MatrixType,_OrderingType> >, public internal::SparseLUImpl<typename _MatrixType::Scalar, typename _MatrixType::StorageIndex>$/;"	c	namespace:Eigen
SparseLUImpl	Eigen/src/SparseLU/SparseLUImpl.h	/^class SparseLUImpl$/;"	c	namespace:Eigen::internal
SparseLUMatrixLReturnType	Eigen/src/SparseLU/SparseLU.h	/^  explicit SparseLUMatrixLReturnType(const MappedSupernodalType& mapL) : m_mapL(mapL)$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
SparseLUMatrixLReturnType	Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixLReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseLUMatrixUReturnType	Eigen/src/SparseLU/SparseLU.h	/^  SparseLUMatrixUReturnType(const MatrixLType& mapL, const MatrixUType& mapU)$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
SparseLUMatrixUReturnType	Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixUReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase() {}$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, IndexPointer outerIndexPtr, IndexPointer innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index size, Index nnz, IndexPointer innerIndexPtr, ScalarPointer valuePtr)$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index size, Index nnz, StorageIndex* innerIndexPtr, Scalar* valuePtr)$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,ReadOnlyAccessors>$/;"	c	namespace:Eigen
SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,WriteAccessors>$/;"	c	namespace:Eigen
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    SparseMatrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    explicit SparseMatrix(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseSelfAdjointView<OtherDerived, UpLo>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix$/;"	c	namespace:Eigen
SparseMatrixBase	Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseMatrixBase() : m_isRValue(false) { \/* TODO check flags *\/ }$/;"	f	class:Eigen::SparseMatrixBase
SparseMatrixBase	Eigen/src/SparseCore/SparseMatrixBase.h	/^template<typename Derived> class SparseMatrixBase$/;"	c	namespace:Eigen
SparseMatrixType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::PardisoImpl
SparseMatrixType	Eigen/src/SparseCore/SparseBlock.h	/^  typedef SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	Eigen/src/SparseCore/SparseBlock.h	/^  typedef const SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar,_Options,_StorageIndex> SparseMatrixType;$/;"	t	struct:Eigen::internal::evaluator
SparseQR	Eigen/src/SparseQR/SparseQR.h	/^    SparseQR () :  m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	Eigen/src/SparseQR/SparseQR.h	/^    explicit SparseQR(const MatrixType& mat) : m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	Eigen/src/SparseQR/SparseQR.h	/^class SparseQR : public SparseSolverBase<SparseQR<_MatrixType,_OrderingType> >$/;"	c	namespace:Eigen
SparseQRMatrixQReturnType	Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
SparseQRMatrixQReturnType	Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQReturnType : public EigenBase<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen
SparseQRMatrixQTransposeReturnType	Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQTransposeReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
SparseQRMatrixQTransposeReturnType	Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQTransposeReturnType$/;"	s	namespace:Eigen
SparseQR_QProduct	Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct(const SparseQRType& qr, const Derived& other, bool transpose) : $/;"	f	struct:Eigen::SparseQR_QProduct
SparseQR_QProduct	Eigen/src/SparseQR/SparseQR.h	/^struct SparseQR_QProduct : ReturnByValue<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen
SparseRefBase	Eigen/src/SparseCore/SparseRef.h	/^  SparseRefBase()$/;"	f	class:Eigen::internal::SparseRefBase
SparseRefBase	Eigen/src/SparseCore/SparseRef.h	/^template<typename Derived> class SparseRefBase$/;"	c	namespace:Eigen::internal
SparseSelfAdjoint2Sparse	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct SparseSelfAdjoint2Sparse {};$/;"	s	namespace:Eigen::internal
SparseSelfAdjointShape	Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	s	namespace:Eigen::internal
SparseSelfAdjointView	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    explicit inline SparseSelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SparseSelfAdjointView
SparseSelfAdjointView	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<typename MatrixType, unsigned int _Mode> class SparseSelfAdjointView$/;"	c	namespace:Eigen
SparseShape	Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	s	namespace:Eigen
SparseSolverBase	Eigen/src/SparseCore/SparseSolverBase.h	/^    SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
SparseSolverBase	Eigen/src/SparseCore/SparseSolverBase.h	/^class SparseSolverBase : internal::noncopyable$/;"	c	namespace:Eigen
SparseSymmetricPermutationProduct	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct(const MatrixType& mat, const Perm& perm)$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
SparseSymmetricPermutationProduct	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSymmetricPermutationProduct$/;"	c	namespace:Eigen
SparseTransposeImpl	Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl$/;"	c	namespace:Eigen::internal
SparseTransposeImpl	Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl<MatrixType,CompressedAccessBit>$/;"	c	namespace:Eigen::internal
SparseTriangularShape	Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	s	namespace:Eigen::internal
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    explicit inline SparseVector(Index size) : m_size(0) { check_template_parameters(); resize(size); }$/;"	f	class:Eigen::SparseVector
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector() : m_size(0) { check_template_parameters(); resize(0); }$/;"	f	class:Eigen::SparseVector
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index rows, Index cols) : m_size(0) { check_template_parameters(); resize(rows,cols); }$/;"	f	class:Eigen::SparseVector
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
SparseVector	Eigen/src/SparseCore/SparseVector.h	/^class SparseVector$/;"	c	namespace:Eigen
SparseVectorType	Eigen/src/SparseCore/SparseVector.h	/^  typedef SparseVector<_Scalar,_Options,_Index> SparseVectorType;$/;"	t	struct:Eigen::internal::evaluator
SparseView	Eigen/src/SparseCore/SparseView.h	/^  explicit SparseView(const MatrixType& mat, const Scalar& reference = Scalar(0),$/;"	f	class:Eigen::SparseView
SparseView	Eigen/src/SparseCore/SparseView.h	/^class SparseView : public SparseMatrixBase<SparseView<MatrixType> >$/;"	c	namespace:Eigen
SparseXprInnerIterator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename evaluator<SparseXprType>::InnerIterator SparseXprInnerIterator;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
SparseXprIter	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename evaluator<SparseXprType>::InnerIterator SparseXprIter;$/;"	t	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
Specialized	Eigen/src/Core/util/Constants.h	/^  Specialized,$/;"	e	enum:Eigen::SpecializedType
SpecializedType	Eigen/src/Core/util/Constants.h	/^enum SpecializedType {$/;"	g	namespace:Eigen
SqrtReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> SqrtReturnType;$/;"	t
SquareMatrixType	Eigen/src/Core/MatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::MatrixBase
SquareMatrixType	Eigen/src/SparseCore/SparseMatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
SquareReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_square_op<Scalar>, const Derived> SquareReturnType;$/;"	t
SquaredNormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_squaredNorm,RealScalar>::Type SquaredNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
SrcAlignment	Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = Kernel::AssignmentTraits::SrcAlignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon263
SrcAlignment	Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = Kernel::AssignmentTraits::SrcAlignment,$/;"	e	enum:Eigen::internal::dense_assignment_loop::__anon264
SrcAlignment	Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = SrcEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon254
SrcCoeffRatio	Eigen/src/Core/GenericPacketMath.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon585
SrcCoeffRatio	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon478
SrcCoeffRatio	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon479
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon548
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon549
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon550
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon551
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon552
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon553
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon554
SrcCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 2,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon547
SrcCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon525
SrcCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon526
SrcCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon528
SrcCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 2,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon527
SrcEvaluatorType	Eigen/src/Core/AssignEvaluator.h	/^  typedef SrcEvaluatorTypeT SrcEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcEvaluatorType	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcEvaluatorType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcFlags	Eigen/src/Core/AssignEvaluator.h	/^    SrcFlags = SrcEvaluator::Flags$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon253
SrcHasDirectAccess	Eigen/src/Core/Assign_MKL.h	/^      SrcHasDirectAccess = Src::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
SrcIsRowMajor	Eigen/src/Core/AssignEvaluator.h	/^    SrcIsRowMajor = SrcFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
SrcStorageOrder	Eigen/src/SparseCore/SparsePermutation.h	/^      SrcStorageOrder = MatrixTypeCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon61
SrcXprType	Eigen/src/Core/AssignEvaluator.h	/^  typedef typename SrcEvaluatorTypeT::XprType SrcXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcXprType	Eigen/src/Core/ProductEvaluators.h	/^                        const Product<Lhs,Rhs,DefaultProduct> > SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs,Rhs,Options> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	Eigen/src/Core/Solve.h	/^  typedef Solve<CwiseUnaryOp<internal::scalar_conjugate_op<typename DecType::Scalar>, const Transpose<const DecType> >,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/Solve.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/Solve.h	/^  typedef Solve<Transpose<const DecType>,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/TriangularMatrix.h	/^  typedef Product<Lhs,Rhs,DefaultProduct> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Horizontal> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Vertical> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<DecType,RhsType,GuessType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/LU/FullPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/LU/InverseImpl.h	/^  typedef Inverse<XprType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/LU/PartialPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef Inverse<CodType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/SparseCore/SparseAssign.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/SparseCore/SparseProduct.h	/^  typedef Product<Lhs,Rhs,AliasFreeProduct> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSymmetricPermutationProduct<MatrixType,Mode> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseQRMatrixQReturnType<SparseQRType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
StableNormReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_stableNorm,RealScalar>::Type StableNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
StandardCompressedFormat	Eigen/src/SparseCore/SparseRef.h	/^  StandardCompressedFormat = 2 \/**< used by Ref<SparseMatrix> to specify whether the input storage must be in standard compressed form *\/$/;"	e	enum:Eigen::__anon2
StartIndex	Eigen/src/Core/SolveTriangular.h	/^    StartIndex = IsLower ? 0         : DiagIndex+1$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon230
StemFunction	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixBase
StepIntegrator	core_methods.hpp	/^    StepIntegrator(Equation *e, bool error_estimation_active = false): eq(e),do_error_estimation(error_estimation_active) {n=eq->get_dimension(); }$/;"	f	class:StepIntegrator
StepIntegrator	core_methods.hpp	/^class StepIntegrator$/;"	c
StepIntegrator	methods/core_methods.hpp	/^    StepIntegrator(Equation *e, bool error_estimation_active = false): eq(e),do_error_estimation(error_estimation_active) {n=eq->get_dimension(); }$/;"	f	class:StepIntegrator
StepIntegrator	methods/core_methods.hpp	/^class StepIntegrator$/;"	c
Storage	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseMatrix
Storage	Eigen/src/SparseCore/SparseVector.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseVector
StorageBaseType	Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase StorageBaseType;$/;"	t	class:Eigen::ArrayBase
StorageBaseType	Eigen/src/Core/MatrixBase.h	/^    typedef MatrixBase StorageBaseType;$/;"	t	class:Eigen::MatrixBase
StorageBaseType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrixBase StorageBaseType;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LDLT
StorageIndex	Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LLT
StorageIndex	Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::CholmodBase
StorageIndex	Eigen/src/Core/BandMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::TridiagonalMatrix
StorageIndex	Eigen/src/Core/BandMatrix.h	/^    typedef typename DenseMatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixBase
StorageIndex	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrix
StorageIndex	Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixWrapper
StorageIndex	Eigen/src/Core/BandMatrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/Block.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	Eigen/src/Core/CwiseBinaryOp.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::traits<Arg1>::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DenseBase
StorageIndex	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalBase
StorageIndex	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalMatrix
StorageIndex	Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/Inverse.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::Inverse
StorageIndex	Eigen/src/Core/MapBase.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MapBase
StorageIndex	Eigen/src/Core/Matrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::MatrixBase
StorageIndex	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationBase
StorageIndex	Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationMatrix
StorageIndex	Eigen/src/Core/PermutationMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/Product.h	/^                                      typename RhsTraits::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SelfAdjointView
StorageIndex	Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::StorageIndex StorageIndex;$/;"	t	class:Eigen::Solve
StorageIndex	Eigen/src/Core/Solve.h	/^  typedef typename promote_index_type<typename Decomposition::StorageIndex, typename RhsType::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Transpositions
StorageIndex	Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsBase
StorageIndex	Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsWrapper
StorageIndex	Eigen/src/Core/Transpositions.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::TriangularBase
StorageIndex	Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	class:Eigen::Transform
StorageIndex	Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename Vector::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalPreconditioner
StorageIndex	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename PermutationType::StorageIndex StorageIndex; $/;"	t	class:Eigen::IncompleteCholesky
StorageIndex	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::IncompleteLUT
StorageIndex	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::IterativeSolverBase
StorageIndex	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixBase
StorageIndex	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixLU
StorageIndex	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pastix_traits
StorageIndex	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLDLT
StorageIndex	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLLT
StorageIndex	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoImpl
StorageIndex	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;    $/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::ColPivHouseholderQR
StorageIndex	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
StorageIndex	Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::FullPivHouseholderQR
StorageIndex	Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::HouseholderQR
StorageIndex	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SuiteSparse_long StorageIndex ;$/;"	t	class:Eigen::SPQR
StorageIndex	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::SPQR_QProduct
StorageIndex	Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SVDBase
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholesky
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholeskyBase
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLDLT
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLLT
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                       StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                   StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseCore/AmbiVector.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::AmbiVector
StorageIndex	Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::CompressedStorage
StorageIndex	Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MappedSparseMatrix
StorageIndex	Eigen/src/SparseCore/SparseAssign.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	Eigen/src/SparseCore/SparseBlock.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::binary_evaluator
StorageIndex	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
StorageIndex	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
StorageIndex	Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMapBase
StorageIndex	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeCleaned::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::permutation_matrix_product
StorageIndex	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSelfAdjointView
StorageIndex	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
StorageIndex	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::SparseTransposeImpl
StorageIndex	Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	Eigen/src/SparseCore/SparseVector.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseCore/TriangularSolver.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
StorageIndex	Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseLU
StorageIndex	Eigen/src/SparseLU/SparseLU_Structs.h	/^  typedef typename IndexVector::Scalar StorageIndex; $/;"	t	struct:Eigen::internal::LU_GlobalLU_t
StorageIndex	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
StorageIndex	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::column_dfs_traits
StorageIndex	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::panel_dfs_traits
StorageIndex	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseQR
StorageIndex	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLU
StorageIndex	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLUBase
StorageIndex	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::UmfPackLU
StorageKind	Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::ArrayBase
StorageKind	Eigen/src/Core/BandMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/CwiseBinaryOp.h	/^                                              BinaryOp>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::traits<Arg1>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseBase
StorageKind	Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseCoeffsBase
StorageKind	Eigen/src/Core/Diagonal.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalBase
StorageKind	Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalMatrix
StorageKind	Eigen/src/Core/DiagonalMatrix.h	/^  typedef DiagonalShape StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	struct:Eigen::EigenBase
StorageKind	Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MapBase
StorageKind	Eigen/src/Core/Matrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MatrixBase
StorageKind	Eigen/src/Core/PermutationMatrix.h	/^  typedef PermutationStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::PlainObjectBase
StorageKind	Eigen/src/Core/Product.h	/^                                                internal::product_type<Lhs,Rhs>::ret>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/Select.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/Transpositions.h	/^  typedef TranspositionsStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularBase
StorageKind	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularView
StorageKind	Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularViewImpl
StorageKind	Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Geometry/Transform.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/LU/FullPivLU.h	/^  typedef SolverStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/LU/PartialPivLU.h	/^  typedef SolverStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	Eigen/src/SparseCore/SparseVector.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/SparseCore/SparseView.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageOptions	Eigen/src/Core/util/Constants.h	/^enum StorageOptions {$/;"	g	namespace:Eigen
StorageOrder	Eigen/src/Core/ProductEvaluators.h	/^    StorageOrder = int(Rhs::Flags) & RowMajorBit ? RowMajor : ColMajor$/;"	e	enum:Eigen::internal::product_evaluator::__anon447
StorageOrder	Eigen/src/Core/ProductEvaluators.h	/^  enum { StorageOrder = int(Lhs::Flags) & RowMajorBit ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::product_evaluator::__anon448
StorageOrderMatch	Eigen/src/Core/Ref.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon456
StorageOrderMatch	Eigen/src/SparseCore/SparseRef.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon4
StorageOrdersAgree	Eigen/src/Core/AssignEvaluator.h	/^    StorageOrdersAgree = (int(DstIsRowMajor) == int(SrcIsRowMajor)),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon258
StorageOrdersAgree	Eigen/src/Core/Assign_MKL.h	/^      StorageOrdersAgree = (int(Dst::IsRowMajor) == int(Src::IsRowMajor)),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
StorageOrdersAgree	Eigen/src/Core/CoreEvaluators.h	/^    StorageOrdersAgree = (int(Arg1Flags)&RowMajorBit)==(int(Arg2Flags)&RowMajorBit) && (int(Arg1Flags)&RowMajorBit)==(int(Arg3Flags)&RowMajorBit),$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon308
StorageOrdersAgree	Eigen/src/Core/CoreEvaluators.h	/^    StorageOrdersAgree = (int(LhsFlags)&RowMajorBit)==(int(RhsFlags)&RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon309
StorageOrdersMatch	Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon647
StorageOrdersMatch	Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon648
StreamPrecision	Eigen/src/Core/IO.h	/^enum { StreamPrecision = -1,$/;"	e	enum:Eigen::__anon225
StrictlyLower	Eigen/src/Core/util/Constants.h	/^  StrictlyLower=ZeroDiag|Lower, $/;"	e	enum:Eigen::UpLoType
StrictlyUpper	Eigen/src/Core/util/Constants.h	/^  StrictlyUpper=ZeroDiag|Upper,$/;"	e	enum:Eigen::UpLoType
Stride	Eigen/src/Core/Stride.h	/^    Stride()$/;"	f	class:Eigen::Stride
Stride	Eigen/src/Core/Stride.h	/^    Stride(Index outerStride, Index innerStride)$/;"	f	class:Eigen::Stride
Stride	Eigen/src/Core/Stride.h	/^    Stride(const Stride& other)$/;"	f	class:Eigen::Stride
Stride	Eigen/src/Core/Stride.h	/^class Stride$/;"	c	namespace:Eigen
StrideBase	Eigen/src/Core/Ref.h	/^  typedef Stride<StrideType::OuterStrideAtCompileTime,StrideType::InnerStrideAtCompileTime> StrideBase;$/;"	t	class:Eigen::RefBase
StrideType	Eigen/src/Core/Ref.h	/^  typedef _StrideType StrideType;$/;"	t	struct:Eigen::internal::traits
StrideType	Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::StrideType StrideType;$/;"	t	class:Eigen::RefBase
StridedAlignedMapType	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstAlignedMapType	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstMapType	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedMapType	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
Stuart_SMC	smc/smc.hpp	/^    Stuart_SMC(int no_particles,InverseProblem* inverse_problem,int J=200,Real a=0.97, int no_steps=50000):no_particles(no_particles),inverse_problem(inverse_problem),a(a),no_steps(no_steps),J(J)$/;"	f	class:Stuart_SMC
Stuart_SMC	smc/smc.hpp	/^class Stuart_SMC$/;"	c
SubDiagonalReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type SubDiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
SubDiagonalType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename TridiagonalizationType::SubDiagonalType SubDiagonalType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
SubDiagonalType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<RealScalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> SubDiagonalType;$/;"	t	class:Eigen::Tridiagonalization
SubVector	Eigen/src/Core/VectorwiseOp.h	/^                               typename ExpressionType::RowXpr>::type SubVector;$/;"	t	class:Eigen::VectorwiseOp
Subs	Eigen/src/Core/BandMatrix.h	/^      Subs   = internal::traits<Derived>::Subs,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
Subs	Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon234
Subs	Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon235
Success	Eigen/src/Core/util/Constants.h	/^  Success = 0,        $/;"	e	enum:Eigen::ComputationInfo
SumReturnType	Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_sum>::Type SumReturnType;$/;"	t	class:Eigen::VectorwiseOp
SuperDiagVectorType	Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTimeMinusOne, 1> SuperDiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
SuperILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU() : Base() { init(); }$/;"	f	class:Eigen::SuperILU
SuperILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(SuperILU& ) { }$/;"	f	class:Eigen::SuperILU
SuperILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperILU
SuperILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperILU : public SuperLUBase<_MatrixType,SuperILU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU() : Base() { init(); }$/;"	f	class:Eigen::SuperLU
SuperLU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(SuperLU& ) { }$/;"	f	class:Eigen::SuperLU
SuperLU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    explicit SuperLU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperLU
SuperLU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLU : public SuperLUBase<_MatrixType,SuperLU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLUBase	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase() {}$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase(SuperLUBase& ) { }$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLUBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Supers	Eigen/src/Core/BandMatrix.h	/^      Supers = internal::traits<Derived>::Supers,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon231
Supers	Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon234
Supers	Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon235
SupportedAccessPatterns	Eigen/src/SparseCore/SparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon42
SupportedAccessPatterns	Eigen/src/SparseCore/SparseVector.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon10
SwappedTraits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<RhsScalar,LhsScalar,ConjugateRhs,ConjugateLhs> SwappedTraits;$/;"	t	struct:Eigen::internal::gebp_kernel
Symmetric	Eigen/src/Core/util/Constants.h	/^  Symmetric=0x20$/;"	e	enum:Eigen::UpLoType
T	methods/stabilized_methods.hpp	/^    Real *T,*U;$/;"	m	class:RKC
THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD	Eigen/src/Core/util/StaticAssert.h	/^        THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE	Eigen/src/Core/util/StaticAssert.h	/^        THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE	Eigen/src/Core/util/StaticAssert.h	/^        THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH	Eigen/src/Core/util/StaticAssert.h	/^        THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIRD_PARTY_EIGEN3_EIGEN_SRC_CORE_ARCH_AVX512_MATHFUNCTIONS_H_	Eigen/src/Core/arch/AVX512/MathFunctions.h	11;"	d
THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS	Eigen/src/Core/util/StaticAssert.h	/^        THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY	Eigen/src/Core/util/StaticAssert.h	/^        THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES	Eigen/src/Core/util/StaticAssert.h	/^        THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE	Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
THIS_TYPE_IS_NOT_SUPPORTED	Eigen/src/Core/util/StaticAssert.h	/^        THIS_TYPE_IS_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
TPlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> TPlainObjectType;$/;"	t	class:Eigen::Ref
TPlainObjectType	Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseVector<MatScalar,MatOptions,MatIndex> TPlainObjectType;$/;"	t	class:Eigen::Ref
TanReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tan_op<Scalar>, const Derived> TanReturnType;$/;"	t
TanhReturnType	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tanh_op<Scalar>, const Derived> TanhReturnType;$/;"	t
Target	Eigen/src/Core/util/Constants.h	/^    Target = SSE$/;"	e	enum:Eigen::Architecture::Type
TestEquation	models/models.hpp	/^    TestEquation(int n,Real lambda):Equation(n),lambda(lambda) {}$/;"	f	class:TestEquation
TestEquation	models/models.hpp	/^class TestEquation:public Equation$/;"	c
TestInverse	models/inverse_model.hpp	/^    TestInverse(const std::vector<Real> & parameters, const std::vector< Real>& t_obs , std::vector<RandomVariable*>& prior_distribution, Real noise_variance)  \/\/ probably I should make prior and posterior noises nicer..$/;"	f	class:TestInverse
TestInverse	models/inverse_model.hpp	/^class TestInverse:public InverseProblem$/;"	c
TgtCoeffRatio	Eigen/src/Core/GenericPacketMath.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon585
TgtCoeffRatio	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon478
TgtCoeffRatio	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon479
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon547
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon549
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon550
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon551
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon552
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon553
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon554
TgtCoeffRatio	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 2$/;"	e	enum:Eigen::internal::type_casting_traits::__anon548
TgtCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon525
TgtCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon526
TgtCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon527
TgtCoeffRatio	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 2$/;"	e	enum:Eigen::internal::type_casting_traits::__anon528
ThenMatrixNested	Eigen/src/Core/Select.h	/^  typedef typename ThenMatrixType::Nested ThenMatrixNested;$/;"	t	struct:Eigen::internal::traits
Through	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
TmpFlags	Eigen/src/Geometry/Homogeneous.h	/^    TmpFlags = _MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon96
TmpMatrixType	Eigen/src/Cholesky/LDLT.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1, 0, MaxRowsAtCompileTime, 1> TmpMatrixType;$/;"	t	class:Eigen::LDLT
TopLeft	Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopLeft	Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftCeil	Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftFloor	Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRight	Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopRight	Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightCeil	Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightFloor	Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TrOptions	Eigen/src/SVD/JacobiSVD.h	/^    TrOptions = RowsAtCompileTime==1 ? (MatrixType::Options & ~(RowMajor))$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon625
TrOptions	Eigen/src/SVD/JacobiSVD.h	/^    TrOptions = RowsAtCompileTime==1 ? (MatrixType::Options & ~(RowMajor))$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon626
Traits	Eigen/src/Cholesky/LDLT.h	/^    typedef internal::LDLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LDLT
Traits	Eigen/src/Cholesky/LLT.h	/^    typedef internal::LLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LLT
Traits	Eigen/src/Core/BooleanRedux.h	/^  typedef typename Derived::ExpressionTraits Traits;$/;"	t	struct:Eigen::internal::all_unroller
Traits	Eigen/src/Core/BooleanRedux.h	/^  typedef typename Derived::ExpressionTraits Traits;$/;"	t	struct:Eigen::internal::any_unroller
Traits	Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::PermutationBase
Traits	Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationMatrix> Traits;$/;"	t	class:Eigen::PermutationMatrix
Traits	Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationWrapper> Traits;$/;"	t	class:Eigen::PermutationWrapper
Traits	Eigen/src/Core/Ref.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
Traits	Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::TranspositionsBase
Traits	Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Transpositions> Traits;$/;"	t	class:Eigen::Transpositions
Traits	Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<TranspositionsWrapper> Traits;$/;"	t	class:Eigen::TranspositionsWrapper
Traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> Traits;$/;"	t	struct:Eigen::internal::gebp_kernel
Traits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	class:Eigen::internal::gemm_blocking_space
Traits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef gebp_traits<RhsScalar,LhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Gemm::Traits Traits;$/;"	t	struct:Eigen::internal::gemm_functor
Traits	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjLhs,ConjRhs> Traits;$/;"	t	struct:Eigen::internal::tribb_kernel
Traits	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  typedef gebp_traits<Scalar,Scalar> Traits;$/;"	t	struct:Eigen::internal::product_triangular_matrix_matrix
Traits	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef internal::pardiso_traits<Derived> Traits;$/;"	t	class:Eigen::PardisoImpl
Traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialCholesky> Traits;$/;"	t	class:Eigen::SimplicialCholesky
Traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT> Traits;$/;"	t	class:Eigen::SimplicialLDLT
Traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT> Traits;$/;"	t	class:Eigen::SimplicialLLT
Traits	Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
TraitsBase	Eigen/src/Core/Map.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	Eigen/src/Geometry/Quaternion.h	/^    typedef traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> > TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	Eigen/src/SparseCore/SparseMap.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Transform(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform()$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform<Scalar,Dim,Mode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform<Scalar,Dim,OtherMode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const RotationBase<Derived, Dim>& r)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const Transform<OtherScalarType,Dim,Mode,Options>& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const TranslationType& t)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	Eigen/src/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
TransformMatrix	Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType TransformMatrix;$/;"	t	struct:Eigen::internal::transform_right_product_impl
TransformTimeDiagonalMode	Eigen/src/Geometry/Transform.h	/^  enum { TransformTimeDiagonalMode = ((Mode==int(Isometry))?Affine:int(Mode)) };$/;"	e	enum:Eigen::Transform::__anon89
TransformTimeDiagonalReturnType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,TransformTimeDiagonalMode> TransformTimeDiagonalReturnType;$/;"	t	class:Eigen::Transform
TransformTraits	Eigen/src/Core/util/Constants.h	/^enum TransformTraits {$/;"	g	namespace:Eigen
TransformType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Mode, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Projective, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::generic_product_impl
TransformType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,AffineCompact,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
TransformType	Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
Translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC Translation() {}$/;"	f	class:Eigen::Translation
Translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	Eigen/src/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation2d	Eigen/src/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2f	Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation3d	Eigen/src/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3f	Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
TranslationPart	Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationType	Eigen/src/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
Transpose	Eigen/src/Core/Transpose.h	/^    explicit inline Transpose(MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Transpose
Transpose	Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class Transpose$/;"	c	namespace:Eigen
Transpose	Eigen/src/Core/Transpositions.h	/^    explicit Transpose(const TranspositionType& t) : m_transpositions(t) {}$/;"	f	class:Eigen::Transpose
Transpose	Eigen/src/Core/Transpositions.h	/^class Transpose<TranspositionsBase<TranspositionsDerived> >$/;"	c	namespace:Eigen
Transpose	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon299
Transpose	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon297
TransposeImpl	Eigen/src/Core/Transpose.h	/^class TransposeImpl$/;"	c	namespace:Eigen
TransposeImpl	Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Dense>$/;"	c	namespace:Eigen
TransposeImpl	Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>$/;"	c	namespace:Eigen
TransposeImpl_base	Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base$/;"	s	namespace:Eigen::internal
TransposeImpl_base	Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base<MatrixType, false>$/;"	s	namespace:Eigen::internal
TransposeMode	Eigen/src/Core/SelfAdjointView.h	/^      TransposeMode = ((Mode & Upper) ? Lower : 0) | ((Mode & Lower) ? Upper : 0)$/;"	e	enum:Eigen::SelfAdjointView::__anon278
TransposeMode	Eigen/src/Core/TriangularMatrix.h	/^      TransposeMode = (Mode & Upper ? Lower : 0)$/;"	e	enum:Eigen::TriangularView::__anon267
TransposeMode	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      TransposeMode = ((Mode & Upper) ? Lower : 0) | ((Mode & Lower) ? Upper : 0),$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon39
TransposeReturnType	Eigen/src/Core/DenseBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::DenseBase
TransposeReturnType	Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<typename MatrixType::TransposeReturnType,TransposeMode> TransposeReturnType;$/;"	t	class:Eigen::SelfAdjointView
TransposeReturnType	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<typename MatrixType::TransposeReturnType,TransposeMode> TransposeReturnType;$/;"	t	class:Eigen::TriangularView
TransposeReturnType	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
TransposeTypeWithSameStorageOrder	Eigen/src/SVD/JacobiSVD.h	/^          TransposeTypeWithSameStorageOrder;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
TransposedSparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::SparseMatrix
TranspositionType	Eigen/src/Cholesky/LDLT.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::LDLT
TranspositionType	Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsDerived TranspositionType;$/;"	t	class:Eigen::Transpose
TranspositionType	Eigen/src/LU/PartialPivLU.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::PartialPivLU
Transpositions	Eigen/src/Core/Transpositions.h	/^    explicit inline Transpositions(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::Transpositions
Transpositions	Eigen/src/Core/Transpositions.h	/^    inline Transpositions() {}$/;"	f	class:Eigen::Transpositions
Transpositions	Eigen/src/Core/Transpositions.h	/^    inline Transpositions(Index size) : m_indices(size)$/;"	f	class:Eigen::Transpositions
Transpositions	Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const Transpositions& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::Transpositions
Transpositions	Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
Transpositions	Eigen/src/Core/Transpositions.h	/^class Transpositions : public TranspositionsBase<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	c	namespace:Eigen
TranspositionsBase	Eigen/src/Core/Transpositions.h	/^class TranspositionsBase$/;"	c	namespace:Eigen
TranspositionsShape	Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	s	namespace:Eigen
TranspositionsStorage	Eigen/src/Core/util/Constants.h	/^struct TranspositionsStorage {};$/;"	s	namespace:Eigen
TranspositionsWrapper	Eigen/src/Core/Transpositions.h	/^    explicit inline TranspositionsWrapper(IndicesType& indices)$/;"	f	class:Eigen::TranspositionsWrapper
TranspositionsWrapper	Eigen/src/Core/Transpositions.h	/^class TranspositionsWrapper$/;"	c	namespace:Eigen
Traversal	Eigen/src/Core/AssignEvaluator.h	/^    Traversal = int(MayLinearVectorize) && (LinearPacketSize>InnerPacketSize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon259
Traversal	Eigen/src/Core/Assign_MKL.h	/^      Traversal = MightLinearize ? LinearTraversal : DefaultTraversal$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon241
Traversal	Eigen/src/Core/Redux.h	/^    Traversal = int(MayLinearVectorize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::redux_traits::__anon571
TraversalSize	Eigen/src/Core/CoreEvaluators.h	/^    TraversalSize = Direction==int(Vertical) ? int(ArgType::RowsAtCompileTime) :  int(ArgType::ColsAtCompileTime)$/;"	e	enum:Eigen::internal::evaluator::__anon319
TraversalSize	Eigen/src/Core/VectorwiseOp.h	/^    TraversalSize = Direction==Vertical ? MatrixType::RowsAtCompileTime :  MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon432
TraversalType	Eigen/src/Core/util/Constants.h	/^enum TraversalType {$/;"	g	namespace:Eigen
Triangular2Dense	Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Dense         {};$/;"	s	namespace:Eigen::internal
Triangular2Triangular	Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Triangular    {};$/;"	s	namespace:Eigen::internal
TriangularBase	Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularBase() { eigen_assert(!((Mode&UnitDiag) && (Mode&ZeroDiag))); }$/;"	f	class:Eigen::TriangularBase
TriangularBase	Eigen/src/Core/TriangularMatrix.h	/^template<typename Derived> class TriangularBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
TriangularShape	Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	s	namespace:Eigen
TriangularView	Eigen/src/Core/TriangularMatrix.h	/^    explicit inline TriangularView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::TriangularView
TriangularView	Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularView$/;"	c	namespace:Eigen
TriangularViewImpl	Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularViewImpl<_MatrixType,_Mode,Dense>$/;"	c	namespace:Eigen
TriangularViewImpl	Eigen/src/SparseCore/SparseTriangularView.h	/^template<typename MatrixType, unsigned int Mode> class TriangularViewImpl<MatrixType,Mode,Sparse>$/;"	c	namespace:Eigen
TriangularViewReturnType	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
TriangularViewType	Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<_MatrixType, _Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TriangularViewType	Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef TriangularView<MatrixType,Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TridiagonalMatrix	Eigen/src/Core/BandMatrix.h	/^    explicit TridiagonalMatrix(Index size = Size) : Base(size,size,Options&SelfAdjoint?0:1,1) {}$/;"	f	class:Eigen::internal::TridiagonalMatrix
TridiagonalMatrix	Eigen/src/Core/BandMatrix.h	/^class TridiagonalMatrix : public BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor>$/;"	c	namespace:Eigen::internal
Tridiagonalization	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename _MatrixType> class Tridiagonalization$/;"	c	namespace:Eigen
TridiagonalizationMatrixTReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    TridiagonalizationMatrixTReturnType(const MatrixType& mat) : m_matrix(mat) { }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
TridiagonalizationMatrixTReturnType	Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename MatrixType> struct TridiagonalizationMatrixTReturnType$/;"	s	namespace:Eigen::internal
TridiagonalizationType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Tridiagonalization<MatrixType> TridiagonalizationType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Triplet	Eigen/src/SparseCore/SparseUtil.h	/^  Triplet() : m_row(0), m_col(0), m_value(0) {}$/;"	f	class:Eigen::Triplet
Triplet	Eigen/src/SparseCore/SparseUtil.h	/^  Triplet(const StorageIndex& i, const StorageIndex& j, const Scalar& v = Scalar(0))$/;"	f	class:Eigen::Triplet
Triplet	Eigen/src/SparseCore/SparseUtil.h	/^class Triplet$/;"	c	namespace:Eigen
Type	Eigen/src/Core/BandMatrix.h	/^                 BuildType>::type Type;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstDiagonalIndexReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::DiagonalIndexReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstTriangularViewReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::TriangularViewReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstSelfAdjointViewReturnType
Type	Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::SelfAdjointViewReturnType
Type	Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReduxReturnType
Type	Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReturnType
Type	Eigen/src/Core/VectorwiseOp.h	/^                        isHorizontal ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::ExtendedType
Type	Eigen/src/Core/VectorwiseOp.h	/^                        isVertical   ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::OppositeExtendedType
Type	Eigen/src/Core/VectorwiseOp.h	/^      typedef PartialReduxExpr<ExpressionType, internal::member_lpnorm<p,RealScalar>,Direction> Type;$/;"	t	struct:Eigen::VectorwiseOp::LpNormReturnType
Type	Eigen/src/Core/util/Constants.h	/^  enum Type {$/;"	g	namespace:Eigen::Architecture
Type	Eigen/src/Householder/HouseholderSequence.h	/^                 0, MatrixType::MaxRowsAtCompileTime, MatrixType::MaxColsAtCompileTime> Type;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
Type	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    typedef ActualMatrixType Type;$/;"	t	struct:Eigen::internal::generic_matrix_wrapper::ConstSelfAdjointViewReturnType
Type	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    typedef typename ActualMatrixType::template ConstSelfAdjointViewReturnType<UpLo>::Type Type;$/;"	t	struct:Eigen::internal::generic_matrix_wrapper::ConstSelfAdjointViewReturnType
Type	Eigen/src/SparseCore/SparseMatrixBase.h	/^                          > Type;$/;"	t	struct:Eigen::SparseMatrixBase::CwiseProductDenseReturnType
Type	Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::ConstSelfAdjointViewReturnType
Type	Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::SelfAdjointViewReturnType
Type	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:ConstNColsBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:ConstNRowsBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:NColsBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:NRowsBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct ConstFixedBlockXpr { typedef Block<const Derived,Rows,Cols> Type; };$/;"	t	struct:ConstFixedBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct FixedBlockXpr { typedef Block<Derived,Rows,Cols> Type; };$/;"	t	struct:FixedBlockXpr
Type	Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	t	struct:ConstFixedSegmentReturnType
Type	Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	t	struct:FixedSegmentReturnType
Type	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	t	struct:CastXpr
U	mcmc/mala.hpp	/^    UniformDistribution U;$/;"	m	class:MALA_Sampler
U	mcmc/pcn.hpp	/^    UniformDistribution U;$/;"	m	class:PCN_Sampler
U	mcmc/phmc.hpp	/^    UniformDistribution U;$/;"	m	class:PHMC_Sampler
U	methods/stabilized_methods.hpp	/^    Real *T,*U;$/;"	m	class:RKC
U	tools/mcmc.hpp	/^    UniformDistribution U;$/;"	m	class:MCMC_Sampler
UCOL	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
UIntPtr	Eigen/src/Core/util/Meta.h	/^typedef std::uintptr_t UIntPtr;$/;"	t	namespace:Eigen::internal
ULVL	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
UMatrixType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType,  Upper>          UMatrixType;$/;"	t	class:Eigen::SuperLU
UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC	Eigen/src/Core/util/StaticAssert.h	/^        UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
USUB	Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon119
UmfPackLU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(const UmfPackLU& ) { }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    explicit UmfPackLU(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^class UmfPackLU : public SparseSolverBase<UmfPackLU<_MatrixType> >$/;"	c	namespace:Eigen
UmfpackControl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Array<double, UMFPACK_CONTROL, 1> UmfpackControl;$/;"	t	class:Eigen::UmfPackLU
UmfpackInfo	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Array<double, UMFPACK_INFO, 1> UmfpackInfo;$/;"	t	class:Eigen::UmfPackLU
UmfpackMatrixRef	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Ref<const UmfpackMatrixType, StandardCompressedFormat> UmfpackMatrixRef;$/;"	t	class:Eigen::UmfPackLU
UmfpackMatrixType	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,int> UmfpackMatrixType;$/;"	t	class:Eigen::UmfPackLU
Unaligned	Eigen/src/Core/util/Constants.h	/^  Unaligned=0,        \/**< Data pointer has no specific alignment. *\/$/;"	e	enum:Eigen::AlignmentType
UniformDistribution	tools/random_variable.hpp	/^    UniformDistribution(Real a, Real b):generator(seed),seed(std::chrono::system_clock::now().time_since_epoch().count())$/;"	f	class:UniformDistribution
UniformDistribution	tools/random_variable.hpp	/^class UniformDistribution:public RandomVariable$/;"	c
UniformScaling	Eigen/src/Geometry/Scaling.h	/^  UniformScaling() {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	Eigen/src/Geometry/Scaling.h	/^  explicit inline UniformScaling(const Scalar& s) : m_factor(s) {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	Eigen/src/Geometry/Scaling.h	/^  inline explicit UniformScaling(const UniformScaling<OtherScalarType>& other)$/;"	f	class:Eigen::UniformScaling
UniformScaling	Eigen/src/Geometry/Scaling.h	/^class UniformScaling$/;"	c	namespace:Eigen
Unit	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index i)$/;"	f	class:Eigen::MatrixBase
Unit	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index newSize, Index i)$/;"	f	class:Eigen::MatrixBase
UnitDiag	Eigen/src/Core/util/Constants.h	/^  UnitDiag=0x4, $/;"	e	enum:Eigen::UpLoType
UnitLower	Eigen/src/Core/util/Constants.h	/^  UnitLower=UnitDiag|Lower, $/;"	e	enum:Eigen::UpLoType
UnitRandom	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC Quaternion<Scalar,Options> Quaternion<Scalar,Options>::UnitRandom()$/;"	f	class:Eigen::Quaternion
UnitUpper	Eigen/src/Core/util/Constants.h	/^  UnitUpper=UnitDiag|Upper,$/;"	e	enum:Eigen::UpLoType
UnitW	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitW()$/;"	f	class:Eigen::MatrixBase
UnitX	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitX()$/;"	f	class:Eigen::MatrixBase
UnitY	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitY()$/;"	f	class:Eigen::MatrixBase
UnitZ	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitZ()$/;"	f	class:Eigen::MatrixBase
Unroll	Eigen/src/Core/ProductEvaluators.h	/^    Unroll = CoeffReadCost <= EIGEN_UNROLLING_LIMIT,$/;"	e	enum:Eigen::internal::product_evaluator::__anon444
Unrolling	Eigen/src/Core/AssignEvaluator.h	/^    Unrolling = (int(Traversal) == int(InnerVectorizedTraversal) || int(Traversal) == int(DefaultTraversal))$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon261
Unrolling	Eigen/src/Core/Redux.h	/^    Unrolling = Cost <= UnrollingLimit ? CompleteUnrolling : NoUnrolling$/;"	e	enum:Eigen::internal::redux_traits::__anon573
Unrolling	Eigen/src/Core/SolveTriangular.h	/^      Unrolling   = (RhsIsVectorAtCompileTime && Rhs::SizeAtCompileTime != Dynamic && Rhs::SizeAtCompileTime <= 8)$/;"	e	enum:Eigen::internal::trsolve_traits::__anon229
UnrollingLimit	Eigen/src/Core/AssignEvaluator.h	/^    UnrollingLimit      = EIGEN_UNROLLING_LIMIT * ActualPacketSize,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon260
UnrollingLimit	Eigen/src/Core/Redux.h	/^    UnrollingLimit = EIGEN_UNROLLING_LIMIT * (int(Traversal) == int(DefaultTraversal) ? 1 : int(PacketSize))$/;"	e	enum:Eigen::internal::redux_traits::__anon572
UnrollingType	Eigen/src/Core/util/Constants.h	/^enum UnrollingType {$/;"	g	namespace:Eigen
Unusable	Eigen/src/Core/ReturnByValue.h	/^      Unusable(const Unusable&) {}$/;"	f	class:Eigen::ReturnByValue::Unusable
Unusable	Eigen/src/Core/ReturnByValue.h	/^    class Unusable{$/;"	c	class:Eigen::ReturnByValue
Unusable	Eigen/src/Core/ReturnByValue.h	67;"	d
Unusable	Eigen/src/Core/ReturnByValue.h	76;"	d
UpLo	Eigen/src/Cholesky/LDLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LDLT::__anon667
UpLo	Eigen/src/Cholesky/LLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LLT::__anon666
UpLo	Eigen/src/CholmodSupport/CholmodSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::CholmodBase::__anon127
UpLo	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^    UpLo = _UpLo$/;"	e	enum:Eigen::ConjugateGradient::__anon655
UpLo	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::IncompleteCholesky::__anon662
UpLo	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLDLT::__anon78
UpLo	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLLT::__anon77
UpLo	Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = Options&(Upper|Lower) };$/;"	e	enum:Eigen::PardisoLDLT::__anon117
UpLo	Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PardisoLLT::__anon116
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialCholesky::__anon72
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLDLT::__anon71
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLLT::__anon70
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = internal::traits<Derived>::UpLo };$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon65
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon67
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon68
UpLo	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon69
UpLoType	Eigen/src/Core/util/Constants.h	/^enum UpLoType {$/;"	g	namespace:Eigen
Upper	Eigen/src/Core/util/Constants.h	/^  Upper=0x2,                      $/;"	e	enum:Eigen::UpLoType
UpperBidiagonalization	Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization() : m_householder(), m_bidiagonal(), m_isInitialized(false) {}$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	Eigen/src/SVD/UpperBidiagonalization.h	/^    explicit UpperBidiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	Eigen/src/SVD/UpperBidiagonalization.h	/^template<typename _MatrixType> class UpperBidiagonalization$/;"	c	namespace:Eigen::internal
VSX	Eigen/src/Core/util/Constants.h	/^    VSX = 0x3,$/;"	e	enum:Eigen::Architecture::Type
Vector	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::DiagonalPreconditioner
Vector	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLUT
Vector	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::PastixBase
Vector	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::SuperLUBase
Vector	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::UmfPackLU
Vector2	Eigen/src/Geometry/OrthoMethods.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Vector2	Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2s	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,1> Vector2s;$/;"	t	class:Eigen::RealQZ
Vector3	Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::QuaternionBase
Vector3s	Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealQZ
Vector3s	Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealSchur
VectorBlock	Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start)$/;"	f	class:Eigen::VectorBlock
VectorBlock	Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start, Index size)$/;"	f	class:Eigen::VectorBlock
VectorBlock	Eigen/src/Core/VectorBlock.h	/^template<typename VectorType, int Size> class VectorBlock$/;"	c	namespace:Eigen
VectorI	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::IncompleteLUT
VectorI	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorI	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSelfAdjointView
VectorI	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
VectorIx	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic, 1> VectorIx;$/;"	t	class:Eigen::IncompleteCholesky
VectorList	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef std::vector<std::list<StorageIndex> > VectorList; $/;"	t	class:Eigen::IncompleteCholesky
VectorMapper	Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasVectorMapper<Scalar, Index> VectorMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
VectorRx	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<RealScalar,Dynamic,1> VectorRx;$/;"	t	class:Eigen::IncompleteCholesky
VectorSx	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorSx;$/;"	t	class:Eigen::IncompleteCholesky
VectorType	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
VectorType	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, 1, Size, Options | RowMajor, 1, MaxSize> VectorType;$/;"	t	class:Eigen::HessenbergDecomposition
VectorType	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::RealVectorType VectorType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
VectorType	Eigen/src/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1>  VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	Eigen/src/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename plain_matrix_type<Derived>::type VectorType;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
VectorType	Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1,Options> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::RotationBase
VectorType	Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::PardisoImpl
VectorType	Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, 1> VectorType;$/;"	t	class:Eigen::BDCSVD
VectorType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholesky
VectorType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLDLT
VectorType	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLLT
VectorTypeSum	Eigen/src/Geometry/AlignedBox.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<Scalar>, const VectorType, const VectorType> VectorTypeSum;$/;"	t	class:Eigen::AlignedBox
Vectorizable	Eigen/src/Core/GenericPacketMath.h	/^    Vectorizable = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon583
Vectorizable	Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
Vectorizable	Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
Vectorizable	Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
Vectorizable	Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
Vectorizable	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
Vectorizable	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
Vectorizable	Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
Vectorizable	Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
Vectorizable	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
Vectorizable	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
Vectorizable	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
Vectorizable	Eigen/src/Core/arch/CUDA/Complex.h	/^    Vectorizable = packet_traits<std::complex<T>>::HasDiv$/;"	e	enum:Eigen::internal::scalar_quotient_op::__anon565
Vectorizable	Eigen/src/Core/arch/CUDA/Complex.h	/^    Vectorizable = packet_traits<std::complex<T>>::HasMul$/;"	e	enum:Eigen::internal::scalar_product_op::__anon564
Vectorizable	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
Vectorizable	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
Vectorizable	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
Vectorizable	Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
Vectorizable	Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
Vectorizable	Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
Vectorizable	Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon503
Vectorizable	Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
Vectorizable	Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
Vectorizable	Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
Vectorizable	Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
Vectorizable	Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
Vectorizable	Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon534
Vectorizable	Eigen/src/Core/arch/ZVector/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
Vectorizable	Eigen/src/Core/arch/ZVector/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
Vectorizable	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
Vectorizable	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
Vectorizable	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
Vectorizable	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable  = Traits::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon294
Vectorizable	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
Vectorizable	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
Vectorizable	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
Vectorizable	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
Vectorizable	Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon281
Vectorizable	Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon282
Vectorized	Eigen/src/Core/AssignEvaluator.h	/^    Vectorized = int(Traversal) == InnerVectorizedTraversal$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon259
VectorizedCast	Eigen/src/Core/GenericPacketMath.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon585
VectorizedCast	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon478
VectorizedCast	Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon479
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon547
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon548
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon549
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon550
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon551
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon552
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon553
VectorizedCast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon554
VectorizedCast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon525
VectorizedCast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon526
VectorizedCast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon527
VectorizedCast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon528
VectorizedSize	Eigen/src/Core/Redux.h	/^    VectorizedSize = (Size \/ PacketSize) * PacketSize$/;"	e	enum:Eigen::internal::redux_impl::__anon578
VectorwiseOp	Eigen/src/Core/VectorwiseOp.h	/^    explicit inline VectorwiseOp(ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::VectorwiseOp
VectorwiseOp	Eigen/src/Core/VectorwiseOp.h	/^template<typename ExpressionType, int Direction> class VectorwiseOp$/;"	c	namespace:Eigen
Vertical	Eigen/src/Core/util/Constants.h	/^  Vertical, $/;"	e	enum:Eigen::DirectionType
VmlSize	Eigen/src/Core/Assign_MKL.h	/^      VmlSize = MightLinearize ? MaxSizeAtCompileTime : InnerMaxSize,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon240
WORK	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	108;"	d
WORK	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	149;"	d
WORK	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	206;"	d
WORK	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	246;"	d
WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED	Eigen/src/Core/util/StaticAssert.h	/^        WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
WithFormat	Eigen/src/Core/IO.h	/^    WithFormat(const ExpressionType& matrix, const IOFormat& format)$/;"	f	class:Eigen::WithFormat
WithFormat	Eigen/src/Core/IO.h	/^class WithFormat$/;"	c	namespace:Eigen
WorkMatrixType	Eigen/src/SVD/JacobiSVD.h	/^            WorkMatrixType;$/;"	t	class:Eigen::JacobiSVD
WorkVectorType	Eigen/src/QR/FullPivHouseholderQR.h	/^                 MatrixType::MaxRowsAtCompileTime> WorkVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
WorkingRows	Eigen/src/Geometry/Transform.h	/^    WorkingRows = EIGEN_PLAIN_ENUM_MIN(TransformMatrix::RowsAtCompileTime,HDim)$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon93
WorkspaceType	Eigen/src/SVD/JacobiSVD.h	/^  typedef Matrix<Scalar, 1, RowsAtCompileTime, RowMajor, 1, MaxRowsAtCompileTime> WorkspaceType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
WriteAccessors	Eigen/src/Core/util/Constants.h	/^  WriteAccessors, $/;"	e	enum:Eigen::AccessorLevels
X	build/plot_2d_solution.py	/^    X = []$/;"	v
X	build/plot_2d_solution.py	/^    X = np.arange(0, 1, 1.0\/30)$/;"	v
X0	models/models.hpp	/^    Real A0,B0,X0;$/;"	m	class:PeroxideOxideEquation
Xpr	Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar,typename Rhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
Xpr	Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar,typename Rhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
XprBase	Eigen/src/Core/Array.h	/^  typedef ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > XprBase;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Array.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/ArrayWrapper.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/ArrayWrapper.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename traits<DiagonalVectorType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Matrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Product.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/LU/FullPivLU.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/LU/PartialPivLU.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	Eigen/src/SparseCore/SparseVector.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef ArrayWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::block_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseNullaryOp<NullaryOp,PlainObjectType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> XprType;$/;"	t	struct:Eigen::internal::ternary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryView<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Derived  XprType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Diagonal<ArgType, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef EvalToTemp<ArgType>                   XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Map<PlainObjectType, MapOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef MatrixWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef PartialReduxExpr<ArgType, MemberOp, Direction> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Ref<PlainObjectType, RefOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Replicate<ArgType, RowFactor, ColFactor> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Reverse<ArgType, Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/CoreEvaluators.h	/^  typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^                               const Product<Lhs, Rhs, DefaultProduct> > XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, ProductKind> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/Core/Redux.h	/^  typedef _XprType XprType;$/;"	t	class:Eigen::internal::redux_evaluator
XprType	Eigen/src/Core/ReturnByValue.h	/^  typedef ReturnByValue<Derived> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/Core/TriangularMatrix.h	/^  typedef TriangularView<MatrixType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseBinaryOp<scalar_product_op<Scalar>, NestedXpr, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain> > XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef MappedSparseMatrix<_Scalar,_Options,_StorageIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<ArgType,BlockRows,BlockCols,InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_quotient_op<T1,T2>, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryView<ViewOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparsePermutation.h	/^  typedef Product<Lhs, Rhs, AliasFreeProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/SparseProduct.h	/^  typedef SparseView<Product<Lhs, Rhs, Options> > XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<Lhs, RhsView, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<LhsView, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	Eigen/src/SparseCore/SparseTranspose.h	/^    typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef TriangularView<ArgType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	Eigen/src/SparseCore/SparseView.h	/^    typedef SparseView<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprTypeIsRowMajor	Eigen/src/Core/Block.h	/^      XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0$/;"	e	enum:Eigen::internal::BlockImpl_dense::__anon246
XprTypeIsRowMajor	Eigen/src/Core/Block.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon245
XprTypeNested	Eigen/src/Core/Block.h	/^    typedef typename internal::ref_selector<XprType>::non_const_type XprTypeNested;$/;"	t	class:Eigen::internal::BlockImpl_dense
XprTypeNested	Eigen/src/Core/Block.h	/^  typedef typename ref_selector<XprType>::type XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::ref_selector<XprType>::type XprTypeNested;$/;"	t	class:Eigen::CwiseUnaryOp
XprTypeNested	Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	Eigen/src/Core/Inverse.h	/^  typedef typename internal::ref_selector<XprType>::type      XprTypeNested;$/;"	t	class:Eigen::Inverse
XprTypeNestedCleaned	Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprTypeNested>::type  XprTypeNestedCleaned;$/;"	t	class:Eigen::Inverse
Y	build/plot_2d_solution.py	/^    Y = []$/;"	v
Y	build/plot_2d_solution.py	/^    Y = np.arange(0, 1, 1.0\/200)$/;"	v
YOU_ALREADY_SPECIFIED_THIS_STRIDE	Eigen/src/Core/util/StaticAssert.h	/^        YOU_ALREADY_SPECIFIED_THIS_STRIDE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT	Eigen/src/Core/util/StaticAssert.h	/^        YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR	Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR	Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_CANNOT_MIX_ARRAYS_AND_MATRICES	Eigen/src/Core/util/StaticAssert.h	/^        YOU_CANNOT_MIX_ARRAYS_AND_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_MADE_A_PROGRAMMING_MISTAKE	Eigen/src/Core/util/StaticAssert.h	/^        YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY	Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES	Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES	Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED	Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED	Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION	Eigen/src/Core/util/StaticAssert.h	/^        YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX	Eigen/src/Core/util/StaticAssert.h	/^        YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon132
Z	build/plot_2d_solution.py	/^    Z = []$/;"	v
Zero	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero()$/;"	f	class:Eigen::DenseBase
Zero	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Zero	Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index size)$/;"	f	class:Eigen::DenseBase
ZeroDiag	Eigen/src/Core/util/Constants.h	/^  ZeroDiag=0x8,$/;"	e	enum:Eigen::UpLoType
ZeroSign	Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
_Arg1Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg1Nested>::type _Arg1Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg1Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg1Nested>::type _Arg1Nested;$/;"	t	struct:Eigen::internal::traits
_Arg2Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg2Nested>::type _Arg2Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg2Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg2Nested>::type _Arg2Nested;$/;"	t	struct:Eigen::internal::traits
_Arg3Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg3Nested>::type _Arg3Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg3Nested	Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg3Nested>::type _Arg3Nested;$/;"	t	struct:Eigen::internal::traits
_EIGEN_ACCUMULATE_PACKETS	Eigen/src/Core/products/GeneralMatrixVector.h	100;"	d
_EIGEN_ACCUMULATE_PACKETS	Eigen/src/Core/products/GeneralMatrixVector.h	321;"	d
_EIGEN_ACCUMULATE_PACKETS	Eigen/src/Core/products/GeneralMatrixVector.h	377;"	d
_EIGEN_ACCUMULATE_PACKETS	Eigen/src/Core/products/GeneralMatrixVector.h	612;"	d
_EIGEN_ALIGNED_PTR	Eigen/src/Core/arch/AltiVec/PacketMath.h	93;"	d
_EIGEN_ALIGNED_PTR	Eigen/src/Core/arch/ZVector/PacketMath.h	103;"	d
_EIGEN_DECLARE_CONST_FAST_Packet2d	Eigen/src/Core/arch/ZVector/PacketMath.h	67;"	d
_EIGEN_DECLARE_CONST_FAST_Packet2l	Eigen/src/Core/arch/ZVector/PacketMath.h	70;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	Eigen/src/Core/arch/AltiVec/PacketMath.h	44;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	Eigen/src/Core/arch/AltiVec/PacketMath.h	47;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	Eigen/src/Core/arch/ZVector/PacketMath.h	64;"	d
_EIGEN_DECLARE_CONST_Packet16f	Eigen/src/Core/arch/AVX512/MathFunctions.h	20;"	d
_EIGEN_DECLARE_CONST_Packet16f_FROM_INT	Eigen/src/Core/arch/AVX512/MathFunctions.h	23;"	d
_EIGEN_DECLARE_CONST_Packet2d	Eigen/src/Core/arch/AltiVec/PacketMath.h	56;"	d
_EIGEN_DECLARE_CONST_Packet2d	Eigen/src/Core/arch/SSE/PacketMath.h	82;"	d
_EIGEN_DECLARE_CONST_Packet2d	Eigen/src/Core/arch/ZVector/PacketMath.h	76;"	d
_EIGEN_DECLARE_CONST_Packet2l	Eigen/src/Core/arch/AltiVec/PacketMath.h	59;"	d
_EIGEN_DECLARE_CONST_Packet2l	Eigen/src/Core/arch/ZVector/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_Packet4d	Eigen/src/Core/arch/AVX/PacketMath.h	42;"	d
_EIGEN_DECLARE_CONST_Packet4f	Eigen/src/Core/arch/AltiVec/PacketMath.h	50;"	d
_EIGEN_DECLARE_CONST_Packet4f	Eigen/src/Core/arch/NEON/PacketMath.h	45;"	d
_EIGEN_DECLARE_CONST_Packet4f	Eigen/src/Core/arch/SSE/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	Eigen/src/Core/arch/AltiVec/PacketMath.h	62;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	Eigen/src/Core/arch/NEON/PacketMath.h	48;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	Eigen/src/Core/arch/SSE/PacketMath.h	85;"	d
_EIGEN_DECLARE_CONST_Packet4i	Eigen/src/Core/arch/AltiVec/PacketMath.h	53;"	d
_EIGEN_DECLARE_CONST_Packet4i	Eigen/src/Core/arch/NEON/PacketMath.h	51;"	d
_EIGEN_DECLARE_CONST_Packet4i	Eigen/src/Core/arch/SSE/PacketMath.h	88;"	d
_EIGEN_DECLARE_CONST_Packet4i	Eigen/src/Core/arch/ZVector/PacketMath.h	73;"	d
_EIGEN_DECLARE_CONST_Packet8d	Eigen/src/Core/arch/AVX512/MathFunctions.h	26;"	d
_EIGEN_DECLARE_CONST_Packet8d_FROM_INT64	Eigen/src/Core/arch/AVX512/MathFunctions.h	29;"	d
_EIGEN_DECLARE_CONST_Packet8f	Eigen/src/Core/arch/AVX/PacketMath.h	39;"	d
_EIGEN_DECLARE_CONST_Packet8f_FROM_INT	Eigen/src/Core/arch/AVX/PacketMath.h	45;"	d
_EIGEN_DECLARE_CONST_Packet8i	Eigen/src/Core/arch/AVX/PacketMath.h	48;"	d
_EIGEN_MASK_ALIGNMENT	Eigen/src/Core/arch/AltiVec/PacketMath.h	88;"	d
_EIGEN_MASK_ALIGNMENT	Eigen/src/Core/arch/AltiVec/PacketMath.h	90;"	d
_EIGEN_MASK_ALIGNMENT	Eigen/src/Core/arch/ZVector/PacketMath.h	101;"	d
_ExtractType	Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType> _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_ExtractType	Eigen/src/Core/util/BlasUtil.h	/^  typedef XprType _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_HasDirectAccess	Eigen/src/SparseCore/SparseMatrixBase.h	/^      _HasDirectAccess = (int(Flags)&DirectAccessBit) ? 1 : 0 \/\/ workaround sunCC$/;"	e	enum:Eigen::SparseMatrixBase::__anon9
_LAPACKE_H_	Eigen/src/misc/lapacke.h	37;"	d
_Lhs	Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::product_type
_LhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_LhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_LhsPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_LinearAccessMask	Eigen/src/Core/ProductEvaluators.h	/^    _LinearAccessMask = (MatrixType::RowsAtCompileTime==1 || MatrixType::ColsAtCompileTime==1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
_MatrixType	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename internal::pastix_traits<Derived>::MatrixType _MatrixType;$/;"	t	class:Eigen::PastixBase
_MatrixTypeNested	Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/Core/Diagonal.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::Replicate
_MatrixTypeNested	Eigen/src/Core/Replicate.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/Core/Reverse.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename SparseMatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
_MatrixTypeNested	Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename XprType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
_MatrixTypeNested	Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseView
_Options	Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Options = ((Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::sparse_eval::__anon23
_Options	Eigen/src/SparseCore/SparseUtil.h	/^  enum { _Options = ((evaluator<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::plain_matrix_type::__anon24
_ResPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
_ResPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_Rhs	Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::product_type
_RhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_RhsNested	Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsPacket	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_RhsPacket	Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_SameTypes	Eigen/src/Core/ProductEvaluators.h	/^    _SameTypes = is_same<typename MatrixType::Scalar, typename DiagonalType::Scalar>::value,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
_Scalar	Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::sparse_eval
_Scalar	Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::plain_matrix_type
_ScalarAccessOnDiag	Eigen/src/Core/ProductEvaluators.h	/^    _ScalarAccessOnDiag =  !((int(_StorageOrder) == ColMajor && int(ProductOrder) == OnTheLeft)$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
_StorageIndex	Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::sparse_eval
_StorageIndex	Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::plain_matrix_type
_StorageOrder	Eigen/src/Core/ProductEvaluators.h	/^    _StorageOrder = MatrixFlags & RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
_Vectorizable	Eigen/src/Core/ProductEvaluators.h	/^    _Vectorizable = bool(int(MatrixFlags)&PacketAccessBit) && _SameTypes && (_ScalarAccessOnDiag || (bool(int(DiagFlags)&PacketAccessBit))),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon446
_XprTypeNested	Eigen/src/Core/Block.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
__DBL_EPSILON__	Eigen/src/Core/util/Meta.h	170;"	d
__FLT_EPSILON__	Eigen/src/Core/util/Meta.h	169;"	d
__half	Eigen/src/Core/arch/CUDA/Half.h	/^    typedef half_impl::__half __half;$/;"	t	struct:Eigen::half
__half	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC __half() {}$/;"	f	struct:Eigen::half_impl::__half
__half	Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC __half(unsigned short raw) : x(raw) {}$/;"	f	struct:Eigen::half_impl::__half
__half	Eigen/src/Core/arch/CUDA/Half.h	/^struct __half {$/;"	s	namespace:Eigen::half_impl
__has_feature	Eigen/src/Core/util/Macros.h	349;"	d
__ldg	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half __ldg(const Eigen::half* ptr) {$/;"	f
__shfl_xor	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ EIGEN_STRONG_INLINE Eigen::half __shfl_xor(Eigen::half var, int laneMask, int width=warpSize) {$/;"	f
_assignProduct	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^TriangularView<MatrixType,UpLo>& TriangularViewImpl<MatrixType,UpLo,Dense>::_assignProduct(const ProductType& prod, const Scalar& alpha, bool beta)$/;"	f	class:Eigen::TriangularViewImpl
_check_template_params	Eigen/src/Core/PlainObjectBase.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::PlainObjectBase
_check_template_params	Eigen/src/Geometry/Quaternion.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::Quaternion
_compute	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^void HessenbergDecomposition<MatrixType>::_compute(MatrixType& matA, CoeffVectorType& hCoeffs, VectorType& temp)$/;"	f	class:Eigen::HessenbergDecomposition
_data	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Storage& _data() { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED const Storage& _data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
_expression	Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& _expression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
_expression	Eigen/src/Core/VectorwiseOp.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::VectorwiseOp
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(Index size, typename internal::enable_if<    (Base::SizeAtCompileTime!=1 || !internal::is_convertible<T, Scalar>::value)$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const DenseBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Derived& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const EigenBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Index& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0, typename internal::enable_if<Base::SizeAtCompileTime==1 && internal::is_convertible<T, Scalar>::value,T>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar* data){$/;"	f	class:Eigen::PlainObjectBase
_init2	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(Index rows, Index cols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init2	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Index& val0, const Index& val1,$/;"	f	class:Eigen::PlainObjectBase
_init2	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const T0& val0, const T1& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_resize_to_match	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_noalias	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_solve_impl	Eigen/src/Cholesky/LDLT.h	/^void LDLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LDLT
_solve_impl	Eigen/src/Cholesky/LLT.h	/^void LLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LLT
_solve_impl	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const SparseMatrixBase<RhsDerived> &b, SparseMatrixBase<DestDerived> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DiagonalPreconditioner
_solve_impl	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_impl	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_impl	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteCholesky
_solve_impl	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLUT
_solve_impl	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void _solve_impl(const Rhs& b, SparseMatrixBase<DestDerived> &aDest) const$/;"	f	class:Eigen::IterativeSolverBase
_solve_impl	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_solve_impl	Eigen/src/LU/FullPivLU.h	/^void FullPivLU<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivLU
_solve_impl	Eigen/src/LU/PartialPivLU.h	/^    void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::PartialPivLU
_solve_impl	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^bool PastixBase<Base>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::PastixBase
_solve_impl	Eigen/src/PardisoSupport/PardisoSupport.h	/^void PardisoImpl<Derived>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived>& x) const$/;"	f	class:Eigen::PardisoImpl
_solve_impl	Eigen/src/QR/ColPivHouseholderQR.h	/^void ColPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::ColPivHouseholderQR
_solve_impl	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<_MatrixType>::_solve_impl($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
_solve_impl	Eigen/src/QR/FullPivHouseholderQR.h	/^void FullPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivHouseholderQR
_solve_impl	Eigen/src/QR/HouseholderQR.h	/^void HouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::HouseholderQR
_solve_impl	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SPQR
_solve_impl	Eigen/src/SVD/SVDBase.h	/^void SVDBase<Derived>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::SVDBase
_solve_impl	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	Eigen/src/SparseCore/SparseSolverBase.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseSolverBase
_solve_impl	Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	Eigen/src/SparseLU/SparseLU.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &X_base) const$/;"	f	class:Eigen::SparseLU
_solve_impl	Eigen/src/SparseQR/SparseQR.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseQR
_solve_impl	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperILU
_solve_impl	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperLU
_solve_impl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^bool UmfPackLU<MatrixType>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::UmfPackLU
_solve_impl_transposed	Eigen/src/LU/FullPivLU.h	/^void FullPivLU<_MatrixType>::_solve_impl_transposed(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivLU
_solve_impl_transposed	Eigen/src/LU/PartialPivLU.h	/^    void _solve_impl_transposed(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::PartialPivLU
_solve_with_guess_impl	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_with_guess_impl	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_with_guess_impl	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_sort_matrix_Q	Eigen/src/SparseQR/SparseQR.h	/^    inline void _sort_matrix_Q()$/;"	f	class:Eigen::SparseQR
_transformVector	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::_transformVector(const Vector3& v) const$/;"	f	class:Eigen::QuaternionBase
_transformVector	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline VectorType _transformVector(const OtherVectorType& v) const$/;"	f	class:Eigen::RotationBase
a	Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	m	struct:Eigen::internal::is_convertible_impl::no
a	Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	m	struct:Eigen::internal::is_convertible_impl::yes
a	Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	m	struct:Eigen::internal::has_none
a	Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	m	struct:Eigen::internal::has_std_result_type
a	Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	m	struct:Eigen::internal::has_tr1_result
a	Eigen/src/Core/util/Meta.h	/^struct meta_no  { char a[2]; };$/;"	m	struct:Eigen::internal::meta_no
a	Eigen/src/Core/util/Meta.h	/^struct meta_yes { char a[1]; };$/;"	m	struct:Eigen::internal::meta_yes
a	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct no  {int a[2];};$/;"	m	struct:Eigen::internal::is_ref_compatible_impl::no
a	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct yes {int a[1];};$/;"	m	struct:Eigen::internal::is_ref_compatible_impl::yes
a	Eigen/src/SVD/JacobiSVD.h	/^  enum { a = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon623
a	build/plot_data_series.py	/^a= [ 0.136130,0.140278,0.145804,0.153292,0.157915,0.167587,0.187003,0.204764,0.230953,0.247380,0.268636,0.283572,0.298070,0.311393,0.321049,0.322078,0.327799,0.329815,0.332097,0.334441,0.335501,0.339485,0.343030,0.345939,0.346627,0.348310,0.351073,0.352415,0.353549,0.353252,0.354323,0.355418,0.354697,0.356839,0.360083,0.360102,0.360985,0.362219,0.362673,0.362386,0.361938,0.361652,0.363207,0.362356,0.362447,0.363480,0.363931,0.364475,0.365628,0.366431,0.367542,0.367707,0.368139,0.367824,0.367833,0.369821,0.370209,0.369909,0.370240,0.370483,0.369688,0.370152,0.371042,0.371243,0.371525,0.372309,0.371969,0.371324,0.371899,0.372360,0.372253,0.372174,0.372152,0.372475,0.372400,0.372783,0.372435,0.372647,0.373070,0.372983,0.372872,0.372982,0.373678,0.374570,0.375215,0.375242,0.375403,0.375501,0.375665,0.376013,0.376598,0.376701,0.376566,0.376009,0.376938,0.377414,0.377844,0.377779,0.377692,0.377775,0.377973,0.377655,0.377647,0.377551,0.377676,0.377957,0.378662,0.378968,0.378749,0.378843,0.379072,0.378901,0.379008,0.379094,0.378912,0.379244,0.379158,0.379306,0.379196,0.379364,0.379179,0.379286,0.379255,0.378966,0.379145,0.379703,0.379805,0.379728,0.379426,0.379495,0.379320,0.379214,0.379458,0.379789,0.379738,0.379122,0.379469,0.379768,0.379991,0.380038,0.380142,0.379955,0.379439,0.379491,0.379448,0.379892,0.379939,0.380226,0.380274,0.380447,0.380600,0.380742,0.381075,0.381214,0.381340,0.381411,0.381479 ]$/;"	v
a	models/models.hpp	/^    Real a,b,c;$/;"	m	class:FitzHughNagumo
a	models/models.hpp	/^    Real a,b;$/;"	m	class:Brusselator
a	smc/smc.hpp	/^    Real a;$/;"	m	class:PF_SMC
a	smc/smc.hpp	/^    Real a;$/;"	m	class:Stuart_SMC
a	tools/random_variable.hpp	/^    Real a,b;$/;"	m	class:UniformDistribution
abs	Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  abs(double x) { return cl::sycl::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   abs(float x) { return cl::sycl::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^abs(const T &x) {$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^double      abs(double      x) { return (fabs(x));  }$/;"	f	namespace:Eigen
abs	Eigen/src/Core/MathFunctions.h	/^double abs(const double &x) { return ::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^double abs(const std::complex<double>& x) {$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^float       abs(float       x) { return (fabsf(x)); }$/;"	f	namespace:Eigen
abs	Eigen/src/Core/MathFunctions.h	/^float abs(const float &x) { return ::fabsf(x); }$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^float abs(const std::complex<float>& x) {$/;"	f	namespace:Eigen::numext
abs	Eigen/src/Core/MathFunctions.h	/^long        abs(long        x) { return (labs(x));  }$/;"	f	namespace:Eigen
abs	Eigen/src/Core/MathFunctions.h	/^long double abs(long double x) { return (fabsl(x)); }$/;"	f	namespace:Eigen
abs	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half abs(const half& a) {$/;"	f	namespace:Eigen::half_impl
abs	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs() const$/;"	f
abs2	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)$/;"	f	namespace:Eigen::numext
abs2	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs2() const$/;"	f
abs2_impl	Eigen/src/Core/MathFunctions.h	/^struct abs2_impl$/;"	s	namespace:Eigen::internal
abs2_impl_default	Eigen/src/Core/MathFunctions.h	/^struct abs2_impl_default$/;"	s	namespace:Eigen::internal
abs2_impl_default	Eigen/src/Core/MathFunctions.h	/^struct abs2_impl_default<Scalar, true> \/\/ IsComplex$/;"	s	namespace:Eigen::internal
abs2_retval	Eigen/src/Core/MathFunctions.h	/^struct abs2_retval$/;"	s	namespace:Eigen::internal
absDeterminant	Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
absDeterminant	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::absDeterminant() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
absDeterminant	Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
absDeterminant	Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::HouseholderQR
absDeterminant	Eigen/src/SparseLU/SparseLU.h	/^    Scalar absDeterminant()$/;"	f	class:Eigen::SparseLU
absDiagIndex	Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
absDistance	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar absDistance(const VectorType& p) const { return numext::abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
abs_knowing_score	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar, typename=void> struct abs_knowing_score$/;"	s	namespace:Eigen::internal
abs_knowing_score	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct abs_knowing_score<Scalar, typename scalar_score_coeff_op<Scalar>::Score_is_abs>$/;"	s	namespace:Eigen::internal
acc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const DoublePacketType& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const ResPacketHalf& c, const ResPacketHalf& alpha, ResPacketHalf& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const Scalar& c, const Scalar& alpha, Scalar& r) const { r += alpha * c; }$/;"	f	class:Eigen::internal::gebp_traits
accessors_level	Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct accessors_level$/;"	s	namespace:Eigen::internal
acos	Eigen/src/Core/MathFunctions.h	/^T acos(const T &x) {$/;"	f	namespace:Eigen::numext
acos	Eigen/src/Core/MathFunctions.h	/^double acos(const double &x) { return ::acos(x); }$/;"	f	namespace:Eigen::numext
acos	Eigen/src/Core/MathFunctions.h	/^float acos(const float &x) { return ::acosf(x); }$/;"	f	namespace:Eigen::numext
acos	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^acos() const$/;"	f
actual_alignment	Eigen/src/Core/Matrix.h	/^      actual_alignment = ((_Options&DontAlign)==0) ? default_alignment : 0,$/;"	e	enum:Eigen::internal::traits::__anon450
add	Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
addTo	Eigen/src/Core/EigenBase.h	/^  inline void addTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
addTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
addTo	Eigen/src/Core/ProductEvaluators.h	/^  static inline void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	Eigen/src/SparseCore/SparseProduct.h	/^  static void addTo(Dest& dst, const ActualLhs& lhs, const Rhs& rhs, typename enable_if<is_same<typename evaluator_traits<Dest>::Shape,DenseShape>::value,int*>::type* = 0)$/;"	f	struct:Eigen::internal::generic_product_impl
add_assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct add_assign_op {$/;"	s	namespace:Eigen::internal
add_const	Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	s	namespace:Eigen::internal
add_const	Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type_if_arithmetic	Eigen/src/Core/DenseCoeffsBase.h	/^template<typename T> struct add_const_on_value_type_if_arithmetic$/;"	s	namespace:Eigen::internal
adds	Eigen/src/Core/ProductEvaluators.h	/^    explicit adds(const Scalar& s) : m_scale(s) {}$/;"	f	struct:Eigen::internal::generic_product_impl::adds
adds	Eigen/src/Core/ProductEvaluators.h	/^  struct adds {$/;"	s	struct:Eigen::internal::generic_product_impl
adjoint	Eigen/src/Cholesky/LDLT.h	/^    const LDLT& adjoint() const { return *this; };$/;"	f	class:Eigen::LDLT
adjoint	Eigen/src/Cholesky/LLT.h	/^    const LLT& adjoint() const { return *this; };$/;"	f	class:Eigen::LLT
adjoint	Eigen/src/Core/SelfAdjointView.h	/^    inline const AdjointReturnType adjoint() const$/;"	f	class:Eigen::SelfAdjointView
adjoint	Eigen/src/Core/SolverBase.h	/^    inline AdjointReturnType adjoint() const$/;"	f	class:Eigen::SolverBase
adjoint	Eigen/src/Core/Transpose.h	/^MatrixBase<Derived>::adjoint() const$/;"	f	class:Eigen::MatrixBase
adjoint	Eigen/src/Core/TriangularMatrix.h	/^    inline const AdjointReturnType adjoint() const$/;"	f	class:Eigen::TriangularView
adjoint	Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType adjoint() const$/;"	f	class:Eigen::HouseholderSequence
adjoint	Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation adjoint() const { using numext::conj; return JacobiRotation(conj(m_c), -m_s); }$/;"	f	class:Eigen::JacobiRotation
adjoint	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> adjoint() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
adjoint	Eigen/src/SparseCore/SparseMatrixBase.h	/^    const AdjointReturnType adjoint() const { return AdjointReturnType(transpose()); }$/;"	f	class:Eigen::SparseMatrixBase
adjoint	Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> adjoint() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
adjointInPlace	Eigen/src/Core/Transpose.h	/^inline void MatrixBase<Derived>::adjointInPlace()$/;"	f	class:Eigen::MatrixBase
affine	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline AffinePart affine() { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
affine	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstAffinePart affine() const { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
aligned	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC bool aligned(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
aligned_allocator	Eigen/src/Core/util/Memory.h	/^  aligned_allocator() : std::allocator<T>() {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator<U>& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	Eigen/src/Core/util/Memory.h	/^class aligned_allocator : public std::allocator<T>$/;"	c	namespace:Eigen
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<T>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection& ) : EIGEN_ALIGNED_ALLOCATOR<T>() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^  class aligned_allocator_indirection : public EIGEN_ALIGNED_ALLOCATOR<T>$/;"	c	namespace:Eigen
aligned_delete	Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void aligned_delete(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_free	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
aligned_malloc	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void* aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_new	Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* aligned_new(std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_realloc	Eigen/src/Core/util/Memory.h	/^inline void* aligned_realloc(void *ptr, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
aligned_stack_memory_handler	Eigen/src/Core/util/Memory.h	/^    aligned_stack_memory_handler(T* ptr, std::size_t size, bool dealloc)$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
aligned_stack_memory_handler	Eigen/src/Core/util/Memory.h	/^template<typename T> class aligned_stack_memory_handler : noncopyable$/;"	c	namespace:Eigen::internal
alignment	Eigen/src/Core/Redux.h	/^    alignment = Derived::Alignment$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon577
alignment	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon493
alignment	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon491
alignment	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon488
alignment	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon487
alignment	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon489
alignment	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon499
alignment	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon501
alignment	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 8, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon500
alignment	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon477
alignment	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon475
alignment	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon473
alignment	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon470
alignment	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon471
alignment	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon560
alignment	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon559
alignment	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon563
alignment	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon511
alignment	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon509
alignment	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon507
alignment	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon504
alignment	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon505
alignment	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon543
alignment	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon541
alignment	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon536
alignment	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon535
alignment	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon537
alignment	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon524
alignment	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon523
alignment	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon519
alignment	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon518
alignment	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon517
all	Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::all() const$/;"	f	class:Eigen::DenseBase
all	Eigen/src/Core/VectorwiseOp.h	/^    const AllReturnType all() const$/;"	f	class:Eigen::VectorwiseOp
allFinite	Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::allFinite() const$/;"	f	class:Eigen::DenseBase
all_unroller	Eigen/src/Core/BooleanRedux.h	/^struct all_unroller$/;"	s	namespace:Eigen::internal
all_unroller	Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
all_unroller	Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
allocate	Eigen/src/Core/util/Memory.h	/^  pointer allocate(size_type num, const void* \/*hint*\/ = 0)$/;"	f	class:Eigen::aligned_allocator
allocate	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::BDCSVD
allocate	Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, QRPreconditioner>&) {}$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	Eigen/src/SVD/JacobiSVD.h	/^void JacobiSVD<MatrixType, QRPreconditioner>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
allocate	Eigen/src/SVD/SVDBase.h	/^bool SVDBase<MatrixType>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::SVDBase
allocateA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateA() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateA()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateAll() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateAll()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateB() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateB()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocatedSize	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index allocatedSize() const { return m_allocatedSize; }$/;"	f	class:Eigen::internal::CompressedStorage
alphas	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType alphas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
always_void	Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	s	namespace:Eigen::internal
amd_flip	Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_flip(const T& i) { return -i-2; }$/;"	f	namespace:Eigen::internal
amd_mark	Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline void amd_mark(const T0* w, const T1& j) { return w[j] = amd_flip(w[j]); }$/;"	f	namespace:Eigen::internal
amd_marked	Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline bool amd_marked(const T0* w, const T1& j) { return w[j]<0; }$/;"	f	namespace:Eigen::internal
amd_unflip	Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_unflip(const T& i) { return i<0 ? amd_flip(i) : i; }$/;"	f	namespace:Eigen::internal
analyzePattern	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
analyzePattern	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::DiagonalPreconditioner
analyzePattern	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& analyzePattern(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
analyzePattern	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
analyzePattern	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
analyzePattern	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::analyzePattern(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
analyzePattern	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& analyzePattern(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
analyzePattern	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
analyzePattern	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
analyzePattern	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
analyzePattern	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::analyzePattern(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
analyzePattern	Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
analyzePattern	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
analyzePattern	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
analyzePattern	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
analyzePattern	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
analyzePattern	Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseLU
analyzePattern	Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
analyzePattern	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& \/*matrix*\/)$/;"	f	class:Eigen::SuperLUBase
analyzePattern	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperILU
analyzePattern	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLU
analyzePattern	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
analyzePattern_impl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern_impl()$/;"	f	class:Eigen::UmfPackLU
analyzePattern_preordered	Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::analyzePattern_preordered(const CholMatrixType& ap, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
angle	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angularDistance	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::angularDistance(const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
any	Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::any() const$/;"	f	class:Eigen::DenseBase
any	Eigen/src/Core/VectorwiseOp.h	/^    const AnyReturnType any() const$/;"	f	class:Eigen::VectorwiseOp
any_conversion	Eigen/src/Core/util/Meta.h	/^  struct any_conversion$/;"	s	struct:Eigen::internal::is_convertible_impl
any_conversion	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct any_conversion$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
any_unroller	Eigen/src/Core/BooleanRedux.h	/^struct any_unroller$/;"	s	namespace:Eigen::internal
any_unroller	Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
any_unroller	Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
append	Eigen/src/SparseCore/CompressedStorage.h	/^    void append(const Scalar& v, Index i)$/;"	f	class:Eigen::internal::CompressedStorage
applyHouseholderOnTheLeft	Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheLeft($/;"	f	class:Eigen::MatrixBase
applyHouseholderOnTheRight	Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheRight($/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheRight(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyThisOnTheLeft	Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheLeft	Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheLeft(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheLeft	Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheRight(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheRight	Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheRight(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyTranspositionOnTheLeft	Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheLeft(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyTranspositionOnTheRight	Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheRight(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyZAdjointOnTheLeftInPlace	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<MatrixType>::applyZAdjointOnTheLeftInPlace($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
apply_block_householder_on_the_left	Eigen/src/Householder/BlockHouseholder.h	/^void apply_block_householder_on_the_left(MatrixType& mat, const VectorsType& vectors, const CoeffsType& hCoeffs, bool forward)$/;"	f	namespace:Eigen::internal
apply_rotation_in_the_plane	Eigen/src/Jacobi/Jacobi.h	/^void \/*EIGEN_DONT_INLINE*\/ apply_rotation_in_the_plane(DenseBase<VectorX>& xpr_x, DenseBase<VectorY>& xpr_y, const JacobiRotation<OtherScalar>& j)$/;"	f	namespace:Eigen::internal
arg	Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& arg() const$/;"	f	class:Eigen::internal::EvalToTemp
arg	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(arg, Scalar) arg(const Scalar& x)$/;"	f	namespace:Eigen::numext
arg	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^arg() const$/;"	f
arg1	Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg1Nested& arg1() const { return m_arg1; }$/;"	f	class:Eigen::CwiseTernaryOp
arg2	Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg2Nested& arg2() const { return m_arg2; }$/;"	f	class:Eigen::CwiseTernaryOp
arg3	Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg3Nested& arg3() const { return m_arg3; }$/;"	f	class:Eigen::CwiseTernaryOp
arg_default_impl	Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl$/;"	s	namespace:Eigen::internal
arg_default_impl	Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
arg_impl	Eigen/src/Core/MathFunctions.h	/^  struct arg_impl {$/;"	s	namespace:Eigen::internal
arg_impl	Eigen/src/Core/MathFunctions.h	/^  template<typename Scalar> struct arg_impl : arg_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
arg_retval	Eigen/src/Core/MathFunctions.h	/^struct arg_retval$/;"	s	namespace:Eigen::internal
array	Eigen/src/Core/ArrayBase.h	/^    ArrayBase<Derived>& array() { return *this; }$/;"	f	class:Eigen::ArrayBase
array	Eigen/src/Core/ArrayBase.h	/^    const ArrayBase<Derived>& array() const { return *this; }$/;"	f	class:Eigen::ArrayBase
array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(16) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(32) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(64) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(8) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/DenseStorage.h	/^  T array[1];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/DenseStorage.h	/^  T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ArrayWrapper<Derived> array() { return ArrayWrapper<Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
array	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const ArrayWrapper<const Derived> array() const { return ArrayWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
asDiagonal	Eigen/src/Core/DiagonalMatrix.h	/^MatrixBase<Derived>::asDiagonal() const$/;"	f	class:Eigen::MatrixBase
asPermutation	Eigen/src/Core/PermutationMatrix.h	/^const PermutationWrapper<const Derived> MatrixBase<Derived>::asPermutation() const$/;"	f	class:Eigen::MatrixBase
asSluMatrix	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^SluMatrix asSluMatrix(MatrixType& mat)$/;"	f	namespace:Eigen::internal
asin	Eigen/src/Core/MathFunctions.h	/^T asin(const T &x) {$/;"	f	namespace:Eigen::numext
asin	Eigen/src/Core/MathFunctions.h	/^double asin(const double &x) { return ::asin(x); }$/;"	f	namespace:Eigen::numext
asin	Eigen/src/Core/MathFunctions.h	/^float asin(const float &x) { return ::asinf(x); }$/;"	f	namespace:Eigen::numext
asin	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^asin() const$/;"	f
assignCoeff	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a *= b; }$/;"	f	struct:Eigen::internal::mul_assign_op
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a += b; }$/;"	f	struct:Eigen::internal::add_assign_op
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a -= b; }$/;"	f	struct:Eigen::internal::sub_assign_op
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a = b; }$/;"	f	struct:Eigen::internal::assign_op
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a \/= b; }$/;"	f	struct:Eigen::internal::div_assign_op
assignCoeff	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const$/;"	f	struct:Eigen::internal::swap_assign_op
assignCoeffByOuterInner	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeffByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignDiagonalCoeff	Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignDiagonalCoeff	Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignOppositeCoeff	Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index, Index)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignOppositeCoeff	Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignPacket	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	Eigen/src/Core/Swap.h	/^  void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	Eigen/src/Core/Swap.h	/^  void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::add_assign_op
assignPacket	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::assign_op
assignPacket	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::div_assign_op
assignPacket	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::mul_assign_op
assignPacket	Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::sub_assign_op
assignPacketByOuterInner	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacketByOuterInner	Eigen/src/Core/Swap.h	/^  void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignProduct	Eigen/src/Core/PermutationMatrix.h	/^    void assignProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationBase
assignTranspose	Eigen/src/Core/PermutationMatrix.h	/^    void assignTranspose(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct assign_op {$/;"	s	namespace:Eigen::internal
assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar> struct assign_op<DstScalar,void> {};$/;"	s	namespace:Eigen::internal
assign_sparse_to_sparse	Eigen/src/SparseCore/SparseAssign.h	/^void assign_sparse_to_sparse(DstXprType &dst, const SrcXprType &src)$/;"	f	namespace:Eigen::internal
assignment_from_xpr_op_product	Eigen/src/Core/ProductEvaluators.h	/^struct assignment_from_xpr_op_product$/;"	s	namespace:Eigen::internal
at	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar at(Index key, const Scalar& defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atInRange	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar atInRange(Index start, Index end, Index key, const Scalar &defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atWithInsertion	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& atWithInsertion(Index key, const Scalar& defaultValue = Scalar(0))$/;"	f	class:Eigen::internal::CompressedStorage
atan	Eigen/src/Core/MathFunctions.h	/^T atan(const T &x) {$/;"	f	namespace:Eigen::numext
atan	Eigen/src/Core/MathFunctions.h	/^double atan(const double &x) { return ::atan(x); }$/;"	f	namespace:Eigen::numext
atan	Eigen/src/Core/MathFunctions.h	/^float atan(const float &x) { return ::atanf(x); }$/;"	f	namespace:Eigen::numext
atan	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^atan() const$/;"	f
available_stages_cnt	methods/stabilized_methods.hpp	/^    static const int available_stages_cnt=46; \/\/ number of stages for which we have calculated coefficients$/;"	m	class:ROCK2
average_timestep	methods/adaptive_methods.hpp	/^    double average_timestep(){ return sum_h\/n_h;}$/;"	f	class:AleksaRandomPathsAdaptiveScheme
average_timestep	methods/adaptive_methods.hpp	/^    double average_timestep(){ return sum_h\/n_h;}$/;"	f	class:ClassicalAdaptiveScheme
average_timestep	methods/adaptive_methods.hpp	/^    double average_timestep(){ return sum_h\/n_h;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
average_timestep	methods/adaptive_methods.hpp	/^    double average_timestep(){ return sum_h\/n_h;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
average_timestep	methods/core_methods.hpp	/^    Real average_timestep(){ return h0;}$/;"	f	class:AbdulleGaregnaniMethod
average_timestep	methods/core_methods.hpp	/^    Real average_timestep(){ return h0;}$/;"	f	class:ConradNumericalMethod
average_timestep	methods/core_methods.hpp	/^    Real average_timestep(){ return h0;}$/;"	f	class:FixedTimeSteppingMethod
average_timestep	methods/core_methods.hpp	/^    virtual Real average_timestep(){return -1.0;}$/;"	f	class:NumericalMethod
ax	build/plot_2d_solution.py	/^    ax = fig.gca(projection='3d')$/;"	v
axis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
b	Eigen/src/SVD/JacobiSVD.h	/^         b = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon623
b	models/models.hpp	/^    Real a,b,c;$/;"	m	class:FitzHughNagumo
b	models/models.hpp	/^    Real a,b;$/;"	m	class:Brusselator
b	tools/random_variable.hpp	/^    Real a,b;$/;"	m	class:UniformDistribution
base	Eigen/src/Core/PlainObjectBase.h	/^    Base& base() { return *static_cast<Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	Eigen/src/Core/PlainObjectBase.h	/^    const Base& base() const { return *static_cast<const Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base_integrator	core_methods.hpp	/^    StepIntegrator& base_integrator;$/;"	m	class:NumericalMethod
base_integrator	methods/core_methods.hpp	/^    StepIntegrator& base_integrator;$/;"	m	class:NumericalMethod
bdcSvd	Eigen/src/SVD/BDCSVD.h	/^MatrixBase<Derived>::bdcSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
beta	mcmc/pcn.hpp	/^    Real beta; $/;"	m	class:PCN_Sampler
beta	models/models.hpp	/^    Real sigma,rho,beta;$/;"	m	class:Lorenz
betas	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType betas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
bicgstab	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^bool bicgstab(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
bidiagonal	Eigen/src/SVD/UpperBidiagonalization.h	/^    const BidiagonalType& bidiagonal() const { return m_bidiagonal; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
binaryExpr	Eigen/src/plugins/CommonCwiseBinaryOps.h	/^binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const$/;"	f
binary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit binary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IndexBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit binary_evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit binary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_quotient_op<T1,T2>, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_op_base	Eigen/src/Core/functors/BinaryFunctors.h	/^struct binary_op_base$/;"	s	namespace:Eigen::internal
binary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	s	namespace:Eigen::internal
binary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
binary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
bind1st_op	Eigen/src/Core/functors/BinaryFunctors.h	/^  bind1st_op(const first_argument_type &val) : m_value(val) {}$/;"	f	struct:Eigen::internal::bind1st_op
bind1st_op	Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct bind1st_op : BinaryOp {$/;"	s	namespace:Eigen::internal
bind2nd_op	Eigen/src/Core/functors/BinaryFunctors.h	/^  bind2nd_op(const second_argument_type &val) : m_value(val) {}$/;"	f	struct:Eigen::internal::bind2nd_op
bind2nd_op	Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct bind2nd_op : BinaryOp {$/;"	s	namespace:Eigen::internal
blas_data_mapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::blas_data_mapper
blas_data_mapper	Eigen/src/Core/util/BlasUtil.h	/^class blas_data_mapper {$/;"	c	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, NestedXpr, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain> > >$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain1>,$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<Transpose<NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<const T>$/;"	s	namespace:Eigen::internal
blas_traits	Eigen/src/Core/util/BlasUtil.h	/^template<typename XprType> struct blas_traits$/;"	s	namespace:Eigen::internal
block	Eigen/src/plugins/BlockMethods.h	/^inline BlockXpr block(Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f
block	Eigen/src/plugins/BlockMethods.h	/^inline const ConstBlockXpr block(Index startRow, Index startCol, Index blockRows, Index blockCols) const$/;"	f
block	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol) const$/;"	f
block	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol,$/;"	f
block	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol)$/;"	f
block	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol,$/;"	f
blockA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline LhsScalar* blockA() { return m_blockA; }$/;"	f	class:Eigen::internal::level3_blocking
blockB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockB() { return m_blockB; }$/;"	f	class:Eigen::internal::level3_blocking
blockCols	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
blockCols	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockCols	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
blockRows	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
blockRows	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockRows	Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
block_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit block_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::block_evaluator
block_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/* HasDirectAccess *\/ true>$/;"	s	namespace:Eigen::internal
block_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/*HasDirectAccess*\/ false>$/;"	s	namespace:Eigen::internal
block_evaluator_type	Eigen/src/Core/CoreEvaluators.h	/^  typedef block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel> block_evaluator_type;$/;"	t	struct:Eigen::internal::evaluator
blocked	Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index blocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
blocked	Eigen/src/Cholesky/LLT.h	/^  static Index blocked(MatrixType& m)$/;"	f	struct:Eigen::internal::llt_inplace
blocked_lu	Eigen/src/LU/PartialPivLU.h	/^  static Index blocked_lu(Index rows, Index cols, Scalar* lu_data, Index luStride, PivIndex* row_transpositions, PivIndex& nb_transpositions, Index maxBlockSize=256)$/;"	f	struct:Eigen::internal::partial_lu_impl
blueNorm	Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::MatrixBase
blueNorm	Eigen/src/Core/VectorwiseOp.h	/^    const BlueNormReturnType blueNorm() const$/;"	f	class:Eigen::VectorwiseOp
blueNorm	Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::SparseMatrixBase
blueNorm_impl	Eigen/src/Core/StableNorm.h	/^blueNorm_impl(const EigenBase<Derived>& _vec)$/;"	f	namespace:Eigen::internal
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline BlockXpr bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const ConstBlockXpr bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomLeftCorner() const$/;"	f
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomLeftCorner()$/;"	f
bottomLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline BlockXpr bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const ConstBlockXpr bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomRightCorner() const$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomRightCorner()$/;"	f
bottomRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRows	Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr bottomRows(Index n) const$/;"	f
bottomRows	Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr bottomRows(Index n)$/;"	f
bottomRows	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type bottomRows(Index n = N) const$/;"	f
bottomRows	Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type bottomRows(Index n = N)$/;"	f
broadcastRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, DoublePacketType& b0, DoublePacketType& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsScalar& b0, RhsScalar& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
bruteforce_det3_helper	Eigen/src/LU/Determinant.h	/^inline const typename Derived::Scalar bruteforce_det3_helper$/;"	f	namespace:Eigen::internal
bruteforce_det4_helper	Eigen/src/LU/Determinant.h	/^const typename Derived::Scalar bruteforce_det4_helper$/;"	f	namespace:Eigen::internal
c	Eigen/src/Jacobi/Jacobi.h	/^    Scalar c() const { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	Eigen/src/Jacobi/Jacobi.h	/^    Scalar& c() { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	models/models.hpp	/^    Real a,b,c;$/;"	m	class:FitzHughNagumo
c_to_fortran_numbering	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void c_to_fortran_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
calc_exact	adaptive_timestepping.cpp	/^void calc_exact(Model *model, StepIntegrator* s)$/;"	f
calc_h	core_methods.hpp	/^    static double calc_h(Model &m, int N)$/;"	f	class:NumericalMethod
calc_h	methods/core_methods.hpp	/^    static Real calc_h(Model &m, int N) { return (m.get_tf()-m.get_t0())\/N; }$/;"	f	class:NumericalMethod
calc_mean_and_covariance	tools/random_variable.cpp	/^void calc_mean_and_covariance(std::vector<std::vector<Real>> data,std::vector<Real> & mean, std::vector<std::vector<Real>>&covariance)$/;"	f
calc_number_of_stages	methods/stabilized_methods.cpp	/^void RKC::calc_number_of_stages(Real *x0, Real h)$/;"	f	class:RKC
calc_number_of_stages	methods/stabilized_methods.cpp	/^void ROCK2::calc_number_of_stages(Real *x0,Real h)$/;"	f	class:ROCK2
call_assignment	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if< evaluator_assume_aliasing<Src>::value, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if<!evaluator_assume_aliasing<Src>::value, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(NoAlias<Dst,StorageBase>& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(const Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void call_dense_assignment_loop(DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void call_dense_assignment_loop(DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
call_triangular_assignment_loop	Eigen/src/Core/TriangularMatrix.h	/^void call_triangular_assignment_loop(DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_triangular_assignment_loop	Eigen/src/Core/TriangularMatrix.h	/^void call_triangular_assignment_loop(DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
cast	Eigen/src/Core/MathFunctions.h	/^inline NewType cast(const OldType& x)$/;"	f	namespace:Eigen::internal
cast	Eigen/src/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	Eigen/src/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	Eigen/src/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Derived,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::QuaternionBase
cast	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling<NewScalarType> cast() const$/;"	f	class:Eigen::UniformScaling
cast	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim,Mode,Options> >::type cast() const$/;"	f	class:Eigen::Transform
cast	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^cast() const$/;"	f
cast_impl	Eigen/src/Core/MathFunctions.h	/^struct cast_impl$/;"	s	namespace:Eigen::internal
cast_to_pointer_type	Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }$/;"	f	class:Eigen::Map
cd	Eigen/src/Core/arch/ZVector/Complex.h	/^    Packet1cd cd[2];$/;"	m	union:Eigen::internal::Packet2cf::__anon520
ceil	Eigen/src/Core/MathFunctions.h	/^T (ceil)(const T& x)$/;"	f	namespace:Eigen::numext
ceil	Eigen/src/Core/MathFunctions.h	/^double ceil(const double &x) { return ::ceil(x); }$/;"	f	namespace:Eigen::numext
ceil	Eigen/src/Core/MathFunctions.h	/^float ceil(const float &x) { return ::ceilf(x); }$/;"	f	namespace:Eigen::numext
ceil	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half ceil(const half& a) {$/;"	f	namespace:Eigen::half_impl
ceil	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^ceil() const$/;"	f
ceilh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half ceilh(const Eigen::half& a) {$/;"	f
center	Eigen/src/Geometry/AlignedBox.h	/^  center() const$/;"	f	class:Eigen::AlignedBox
checkSanity	Eigen/src/Core/MapBase.h	/^    void checkSanity(typename internal::enable_if<(internal::traits<T>::Alignment>0),void*>::type = 0) const$/;"	f	class:Eigen::MapBase
checkSanity	Eigen/src/Core/MapBase.h	/^    void checkSanity(typename internal::enable_if<internal::traits<T>::Alignment==0,void*>::type = 0) const$/;"	f	class:Eigen::MapBase
checkTransposeAliasing_impl	Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl$/;"	s	namespace:Eigen::internal
checkTransposeAliasing_impl	Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl<Derived, OtherDerived, false>$/;"	s	namespace:Eigen::internal
check_DenseIndex_is_signed	Eigen/src/Core/DenseBase.h	/^static inline void check_DenseIndex_is_signed() {$/;"	f	namespace:Eigen::internal
check_coordinates	Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index , Index ) const {}$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_for_aliasing	Eigen/src/Core/Transpose.h	/^void check_for_aliasing(const Dst &dst, const Src &src)$/;"	f	namespace:Eigen::internal
check_rows_cols_for_overflow	Eigen/src/Core/PlainObjectBase.h	/^template<> struct check_rows_cols_for_overflow<Dynamic> {$/;"	s	namespace:Eigen::internal
check_rows_cols_for_overflow	Eigen/src/Core/PlainObjectBase.h	/^template<int MaxSizeAtCompileTime> struct check_rows_cols_for_overflow {$/;"	s	namespace:Eigen::internal
check_size_for_overflow	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void check_size_for_overflow(std::size_t size)$/;"	f	namespace:Eigen::internal
check_static_allocation_size	Eigen/src/Core/DenseStorage.h	/^void check_static_allocation_size()$/;"	f	namespace:Eigen::internal
check_template_parameters	Eigen/src/Cholesky/LDLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LDLT
check_template_parameters	Eigen/src/Cholesky/LLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LLT
check_template_parameters	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ComplexEigenSolver
check_template_parameters	Eigen/src/Eigenvalues/EigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::EigenSolver
check_template_parameters	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::GeneralizedEigenSolver
check_template_parameters	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SelfAdjointEigenSolver
check_template_parameters	Eigen/src/LU/FullPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivLU
check_template_parameters	Eigen/src/LU/PartialPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::PartialPivLU
check_template_parameters	Eigen/src/QR/ColPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ColPivHouseholderQR
check_template_parameters	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  static void check_template_parameters() {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
check_template_parameters	Eigen/src/QR/FullPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivHouseholderQR
check_template_parameters	Eigen/src/QR/HouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::HouseholderQR
check_template_parameters	Eigen/src/SVD/SVDBase.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SVDBase
check_template_parameters	Eigen/src/SparseCore/SparseMatrix.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SparseMatrix
check_template_parameters	Eigen/src/SparseCore/SparseVector.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SparseVector
check_template_params	Eigen/src/Geometry/Transform.h	/^    EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void check_template_params()$/;"	f	class:Eigen::Transform
check_that_malloc_is_allowed	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void check_that_malloc_is_allowed()$/;"	f	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector<DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
cholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_common& cholmod() { return m_cholmod; }$/;"	f	class:Eigen::CholmodBase
cholmodCommon	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    cholmod_common *cholmodCommon() const { return &m_cc; }$/;"	f	class:Eigen::SPQR
cholmod_configure_matrix	Eigen/src/CholmodSupport/CholmodSupport.h	/^template<> struct cholmod_configure_matrix<double> {$/;"	s	namespace:Eigen::internal
cholmod_configure_matrix	Eigen/src/CholmodSupport/CholmodSupport.h	/^template<> struct cholmod_configure_matrix<std::complex<double> > {$/;"	s	namespace:Eigen::internal
circle1	build/plot_ee_stab.py	/^circle1 = plt.Circle((-1, 0), 1, color='g',clip_on=False)$/;"	v
circle1	build/plot_ie_stab.py	/^circle1 = plt.Circle((1, 0), 1, color='w',clip_on=False)$/;"	v
cj	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,ConjLhs,false> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,false,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
clamp	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clean	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void clean()$/;"	f	class:Eigen::PastixBase
clear	Eigen/src/SparseCore/CompressedStorage.h	/^    inline void clear() { m_size = 0; }$/;"	f	class:Eigen::internal::CompressedStorage
clearFactors	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void clearFactors()$/;"	f	class:Eigen::SuperLUBase
clear_mark	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  IndexType clear_mark  \/* return the new value for tag_mark *\/$/;"	f	namespace:internal
close_f	methods/core_methods.hpp	/^    void close_f(){ if (f_print!=0) fclose(f_print); }$/;"	f	class:NumericalMethod
cmp_EQ	Eigen/src/Core/util/Constants.h	/^  cmp_EQ = 0,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_GE	Eigen/src/Core/util/Constants.h	/^  cmp_GE = 6$/;"	e	enum:Eigen::internal::ComparisonName
cmp_GT	Eigen/src/Core/util/Constants.h	/^  cmp_GT = 5,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LE	Eigen/src/Core/util/Constants.h	/^  cmp_LE = 2,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LT	Eigen/src/Core/util/Constants.h	/^  cmp_LT = 1,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_NEQ	Eigen/src/Core/util/Constants.h	/^  cmp_NEQ = 4,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_UNORD	Eigen/src/Core/util/Constants.h	/^  cmp_UNORD = 3,$/;"	e	enum:Eigen::internal::ComparisonName
coeff	Eigen/src/Core/Block.h	/^    EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	Eigen/src/Core/Block.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::ternary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::ternary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(IndexType index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(IndexType row, IndexType col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  const Scalar coeff(Index i, Index j) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/CoreEvaluators.h	/^  const Scalar coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	Eigen/src/Core/DenseCoeffsBase.h	/^    coeff(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index idx) const$/;"	f	class:Eigen::Diagonal
coeff	Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeff	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index index) const$/;"	f	class:Eigen::MapBase
coeff	Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeff	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::NestByValue
coeff	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
coeff	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeff	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeff	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Scalar coeff(Index i) const$/;"	f	class:Eigen::ProductImpl
coeff	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::ProductImpl
coeff	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index idx) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
coeff	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC const CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index,Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i) const$/;"	f	class:Eigen::Select
coeff	Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::Select
coeff	Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SelfAdjointView
coeff	Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& coeff(Index i) const { return indices().coeff(i); }$/;"	f	class:Eigen::TranspositionsBase
coeff	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const  { return derived().coeff(row,col); }$/;"	f	class:Eigen::TriangularBase
coeff	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::TriangularViewImpl
coeff	Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::visitor_evaluator
coeff	Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeff(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeff	Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::BlockImpl
coeff	Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::BlockImpl
coeff	Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Scalar& coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMapBase
coeff	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMatrix
coeff	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index i) const$/;"	f	class:Eigen::SparseVector
coeff	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseVector
coeffByOuterInner	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
coeffByOuterInner	Eigen/src/Core/Redux.h	/^  CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
coeffRef	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	Eigen/src/Core/CoreEvaluators.h	/^  typename XprType::Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRef(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index idx)$/;"	f	class:Eigen::Diagonal
coeffRef	Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index row, Index)$/;"	f	class:Eigen::Diagonal
coeffRef	Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index idx) const$/;"	f	class:Eigen::Diagonal
coeffRef	Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeffRef	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::MapBase
coeffRef	Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MapBase
coeffRef	Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MapBase
coeffRef	Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeffRef	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::NestByValue
coeffRef	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::NestByValue
coeffRef	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index,Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfAdjointView
coeffRef	Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& coeffRef(Index i) { return indices().coeffRef(i); }$/;"	f	class:Eigen::TranspositionsBase
coeffRef	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) { return derived().coeffRef(row,col); }$/;"	f	class:Eigen::TriangularBase
coeffRef	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TriangularViewImpl
coeffRef	Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeffRef(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeffRef	Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::BlockImpl
coeffRef	Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::BlockImpl
coeffRef	Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeffRef	Eigen/src/SparseCore/SparseCompressedBase.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMapBase
coeffRef	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
coeffRef	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index i)$/;"	f	class:Eigen::SparseVector
coeffRef	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseVector
coeffRefByOuterInner	Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRefByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DenseCoeffsBase
coeffSeparator	Eigen/src/Core/IO.h	/^  std::string coeffSeparator;$/;"	m	struct:Eigen::IOFormat
coeff_visitor	Eigen/src/Core/Visitor.h	/^struct coeff_visitor$/;"	s	namespace:Eigen::internal
coeffs	Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrixWrapper
coeffs	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Map
coeffs	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const typename internal::traits<Derived>::Coefficients& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline typename internal::traits<Derived>::Coefficients& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Map<Array<Scalar,Dynamic,1> > coeffs() { eigen_assert(isCompressed()); return Array<Scalar,Dynamic,1>::Map(valuePtr(),nonZeros()); }$/;"	f	class:Eigen::SparseCompressedBase
coeffs	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Map<const Array<Scalar,Dynamic,1> > coeffs() const { eigen_assert(isCompressed()); return Array<Scalar,Dynamic,1>::Map(valuePtr(),nonZeros()); }$/;"	f	class:Eigen::SparseCompressedBase
cofactor_3x3	Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_3x3(const MatrixType& m)$/;"	f	namespace:Eigen::internal
cofactor_4x4	Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_4x4(const MatrixType& matrix)$/;"	f	namespace:Eigen::internal
col	Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,Dynamic,1> col(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
col	Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::all_unroller::__anon580
col	Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::any_unroller::__anon581
col	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index col() const             { return m_iter.col(); }$/;"	f	class:Eigen::InnerIterator
col	Eigen/src/Core/CoreIterators.h	/^  inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::inner_iterator_selector
col	Eigen/src/Core/TriangularMatrix.h	/^    col = (UnrollCount-1) \/ DstXprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon269
col	Eigen/src/Core/Visitor.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_impl::__anon247
col	Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
col	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return EvalIterator::col()   - m_block.startCol(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
col	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return IsRowMajor ? index() : 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
col	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
col	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
col	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return IsRowMajor ? m_id : m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return IsRowMajor ? m_id : m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_rhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index col()   const { return NeedToTranspose ? LhsIterator::index() : m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index col() const    { return SparseXprType::IsRowMajor ? m_sparseIter.index() : m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseTranspose.h	/^      Index col() const { return EvalIterator::row(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& col() const { return m_col; }$/;"	f	class:Eigen::Triplet
col	Eigen/src/SparseCore/SparseView.h	/^        inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
col	Eigen/src/plugins/BlockMethods.h	/^inline ColXpr col(Index i)$/;"	f
col	Eigen/src/plugins/BlockMethods.h	/^inline ConstColXpr col(Index i) const$/;"	f
col	build/plot_all_paths.py	/^        col = (t\/r, t\/r, t\/r)$/;"	v
colIndexByOuterInner	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
colIndexByOuterInner	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
colIndexPtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colIndexPtr()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colIndexPtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colOffset	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value() > 0 ? m_index.value() : 0; }$/;"	f	struct:Eigen::internal::evaluator
colOffset	Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }$/;"	f	class:Eigen::Diagonal
colPivHouseholderQr	Eigen/src/QR/ColPivHouseholderQR.h	/^MatrixBase<Derived>::colPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
colStride	Eigen/src/Core/CoreEvaluators.h	/^  inline Index colStride() const { return XprType::IsRowMajor ? m_innerStride.value() : m_outerStride.value(); }$/;"	f	struct:Eigen::internal::mapbase_evaluator
colStride	Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index colStride() const$/;"	f	class:Eigen::DenseCoeffsBase
colToSup	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colToSup()  { return m_col_to_sup; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colToSup	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colToSup() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colamd	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static bool colamd(IndexType n_row, IndexType n_col, IndexType Alen, IndexType *A, IndexType *p, double knobs[COLAMD_KNOBS], IndexType stats[COLAMD_STATS])$/;"	f	namespace:internal
colamd_c	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_c(IndexType n_col) $/;"	f	namespace:internal
colamd_col	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct colamd_col$/;"	s	namespace:internal
colamd_r	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType  colamd_r(IndexType n_row)$/;"	f	namespace:internal
colamd_recommended	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_recommended ( IndexType nnz, IndexType n_row, IndexType n_col)$/;"	f	namespace:internal
colamd_set_defaults	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline void colamd_set_defaults(double knobs[COLAMD_KNOBS])$/;"	f	namespace:internal
colblk	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index colblk; \/\/ The minimum column dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
coletree	Eigen/src/SparseCore/SparseColEtree.h	/^int coletree(const MatrixType& mat, IndexVector& parent, IndexVector& firstRowElt, typename MatrixType::StorageIndex *perm=0)$/;"	f	namespace:Eigen::internal
collapseDuplicates	Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::collapseDuplicates(DupFunctor dup_func)$/;"	f	class:Eigen::SparseMatrix
cols	Eigen/src/Cholesky/LDLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LDLT
cols	Eigen/src/Cholesky/LLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LLT
cols	Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex cols() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
cols	Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ArrayWrapper
cols	Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::MatrixWrapper
cols	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index cols() const        { return m_dstExpr.cols(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
cols	Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrix
cols	Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
cols	Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
cols	Eigen/src/Core/CoreEvaluators.h	/^  Index cols() const $/;"	f	class:Eigen::internal::EvalToTemp
cols	Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseBinaryOp
cols	Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
cols	Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseTernaryOp
cols	Eigen/src/Core/CwiseUnaryOp.h	/^    Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::CwiseUnaryOp
cols	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::CwiseUnaryView
cols	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols() const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index cols(void) {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	Eigen/src/Core/Diagonal.h	/^    inline Index cols() const { return 1; }$/;"	f	class:Eigen::Diagonal
cols	Eigen/src/Core/DiagonalMatrix.h	/^    inline Index cols() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
cols	Eigen/src/Core/EigenBase.h	/^  inline Index cols() const { return derived().cols(); }$/;"	f	struct:Eigen::EigenBase
cols	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ForceAlignedAccess
cols	Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::Inverse
cols	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::MapBase
cols	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::NestByValue
cols	Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
cols	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }$/;"	f	class:Eigen::PlainObjectBase
cols	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Product
cols	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::redux_evaluator
cols	Eigen/src/Core/Replicate.h	/^    inline Index cols() const { return m_matrix.cols() * m_colFactor.value(); }$/;"	f	class:Eigen::Replicate
cols	Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return static_cast<const Derived*>(this)->cols(); }$/;"	f	class:Eigen::ReturnByValue
cols	Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Reverse
cols	Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index cols() const { return m_condition.cols(); }$/;"	f	class:Eigen::Select
cols	Eigen/src/Core/SelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfAdjointView
cols	Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Solve
cols	Eigen/src/Core/SolveTriangular.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
cols	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Transpose
cols	Eigen/src/Core/Transpositions.h	/^    Index cols() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
cols	Eigen/src/Core/Transpositions.h	/^    Index cols() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
cols	Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::TriangularBase
cols	Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::TriangularView
cols	Eigen/src/Core/VectorwiseOp.h	/^    Index cols() const { return (Direction==Horizontal ? 1 : m_matrix.cols()); }$/;"	f	class:Eigen::PartialReduxExpr
cols	Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::visitor_evaluator
cols	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index cols() const { return m_hess.packedMatrix().cols(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
cols	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
cols	Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.cols() + (int(Direction)==Horizontal ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
cols	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
cols	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
cols	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transform
cols	Eigen/src/Householder/HouseholderSequence.h	/^    Index cols() const { return rows(); }$/;"	f	class:Eigen::HouseholderSequence
cols	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index cols() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
cols	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    Index cols() const { return m_L.cols(); }$/;"	f	class:Eigen::IncompleteCholesky
cols	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLUT
cols	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index cols() const { return matrix().cols(); }$/;"	f	class:Eigen::IterativeSolverBase
cols	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SolveWithGuess
cols	Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::FullPivLU
cols	Eigen/src/LU/PartialPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::PartialPivLU
cols	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PastixBase
cols	Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
cols	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::ColPivHouseholderQR
cols	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index cols() const { return m_cpqr.cols(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
cols	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::FullPivHouseholderQR
cols	Eigen/src/QR/FullPivHouseholderQR.h	/^  Index cols() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
cols	Eigen/src/QR/HouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::HouseholderQR
cols	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index cols() const { return m_cR->ncol; }$/;"	f	class:Eigen::SPQR
cols	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
cols	Eigen/src/SVD/SVDBase.h	/^  inline Index cols() const { return m_cols; }$/;"	f	class:Eigen::SVDBase
cols	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
cols	Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
cols	Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
cols	Eigen/src/SparseCore/SparseBlock.h	/^    inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
cols	Eigen/src/SparseCore/SparseMap.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
cols	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
cols	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::SparseMatrixBase
cols	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSelfAdjointView
cols	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
cols	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }$/;"	f	class:Eigen::SparseVector
cols	Eigen/src/SparseCore/SparseView.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseView
cols	Eigen/src/SparseLU/SparseLU.h	/^    inline Index cols() const { return m_mat.cols(); }$/;"	f	class:Eigen::SparseLU
cols	Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
cols	Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
cols	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index cols() { return m_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
cols	Eigen/src/SparseQR/SparseQR.h	/^    inline Index cols() const { return m_pmat.cols();}$/;"	f	class:Eigen::SparseQR
cols	Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return (std::min)(m_qr.rows(),m_qr.cols()); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
cols	Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
cols	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SuperLUBase
cols	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index cols() const { return mp_matrix.cols(); }$/;"	f	class:Eigen::UmfPackLU
cols	Eigen/src/misc/Image.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::image_retval_base
cols	Eigen/src/misc/Kernel.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::kernel_retval_base
colsPermutation	Eigen/src/QR/ColPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::ColPivHouseholderQR
colsPermutation	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const PermutationType& colsPermutation() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
colsPermutation	Eigen/src/QR/FullPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::FullPivHouseholderQR
colsPermutation	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    PermutationType colsPermutation() const$/;"	f	class:Eigen::SPQR
colsPermutation	Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseLU
colsPermutation	Eigen/src/SparseQR/SparseQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseQR
cols_select	Eigen/src/Core/GeneralProduct.h	/^    cols_select = product_size_category<Cols,MaxCols>::value,$/;"	e	enum:Eigen::internal::product_type::__anon589
column_bmod	Eigen/src/SparseLU/SparseLU_column_bmod.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_bmod(const Index jcol, const Index nseg, BlockScalarVector dense, ScalarVector& tempv,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_dfs(const Index m, const Index jcol, IndexVector& perm_r, Index maxsuper, Index& nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs_traits	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  column_dfs_traits(Index jcol, Index& jsuper, typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& glu, SparseLUImpl<Scalar, StorageIndex>& luImpl)$/;"	f	struct:Eigen::internal::column_dfs_traits
column_dfs_traits	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^struct column_dfs_traits : no_assignment_operator$/;"	s	namespace:Eigen::internal
colwise	Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstColwiseReturnType colwise() const {$/;"	f	class:Eigen::DenseBase
colwise	Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise()$/;"	f	class:Eigen::DenseBase
completeOrthogonalDecomposition	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^MatrixBase<Derived>::completeOrthogonalDecomposition() const {$/;"	f	class:Eigen::MatrixBase
complex_schur_reduce_to_hessenberg	Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg$/;"	s	namespace:Eigen::internal
complex_schur_reduce_to_hessenberg	Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg<MatrixType, false>$/;"	s	namespace:Eigen::internal
compute	Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::compute(const EigenBase<InputType>& a)$/;"	f	class:Eigen::LDLT
compute	Eigen/src/Cholesky/LLT.h	/^LLT<MatrixType,_UpLo>& LLT<MatrixType,_UpLo>::compute(const EigenBase<InputType>& a)$/;"	f	class:Eigen::LLT
compute	Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& compute(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
compute	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^ComplexEigenSolver<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
compute	Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeU)$/;"	f	class:Eigen::ComplexSchur
compute	Eigen/src/Eigenvalues/EigenSolver.h	/^EigenSolver<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::EigenSolver
compute	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^GeneralizedEigenSolver<MatrixType>::compute(const MatrixType& A, const MatrixType& B, bool computeEigenvectors)$/;"	f	class:Eigen::GeneralizedEigenSolver
compute	Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^compute(const MatrixType& matA, const MatrixType& matB, int options)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
compute	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition& compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
compute	Eigen/src/Eigenvalues/RealQZ.h	/^    RealQZ<MatrixType>& RealQZ<MatrixType>::compute(const MatrixType& A_in, const MatrixType& B_in, bool computeQZ)$/;"	f	class:Eigen::RealQZ
compute	Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeU)$/;"	f	class:Eigen::RealSchur
compute	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::compute(const EigenBase<InputType>& a_matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization& compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::Tridiagonalization
compute	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
compute	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& compute(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
compute	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
compute	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
compute	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT& compute(const MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
compute	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& compute(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
compute	Eigen/src/LU/FullPivLU.h	/^    FullPivLU& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::FullPivLU
compute	Eigen/src/LU/PartialPivLU.h	/^    PartialPivLU& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::PartialPivLU
compute	Eigen/src/LU/PartialPivLU.h	/^void PartialPivLU<MatrixType>::compute()$/;"	f	class:Eigen::PartialPivLU
compute	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
compute	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
compute	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
compute	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::compute(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
compute	Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::compute(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
compute	Eigen/src/QR/ColPivHouseholderQR.h	/^ColPivHouseholderQR<MatrixType>& ColPivHouseholderQR<MatrixType>::compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
compute	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
compute	Eigen/src/QR/FullPivHouseholderQR.h	/^FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
compute	Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::HouseholderQR
compute	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void compute(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
compute	Eigen/src/SVD/BDCSVD.h	/^  BDCSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::BDCSVD
compute	Eigen/src/SVD/BDCSVD.h	/^BDCSVD<MatrixType>& BDCSVD<MatrixType>::compute(const MatrixType& matrix, unsigned int computationOptions) $/;"	f	class:Eigen::BDCSVD
compute	Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::JacobiSVD
compute	Eigen/src/SVD/JacobiSVD.h	/^JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType& matrix, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
compute	Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::compute(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
compute	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
compute	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
compute	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
compute	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
compute	Eigen/src/SparseLU/SparseLU.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
compute	Eigen/src/SparseQR/SparseQR.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
compute	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLUBase
compute	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void compute(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
computeDirect	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeDirect(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFromHessenberg	Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ, bool computeU)$/;"	f	class:Eigen::ComplexSchur
computeFromHessenberg	Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ,  bool computeU)$/;"	f	class:Eigen::RealSchur
computeFromTridiagonal	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeFromTridiagonal(const RealVectorType& diag, const SubDiagonalType& subdiag , int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFromTridiagonal_impl	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^ComputationInfo computeFromTridiagonal_impl(DiagType& diag, SubDiagType& subdiag, const Index maxIterations, bool computeEigenvectors, MatrixType& eivec)$/;"	f	namespace:Eigen::internal
computeInPlace	Eigen/src/LU/FullPivLU.h	/^void FullPivLU<MatrixType>::computeInPlace()$/;"	f	class:Eigen::FullPivLU
computeInPlace	Eigen/src/QR/ColPivHouseholderQR.h	/^void ColPivHouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::ColPivHouseholderQR
computeInPlace	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<MatrixType>::computeInPlace()$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
computeInPlace	Eigen/src/QR/FullPivHouseholderQR.h	/^void FullPivHouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::FullPivHouseholderQR
computeInPlace	Eigen/src/QR/HouseholderQR.h	/^void HouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::HouseholderQR
computeInverseAndDetWithCheck	Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseAndDetWithCheck($/;"	f	class:Eigen::MatrixBase
computeInverseWithCheck	Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseWithCheck($/;"	f	class:Eigen::MatrixBase
computeNormOfT	Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Scalar RealSchur<MatrixType>::computeNormOfT()$/;"	f	class:Eigen::RealSchur
computeNorms	Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::computeNorms()$/;"	f	class:Eigen::RealQZ
computeProductBlockingSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeProductBlockingSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeRoots	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void computeRoots(const MatrixType& m, VectorType& roots)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
computeRotationScaling	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC void Transform<Scalar,Dim,Mode,Options>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeSVDofM	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSVDofM(Index firstCol, Index n, MatrixXr& U, VectorType& singVals, MatrixXr& V)$/;"	f	class:Eigen::BDCSVD
computeScalingRotation	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC void Transform<Scalar,Dim,Mode,Options>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeShift	Eigen/src/Eigenvalues/ComplexSchur.h	/^typename ComplexSchur<MatrixType>::ComplexScalar ComplexSchur<MatrixType>::computeShift(Index iu, Index iter)$/;"	f	class:Eigen::ComplexSchur
computeShift	Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::computeShift(Index iu, Index iter, Scalar& exshift, Vector3s& shiftInfo)$/;"	f	class:Eigen::RealSchur
computeSingVals	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVals(const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm,$/;"	f	class:Eigen::BDCSVD
computeSingVecs	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVecs$/;"	f	class:Eigen::BDCSVD
computeU	Eigen/src/SVD/SVDBase.h	/^  inline bool computeU() const { return m_computeFullU || m_computeThinU; }$/;"	f	class:Eigen::SVDBase
computeUnblocked	Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::computeUnblocked(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
computeV	Eigen/src/SVD/SVDBase.h	/^  inline bool computeV() const { return m_computeFullV || m_computeThinV; }$/;"	f	class:Eigen::SVDBase
compute_inverse	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse$/;"	s	namespace:Eigen::internal
compute_inverse	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check { \/* nothing! general case not supported. *\/ };$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_size2_helper	Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size2_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size3_helper	Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size3_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size4	Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_size4$/;"	s	namespace:Eigen::internal
compute_inverse_size4	Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, double, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_inverse_size4	Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, float, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
conditionMatrix	Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ConditionMatrixType& conditionMatrix() const$/;"	f	class:Eigen::Select
conditional	Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	s	namespace:Eigen::internal
conditional	Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	s	namespace:Eigen::internal
conditional_aligned_delete	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_delete_auto	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete_auto(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void conditional_aligned_free<false>(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc<false>(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new_auto	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new_auto(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_realloc<false>(void* ptr, std::size_t new_size, std::size_t)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_realloc(void* ptr, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_realloc_new(T* pts, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new_auto	Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conj	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)$/;"	f	namespace:Eigen::numext
conj_expr_if	Eigen/src/Core/products/SelfadjointRank2Update.h	/^template<bool Cond, typename T> struct conj_expr_if$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet4d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet8f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4d, Packet2cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet8f, Packet4cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet2d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet4f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2d, Packet1cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet4f, Packet2cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet2d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet4f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2d, Packet1cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet4f, Packet2cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^struct conj_helper$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<RealScalar, std::complex<RealScalar>, false,Conj>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<std::complex<RealScalar>, RealScalar, Conj,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>$/;"	s	namespace:Eigen::internal
conj_if	Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<false> {$/;"	s	namespace:Eigen::internal
conj_if	Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<true> {$/;"	s	namespace:Eigen::internal
conj_impl	Eigen/src/Core/MathFunctions.h	/^struct conj_impl$/;"	s	namespace:Eigen::internal
conj_impl	Eigen/src/Core/MathFunctions.h	/^struct conj_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
conj_prod	Eigen/src/Core/Dot.h	/^  typedef scalar_conj_product_op<typename traits<T>::Scalar,typename traits<U>::Scalar> conj_prod;$/;"	t	struct:Eigen::internal::dot_nocheck
conj_retval	Eigen/src/Core/MathFunctions.h	/^struct conj_retval$/;"	s	namespace:Eigen::internal
conjugate	Eigen/src/Core/SelfAdjointView.h	/^    inline const ConjugateReturnType conjugate() const$/;"	f	class:Eigen::SelfAdjointView
conjugate	Eigen/src/Core/TriangularMatrix.h	/^    inline const ConjugateReturnType conjugate() const$/;"	f	class:Eigen::TriangularView
conjugate	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::conjugate() const$/;"	f	class:Eigen::QuaternionBase
conjugate	Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType conjugate() const$/;"	f	class:Eigen::HouseholderSequence
conjugate	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^conjugate() const$/;"	f
conjugate_gradient	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^void conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index size)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	Eigen/src/SparseCore/SparseMatrix.h	/^    void conservativeResize(Index rows, Index cols) $/;"	f	class:Eigen::SparseMatrix
conservativeResize	Eigen/src/SparseCore/SparseVector.h	/^    void conservativeResize(Index newSize)$/;"	f	class:Eigen::SparseVector
conservativeResizeLike	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResizeLike(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
conservative_resize_like_impl	Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl$/;"	s	namespace:Eigen::internal
conservative_resize_like_impl	Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl<Derived,OtherDerived,true>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_impl	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, bool sortedInsertion = false)$/;"	f	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
const	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_blas_data_mapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper(const Scalar *data, Index stride) : blas_data_mapper<const Scalar, Index, StorageOrder>(data, stride) {}$/;"	f	class:Eigen::internal::const_blas_data_mapper
const_blas_data_mapper	Eigen/src/Core/util/BlasUtil.h	/^class const_blas_data_mapper : public blas_data_mapper<const Scalar, Index, StorageOrder> {$/;"	c	namespace:Eigen::internal
const_cast_derived	Eigen/src/Core/EigenBase.h	/^  inline Derived& const_cast_derived() const$/;"	f	struct:Eigen::EigenBase
const_cast_derived	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& const_cast_derived() const$/;"	f	class:Eigen::SparseMatrixBase
const_derived	Eigen/src/Core/EigenBase.h	/^  inline const Derived& const_derived() const$/;"	f	struct:Eigen::EigenBase
const_pointer	Eigen/src/Core/util/Memory.h	/^  typedef const T*        const_pointer;$/;"	t	class:Eigen::aligned_allocator
const_pointer	Eigen/src/StlSupport/details.h	/^    typedef const T*        const_pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
const_reference	Eigen/src/Core/util/Memory.h	/^  typedef const T&        const_reference;$/;"	t	class:Eigen::aligned_allocator
const_reference	Eigen/src/StlSupport/details.h	/^    typedef const T&        const_reference;$/;"	t	class:Eigen::aligned_allocator_indirection
construct	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC void construct(Expression& expr)$/;"	f	class:Eigen::RefBase
construct	Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	Eigen/src/SparseCore/SparseRef.h	/^  void construct(Expression& expr)$/;"	f	class:Eigen::internal::SparseRefBase
construct_elements_of_array	Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* construct_elements_of_array(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
construct_x_obs	models/inverse_model.hpp	/^    std::vector<Real*> construct_x_obs(Model*m)$/;"	f	class:InverseProblem
constructor_without_unaligned_array_assert	Eigen/src/Core/DenseStorage.h	/^struct constructor_without_unaligned_array_assert {};$/;"	s	namespace:Eigen::internal
contains	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool contains(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
convert_index	Eigen/src/Core/util/XprHelper.h	/^inline IndexDest convert_index(const IndexSrc& idx) {$/;"	f	namespace:Eigen::internal
convert_index	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex convert_index(Index idx)$/;"	f	class:Eigen::internal::AmbiVector
convert_index	Eigen/src/SparseCore/SparseMatrixBase.h	/^    static inline StorageIndex convert_index(const Index idx) {$/;"	f	class:Eigen::SparseMatrixBase
copyCoeff	Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, Other& other)$/;"	f	class:Eigen::TriangularBase
copyUV	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::copyUV(const HouseholderU &householderU, const HouseholderV &householderV, const NaiveU &naiveU, const NaiveV &naiveV)$/;"	f	class:Eigen::BDCSVD
copy_bool	Eigen/src/Core/util/Macros.h	/^    inline bool copy_bool(bool b) { return b; }$/;"	f	namespace:Eigen::internal
copy_to_ucol	Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^Index SparseLUImpl<Scalar,StorageIndex>::copy_to_ucol(const Index jcol, const Index nseg, IndexVector& segrep,$/;"	f	class:Eigen::internal::SparseLUImpl
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling<Kernel, Stop, Stop, SrcAlignment, DstAlignment>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_traits	Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_traits$/;"	s	namespace:Eigen::internal
corner	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType corner(CornerType corner) const$/;"	f	class:Eigen::AlignedBox
cos	Eigen/src/Core/MathFunctions.h	/^T cos(const T &x) {$/;"	f	namespace:Eigen::numext
cos	Eigen/src/Core/MathFunctions.h	/^double cos(const double &x) { return ::cos(x); }$/;"	f	namespace:Eigen::numext
cos	Eigen/src/Core/MathFunctions.h	/^float cos(const float &x) { return ::cosf(x); }$/;"	f	namespace:Eigen::numext
cos	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half cos(const half& a) {$/;"	f	namespace:Eigen::half_impl
cos	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cos() const$/;"	f
cosh	Eigen/src/Core/MathFunctions.h	/^T cosh(const T &x) {$/;"	f	namespace:Eigen::numext
cosh	Eigen/src/Core/MathFunctions.h	/^double cosh(const double &x) { return ::cosh(x); }$/;"	f	namespace:Eigen::numext
cosh	Eigen/src/Core/MathFunctions.h	/^float cosh(const float &x) { return ::coshf(x); }$/;"	f	namespace:Eigen::numext
cosh	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cosh() const$/;"	f
count	Eigen/src/Core/BooleanRedux.h	/^inline Eigen::Index DenseBase<Derived>::count() const$/;"	f	class:Eigen::DenseBase
count	Eigen/src/Core/VectorwiseOp.h	/^    const CountReturnType count() const$/;"	f	class:Eigen::VectorwiseOp
countnz	Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::countnz(const Index n, Index& nnzL, Index& nnzU, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
cpuid_is_vendor	Eigen/src/Core/util/Memory.h	/^inline bool cpuid_is_vendor(int abcd[4], const int vendor[3])$/;"	f	namespace:Eigen::internal
createWithNormalPerturbations	methods/core_methods.cpp	/^ConradNumericalMethod& ConradNumericalMethod::createWithNormalPerturbations( Model &m, int N, StepIntegrator &base_integrator )$/;"	f	class:ConradNumericalMethod
createWithUniformPerturbations	methods/core_methods.cpp	/^AbdulleGaregnaniMethod& AbdulleGaregnaniMethod::createWithUniformPerturbations( Model &m, int N, StepIntegrator &base_integrator )$/;"	f	class:AbdulleGaregnaniMethod
cross	Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross	Eigen/src/Geometry/OrthoMethods.h	/^VectorwiseOp<ExpressionType,Direction>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
cross3	Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross3(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross3_impl	Eigen/src/Geometry/OrthoMethods.h	/^struct cross3_impl {$/;"	s	namespace:Eigen::internal
cross3_impl	Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct cross3_impl<Architecture::SSE,VectorLhs,VectorRhs,float,true>$/;"	s	namespace:Eigen::internal
cross_product_return_type	Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> struct cross_product_return_type {$/;"	s	class:Eigen::MatrixBase
cs_tdfs	Eigen/src/OrderingMethods/Amd.h	/^StorageIndex cs_tdfs(StorageIndex j, StorageIndex k, StorageIndex *head, const StorageIndex *next, StorageIndex *post, StorageIndex *stack)$/;"	f	namespace:Eigen::internal
cs_wclear	Eigen/src/OrderingMethods/Amd.h	/^static StorageIndex cs_wclear (StorageIndex mark, StorageIndex lemax, StorageIndex *w, StorageIndex n)$/;"	f	namespace:Eigen::internal
cube	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cube() const$/;"	f
cur_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
cur_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
cur_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
cur_t	core_methods.hpp	/^    double cur_t;$/;"	m	class:NumericalMethod
cur_t	methods/core_methods.hpp	/^    Real cur_t;$/;"	m	class:NumericalMethod
cur_x	core_methods.hpp	/^    double *cur_x;$/;"	m	class:NumericalMethod
cur_x	methods/core_methods.hpp	/^    Real *cur_x;$/;"	m	class:NumericalMethod
cwiseAbs	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs() const { return CwiseAbsReturnType(derived()); }$/;"	f
cwiseAbs2	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs2() const { return CwiseAbs2ReturnType(derived()); }$/;"	f
cwiseEqual	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseEqual	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const Scalar& s) const$/;"	f
cwiseInverse	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseInverse() const { return CwiseInverseReturnType(derived()); }$/;"	f
cwiseMax	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMax	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const Scalar &other) const$/;"	f
cwiseMin	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMin	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const Scalar &other) const$/;"	f
cwiseNotEqual	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseNotEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseProduct	Eigen/src/Core/MatrixBase.h	/^    cwiseProduct(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
cwiseProduct	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::cwiseProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
cwiseProduct	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseQuotient	Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseQuotient(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseSign	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSign() const { return CwiseSignReturnType(derived()); }$/;"	f
cwiseSqrt	Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSqrt() const { return CwiseSqrtReturnType(derived()); }$/;"	f
d	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  double    d[2];$/;"	m	union:Eigen::internal::__anon513
d	build/study_err.py	/^    d = r1["var"]-r1["var"].shift(1)$/;"	v
d	smc/smc.hpp	/^    int d;$/;"	m	class:PF_SMC
d	smc/smc.hpp	/^    int d;$/;"	m	class:Stuart_SMC
data	Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Scalar* data() { return &(this->coeffRef(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return &(this->coeff(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return 0; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return 0; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	Eigen/src/Core/Diagonal.h	/^    inline ScalarWithConstIfNotLvalue* data() { return &(m_matrix.coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	Eigen/src/Core/Diagonal.h	/^    inline const Scalar* data() const { return &(m_matrix.coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return m_data.array; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() {$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::MapBase
data	Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } \/\/ no const-cast here so non-const-correct code will give a compile error$/;"	f	class:Eigen::MapBase
data	Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return this->m_data; }$/;"	f	class:Eigen::MapBase
data	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar *data()$/;"	f	class:Eigen::PlainObjectBase
data	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar *data() const$/;"	f	class:Eigen::PlainObjectBase
data	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::internal::blas_data_mapper
data	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	Eigen/src/SparseCore/SparseVector.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseVector
data	Eigen/src/SparseCore/SparseVector.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
dcomplex	Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<double> dcomplex;$/;"	t	namespace:Eigen
deallocate	Eigen/src/Core/util/Memory.h	/^  void deallocate(pointer p, size_type \/*num*\/)$/;"	f	class:Eigen::aligned_allocator
debug	Eigen/src/Core/AssignEvaluator.h	/^  static void debug()$/;"	f	struct:Eigen::internal::copy_using_evaluator_traits
debug	Eigen/src/Core/GeneralProduct.h	/^  static void debug()$/;"	f	struct:Eigen::internal::product_type
debug	Eigen/src/Core/Redux.h	/^  static void debug()$/;"	f	struct:Eigen::internal::redux_traits
debugName	Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	f	struct:Eigen::BandShape
debugName	Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	f	struct:Eigen::DenseShape
debugName	Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	f	struct:Eigen::DiagonalShape
debugName	Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	f	struct:Eigen::HomogeneousShape
debugName	Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	f	struct:Eigen::PermutationShape
debugName	Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	f	struct:Eigen::SelfAdjointShape
debugName	Eigen/src/Core/util/Constants.h	/^struct SolverShape            { static std::string debugName() { return "SolverShape"; } };$/;"	f	struct:Eigen::SolverShape
debugName	Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	f	struct:Eigen::SparseShape
debugName	Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	f	struct:Eigen::TranspositionsShape
debugName	Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	f	struct:Eigen::TriangularShape
debugName	Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	f	struct:Eigen::internal::SparseSelfAdjointShape
debugName	Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	f	struct:Eigen::internal::SparseTriangularShape
dec	Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec() const { return m_dec; }$/;"	f	class:Eigen::Solve
dec	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec()   const { return m_dec; }$/;"	f	class:Eigen::SolveWithGuess
dec	Eigen/src/misc/Image.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::image_retval_base
dec	Eigen/src/misc/Kernel.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::kernel_retval_base
decrement_size	Eigen/src/Householder/Householder.h	/^template<int n> struct decrement_size$/;"	s	namespace:Eigen::internal
defaultL1CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 16*1024;$/;"	m	namespace:Eigen::internal
defaultL1CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 32*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 256*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 2*1024*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
default_alignment	Eigen/src/Core/Matrix.h	/^      default_alignment = compute_default_alignment<_Scalar,max_size>::value,$/;"	e	enum:Eigen::internal::traits::__anon450
default_digits10_impl	Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl$/;"	s	namespace:Eigen::internal
default_digits10_impl	Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl<T,false,false> \/\/ Floating point$/;"	s	namespace:Eigen::internal
default_digits10_impl	Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl<T,false,true> \/\/ Integer$/;"	s	namespace:Eigen::internal
default_mr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    default_mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
default_packet_traits	Eigen/src/Core/GenericPacketMath.h	/^struct default_packet_traits$/;"	s	namespace:Eigen::internal
default_prunning_func	Eigen/src/SparseCore/SparseMatrix.h	/^    default_prunning_func(const Scalar& ref, const RealScalar& eps) : reference(ref), epsilon(eps) {}$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
default_prunning_func	Eigen/src/SparseCore/SparseMatrix.h	/^  struct default_prunning_func {$/;"	s	class:Eigen::SparseMatrix
deflation	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation(Index firstCol, Index lastCol, Index k, Index firstRowW, Index firstColW, Index shift)$/;"	f	class:Eigen::BDCSVD
deflation43	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation43(Index firstCol, Index shift, Index i, Index size)$/;"	f	class:Eigen::BDCSVD
deflation44	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation44(Index firstColu , Index firstColm, Index firstRowW, Index firstColW, Index i, Index j, Index size)$/;"	f	class:Eigen::BDCSVD
degree	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree ;  \/* number of principal & non-principal columns in row *\/$/;"	m	union:internal::Colamd_Row::__anon653
degree_next	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree_next ; \/* next column, if col is in a degree list *\/$/;"	m	union:internal::colamd_col::__anon652
denorm_min	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half denorm_min() { return Eigen::half_impl::raw_uint16_to_half(0x1); }$/;"	f	struct:std::numeric_limits
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, SliceVectorizedTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_product_base	Eigen/src/Core/Product.h	/^class dense_product_base$/;"	c	namespace:Eigen::internal
dense_product_base	Eigen/src/Core/Product.h	/^class dense_product_base<Lhs, Rhs, Option, InnerProduct>$/;"	c	namespace:Eigen::internal
dense_xpr_base_dispatcher	Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::doxygen
dense_xpr_base_dispatcher	Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::doxygen
density	models/inverse_model.cpp	/^Real InverseProblem::density(std::vector<Real> & params)$/;"	f	class:InverseProblem
density	models/inverse_model.hpp	/^    Real density(Real *x)$/;"	f	class:InverseProblem
density	tools/random_variable.hpp	/^    Real density(Real *x) { return exp(-10*pow(x[0]*x[0]-x[1],2)-pow(x[1]-1\/4.0,4)); } \/\/ up to multiplicative constant, which is irrelevant for MCMC method..$/;"	f	class:SarkaDistribution
density	tools/random_variable.hpp	/^    Real density(Real *x) {fprintf(stderr,"Density is not defined for UniformDistribution"); abort(); }$/;"	f	class:UniformDistribution
density	tools/random_variable.hpp	/^    Real density(Real *x)$/;"	f	class:NormalDistribution
density	tools/random_variable.hpp	/^  Real virtual density(Real*x){fprintf(stderr,"Density calculation of random variable not implemented");abort();return 1.0;}$/;"	f	class:RandomVariable
depth_select	Eigen/src/Core/GeneralProduct.h	/^    depth_select = product_size_category<Depth,MaxDepth>::value$/;"	e	enum:Eigen::internal::product_type::__anon589
deque	Eigen/src/StlSupport/StdDeque.h	/^  class deque<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
deque_base	Eigen/src/StlSupport/StdDeque.h	/^                Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > deque_base;$/;"	t	class:std::deque
derived	Eigen/src/Core/DiagonalMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	Eigen/src/Core/DiagonalMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	Eigen/src/Core/EigenBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	Eigen/src/Core/EigenBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	Eigen/src/Core/Transpositions.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	Eigen/src/Core/Transpositions.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	Eigen/src/Core/TriangularMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	Eigen/src/Core/TriangularMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	Eigen/src/SVD/SVDBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	Eigen/src/SVD/SVDBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	Eigen/src/SparseCore/SparseSolverBase.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
derived	Eigen/src/SparseCore/SparseSolverBase.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
destruct_elements_of_array	Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void destruct_elements_of_array(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
detect_super_cols	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void detect_super_cols$/;"	f	namespace:internal
determinant	Eigen/src/CholmodSupport/CholmodSupport.h	/^    Scalar determinant() const$/;"	f	class:Eigen::CholmodBase
determinant	Eigen/src/Core/PermutationMatrix.h	/^    Index determinant() const$/;"	f	class:Eigen::PermutationBase
determinant	Eigen/src/Core/TriangularMatrix.h	/^    Scalar determinant() const$/;"	f	class:Eigen::TriangularView
determinant	Eigen/src/LU/Determinant.h	/^inline typename internal::traits<Derived>::Scalar MatrixBase<Derived>::determinant() const$/;"	f	class:Eigen::MatrixBase
determinant	Eigen/src/LU/FullPivLU.h	/^typename internal::traits<MatrixType>::Scalar FullPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::FullPivLU
determinant	Eigen/src/LU/PartialPivLU.h	/^typename PartialPivLU<MatrixType>::Scalar PartialPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::PartialPivLU
determinant	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialCholesky
determinant	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLDLT
determinant	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLLT
determinant	Eigen/src/SparseLU/SparseLU.h	/^    Scalar determinant()$/;"	f	class:Eigen::SparseLU
determinant	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^typename SuperLU<MatrixType>::Scalar SuperLU<MatrixType>::determinant() const$/;"	f	class:Eigen::SuperLU
determinant	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^typename UmfPackLU<MatrixType>::Scalar UmfPackLU<MatrixType>::determinant() const$/;"	f	class:Eigen::UmfPackLU
determinant_impl	Eigen/src/LU/Determinant.h	/^> struct determinant_impl$/;"	s	namespace:Eigen::internal
determinant_impl	Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 1>$/;"	s	namespace:Eigen::internal
determinant_impl	Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 2>$/;"	s	namespace:Eigen::internal
determinant_impl	Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 3>$/;"	s	namespace:Eigen::internal
determinant_impl	Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 4>$/;"	s	namespace:Eigen::internal
device	Eigen/src/Core/util/Meta.h	/^namespace device {$/;"	n	namespace:Eigen::internal
df	build/compare_schemes.py	/^            df = pd.read_csv("{}\/{}{}.txt".format(problem,tp,i+1))$/;"	v
df	build/plot_all_paths.py	/^        df = pd.read_csv("{}\/{}{}.txt".format(problem,scheme,i+1))$/;"	v
df	build/plot_function_conf_bounds.py	/^    df = pd.read_csv("pcn_res.txt")$/;"	v
df	build/study_err.py	/^        df = pd.read_csv("{}\/{}{}.txt".format(problem,tp,len(f_stats)))$/;"	v
dfs_kernel	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::dfs_kernel(const StorageIndex jj, IndexVector& perm_r,$/;"	f	class:Eigen::internal::SparseLUImpl
diagonal	Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,Dynamic> diagonal(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,SizeAtCompileTime> diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,Dynamic> diagonal(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,SizeAtCompileTime> diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/BandMatrix.h	/^    template<int N> inline const typename DiagonalIntReturnType<N>::Type diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/BandMatrix.h	/^    template<int N> inline typename DiagonalIntReturnType<N>::Type diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal() const$/;"	f	class:Eigen::MatrixBase
diagonal	Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal()$/;"	f	class:Eigen::MatrixBase
diagonal	Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index) const$/;"	f	class:Eigen::MatrixBase
diagonal	Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index)$/;"	f	class:Eigen::MatrixBase
diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalWrapper
diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	Eigen/src/Core/SelfAdjointView.h	/^    typename MatrixType::ConstDiagonalReturnType diagonal() const$/;"	f	class:Eigen::SelfAdjointView
diagonal	Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::diagonal() const$/;"	f	class:Eigen::Tridiagonalization
diagonal	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline CwiseBinaryOp< internal::scalar_difference_op<Scalar,Scalar>, const VectorType, const VectorType> diagonal() const$/;"	f	class:Eigen::AlignedBox
diagonal	Eigen/src/SparseCore/SparseMatrix.h	/^    DiagonalReturnType diagonal() { return DiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonal	Eigen/src/SparseCore/SparseMatrix.h	/^    const ConstDiagonalReturnType diagonal() const { return ConstDiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonalLength	Eigen/src/Core/BandMatrix.h	/^    inline Index diagonalLength(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonalSize	Eigen/src/Core/MatrixBase.h	/^    inline Index diagonalSize() const { return (numext::mini)(rows(),cols()); }$/;"	f	class:Eigen::MatrixBase
diagonal_product_evaluator_base	Eigen/src/Core/ProductEvaluators.h	/^  diagonal_product_evaluator_base(const MatrixType &mat, const DiagonalType &diag)$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
diagonal_product_evaluator_base	Eigen/src/Core/ProductEvaluators.h	/^struct diagonal_product_evaluator_base$/;"	s	namespace:Eigen::internal
diff	build/study_err.py	/^    diff =r_approximated-r_interp$/;"	v
difference_type	Eigen/src/Core/util/Memory.h	/^  typedef std::ptrdiff_t  difference_type;$/;"	t	class:Eigen::aligned_allocator
difference_type	Eigen/src/StlSupport/details.h	/^    typedef std::ptrdiff_t  difference_type;$/;"	t	class:Eigen::aligned_allocator_indirection
digamma	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^digamma() const$/;"	f
digits	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int digits = 11;$/;"	m	struct:std::numeric_limits
digits10	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int digits10 = 2;$/;"	m	struct:std::numeric_limits
dim	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size() : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::AlignedBox
dim	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_coeffs.size()-1 : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	models/inverse_model.hpp	/^    int dim(){return Real_params.size() ;}$/;"	f	class:InverseProblem
dim	models/models.hpp	/^    int dim;$/;"	m	class:Equation
dim	models/models.hpp	/^    int dim;$/;"	m	class:Model
dim	tools/random_variable.hpp	/^    int dim() { return 1;}$/;"	f	class:NormalDistribution
dim	tools/random_variable.hpp	/^    int dim() { return 1;}$/;"	f	class:UniformDistribution
dim	tools/random_variable.hpp	/^    int dim() { return 2;}$/;"	f	class:SarkaDistribution
dim	tools/random_variable.hpp	/^    int dim(){return dim_val;}$/;"	f	class:DiscreteDirac
dim_val	tools/random_variable.hpp	/^  int dim_val;$/;"	m	class:DiscreteDirac
dimensionOfKernel	Eigen/src/LU/FullPivLU.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivLU
dimensionOfKernel	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::ColPivHouseholderQR
dimensionOfKernel	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index dimensionOfKernel() const { return m_cpqr.dimensionOfKernel(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
dimensionOfKernel	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivHouseholderQR
direct_selfadjoint_eigenvalues	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^struct direct_selfadjoint_eigenvalues<SolverType,2,false>$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,3,false>$/;"	s	namespace:Eigen::internal
direction	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
directional_eigenval	models/models.cpp	/^Real Equation::directional_eigenval(const Real *y0,const Real* y1)$/;"	f	class:Equation
distance	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC RealScalar distance(const VectorType& p) const { EIGEN_USING_STD_MATH(sqrt) return sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
distribution	tools/random_variable.hpp	/^    std::normal_distribution<double> distribution;$/;"	m	class:NormalDistribution
distribution	tools/random_variable.hpp	/^    std::uniform_real_distribution<double> distribution;$/;"	m	class:UniformDistribution
div_assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar, typename SrcScalar=DstScalar> struct div_assign_op {$/;"	s	namespace:Eigen::internal
div_ceil	Eigen/src/Core/util/Meta.h	/^T div_ceil(const T &a, const T &b)$/;"	f	namespace:numext
divide	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::divide (Index firstCol, Index lastCol, Index firstRowW, Index firstColW, Index shift)$/;"	f	class:Eigen::BDCSVD
dn	models/models.hpp	/^    int dn;$/;"	m	class:Brusselator
doComputeEigenvectors	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::doComputeEigenvectors(RealScalar matrixnorm)$/;"	f	class:Eigen::ComplexEigenSolver
doComputeEigenvectors	Eigen/src/Eigenvalues/EigenSolver.h	/^void EigenSolver<MatrixType>::doComputeEigenvectors()$/;"	f	class:Eigen::EigenSolver
do_error_estimation	core_methods.hpp	/^    bool do_error_estimation;$/;"	m	class:StepIntegrator
do_error_estimation	methods/core_methods.hpp	/^    bool do_error_estimation;$/;"	m	class:StepIntegrator
dot	Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
dot	Eigen/src/Geometry/Quaternion.h	/^  template<class OtherDerived> EIGEN_DEVICE_FUNC inline Scalar dot(const QuaternionBase<OtherDerived>& other) const { return coeffs().dot(other.coeffs()); }$/;"	f	class:Eigen::QuaternionBase
dot	Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot_nocheck	Eigen/src/Core/Dot.h	/^struct dot_nocheck$/;"	s	namespace:Eigen::internal
dot_nocheck	Eigen/src/Core/Dot.h	/^struct dot_nocheck<T, U, true>$/;"	s	namespace:Eigen::internal
doxygen	Eigen/src/Core/PlainObjectBase.h	/^namespace doxygen {$/;"	n	namespace:Eigen
dparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<double,DPARM_SIZE,1>& dparm()$/;"	f	class:Eigen::PastixBase
dparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    double& dparm(int idxparam)$/;"	f	class:Eigen::PastixBase
dstDataPtr	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC const Scalar* dstDataPtr() const$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dstEvaluator	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC DstEvaluatorType& dstEvaluator() { return m_dst; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dummy_precision	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half dummy_precision() { return Eigen::half(1e-2f); }$/;"	f	struct:Eigen::NumTraits
dumpMemory	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::CholmodBase
dumpMemory	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SimplicialCholeskyBase
dumpMemory	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::SuperLUBase
dx	models/models.hpp	/^    Real dx;$/;"	m	class:Brusselator
e	adaptive_timestepping.cpp	/^Real e = 2.7182818284;$/;"	v
e	build/study_err.py	/^    e = pd.ewma(r1["var"],span=2.3)$/;"	v
ei_declare_aligned_stack_constructed_variable	Eigen/src/Core/util/Memory.h	634;"	d
eigen_assert	Eigen/src/Core/util/Macros.h	577;"	d
eigen_internal_assert	Eigen/src/Core/util/Macros.h	581;"	d
eigen_packet_wrapper	Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper() {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper(const T &v) : m_val(v) {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	Eigen/src/Core/arch/SSE/PacketMath.h	/^struct eigen_packet_wrapper$/;"	s	namespace:Eigen::internal
eigen_pastix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, double *vals, int *perm, int * invp, double *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, float *vals, int *perm, int * invp, float *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<double> *vals, int *perm, int * invp, std::complex<double> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<float> *vals, int *perm, int * invp, std::complex<float> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_plain_assert	Eigen/src/Core/util/Macros.h	539;"	d
eigen_plain_assert	Eigen/src/Core/util/Macros.h	547;"	d
eigen_unaligned_array_assert_workaround_gcc47	Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALWAYS_INLINE PtrType eigen_unaligned_array_assert_workaround_gcc47(PtrType array) { return array; }$/;"	f	namespace:Eigen::internal
eigenvalues	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvalues	Eigen/src/Eigenvalues/EigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::EigenSolver
eigenvalues	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvalueType eigenvalues() const$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvalues	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::eigenvalues() const$/;"	f	class:Eigen::MatrixBase
eigenvalues	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::eigenvalues() const$/;"	f	class:Eigen::SelfAdjointView
eigenvalues	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const RealVectorType& eigenvalues() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvalues_selector	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector$/;"	s	namespace:Eigen::internal
eigenvalues_selector	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector<Derived, false>$/;"	s	namespace:Eigen::internal
eigenvectors	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvectorType& eigenvectors() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvectors	Eigen/src/Eigenvalues/EigenSolver.h	/^typename EigenSolver<MatrixType>::EigenvectorsType EigenSolver<MatrixType>::eigenvectors() const$/;"	f	class:Eigen::EigenSolver
eigenvectors	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvectorsType eigenvectors() const {$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvectors	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const EigenvectorsType& eigenvectors() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigvec_prev	models/models.hpp	/^    Real *eigvec_tmp1,*eigvec_tmp2,*eigvec_tmp3,*eigvec_prev;$/;"	m	class:Equation
eigvec_tmp1	models/models.hpp	/^    Real *eigvec_tmp1,*eigvec_tmp2,*eigvec_tmp3,*eigvec_prev;$/;"	m	class:Equation
eigvec_tmp2	models/models.hpp	/^    Real *eigvec_tmp1,*eigvec_tmp2,*eigvec_tmp3,*eigvec_prev;$/;"	m	class:Equation
eigvec_tmp3	models/models.hpp	/^    Real *eigvec_tmp1,*eigvec_tmp2,*eigvec_tmp3,*eigvec_prev;$/;"	m	class:Equation
elseMatrix	Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ElseMatrixType& elseMatrix() const$/;"	f	class:Eigen::Select
emptyIdxLU	Eigen/src/SparseLU/SparseLU_Memory.h	/^enum {emptyIdxLU = -1};$/;"	e	enum:Eigen::internal::__anon123
enable_if	Eigen/src/Core/util/Meta.h	/^template<typename T> struct enable_if<true,T>$/;"	s	namespace:Eigen::internal
enable_if_ref	Eigen/src/LU/PartialPivLU.h	/^struct enable_if_ref<Ref<T>,Derived> {$/;"	s	namespace:Eigen::internal
endFill	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::SparseVector
eps	methods/core_methods.cpp	/^const double eps=1e-8;$/;"	v
eps	models/models.cpp	/^Real eps=std::numeric_limits<Real>::epsilon();$/;"	v
epsilon	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half epsilon() {$/;"	f	struct:Eigen::NumTraits
epsilon	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half epsilon() { return Eigen::half_impl::raw_uint16_to_half(0x0800); }$/;"	f	struct:std::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static T epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static double epsilon() { return __DBL_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static float epsilon() { return __FLT_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static int epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static long long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static unsigned int epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static unsigned long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/Core/util/Meta.h	/^  static unsigned long long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	Eigen/src/SparseCore/SparseMatrix.h	/^    RealScalar epsilon;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
epsilon	Eigen/src/SparseCore/SparseView.h	/^  RealScalar epsilon() const { return m_epsilon; }$/;"	f	class:Eigen::SparseView
eq	core_methods.hpp	/^    Equation *eq;$/;"	m	class:StepIntegrator
eq	methods/core_methods.hpp	/^    Equation *eq;$/;"	m	class:StepIntegrator
equation	models/models.hpp	/^    Equation* equation;$/;"	m	class:Model
erf	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^erf() const$/;"	f
erfc	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^erfc() const$/;"	f
err	build/compare_schemes.py	/^                err = pd.DataFrame(columns=df.columns)$/;"	v
err	build/compare_schemes.py	/^            err=err.append(df.iloc[-1])$/;"	v
err	build/compare_schemes.py	/^        err=err-exact_sol$/;"	v
error	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar error() const$/;"	f	class:Eigen::IterativeSolverBase
error	core_methods.hpp	/^    double error;$/;"	m	class:StepIntegrator
error	methods/core_methods.hpp	/^    Real error;$/;"	m	class:StepIntegrator
essentialVector	Eigen/src/Householder/HouseholderSequence.h	/^    const EssentialVectorType essentialVector(Index k) const$/;"	f	class:Eigen::HouseholderSequence
essentialVector	Eigen/src/Householder/HouseholderSequence.h	/^  static inline const EssentialVectorType essentialVector(const HouseholderSequenceType& h, Index k)$/;"	f	struct:Eigen::internal::hseq_side_dependent_impl
estimate_parameters	smc/pf_smc.cpp	/^std::vector<Particle> PF_SMC::estimate_parameters()$/;"	f	class:PF_SMC
estimate_parameters	smc/stuart_smc.cpp	/^std::vector<Particle> Stuart_SMC::estimate_parameters()$/;"	f	class:Stuart_SMC
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etree_find	Eigen/src/SparseCore/SparseColEtree.h	/^Index etree_find (Index i, IndexVector& pp)$/;"	f	namespace:Eigen::internal
eulerAngles	Eigen/src/Geometry/EulerAngles.h	/^MatrixBase<Derived>::eulerAngles(Index a0, Index a1, Index a2) const$/;"	f	class:Eigen::MatrixBase
eval	Eigen/src/Core/DenseBase.h	/^    EIGEN_STRONG_INLINE EvalReturnType eval() const$/;"	f	class:Eigen::DenseBase
eval	Eigen/src/Core/PermutationMatrix.h	/^    PlainPermutationType eval() const { return derived(); }$/;"	f	class:Eigen::InverseImpl
eval	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const typename internal::eval<Derived>::type eval() const$/;"	f	class:Eigen::SparseMatrixBase
eval	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct eval<T,Sparse>$/;"	s	namespace:Eigen::internal
eval	models/models.cpp	/^void Brusselator::eval(const Real *y0, Real *y1)$/;"	f	class:Brusselator
eval	models/models.cpp	/^void FitzHughNagumo::eval(const Real *y0,Real *y1)$/;"	f	class:FitzHughNagumo
eval	models/models.cpp	/^void Lorenz::eval(const Real *y0,Real *y1)$/;"	f	class:Lorenz
eval	models/models.cpp	/^void PeroxideOxideEquation::eval(const Real *y0,Real *y1)$/;"	f	class:PeroxideOxideEquation
eval	models/models.cpp	/^void TestEquation::eval(const Real *y0, Real *y1 )$/;"	f	class:TestEquation
evalTo	Eigen/src/Core/ArrayWrapper.h	/^    inline void evalTo(Dest& dst) const { dst = m_expression; }$/;"	f	class:Eigen::ArrayWrapper
evalTo	Eigen/src/Core/BandMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::internal::BandMatrixBase
evalTo	Eigen/src/Core/DenseBase.h	/^    inline void evalTo(Dest& ) const$/;"	f	class:Eigen::DenseBase
evalTo	Eigen/src/Core/EigenBase.h	/^  inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
evalTo	Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::InverseImpl
evalTo	Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::PermutationBase
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static inline void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Inverse<Lhs>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Inverse<Rhs>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Transpose<Rhs>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Transpose<Lhs>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Core/ReturnByValue.h	/^    inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::ReturnByValue
evalTo	Eigen/src/Core/SolveTriangular.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::triangular_solve_retval
evalTo	Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTo	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
evalTo	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const Homogeneous<LhsArg,Horizontal>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const Lhs& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const TransformType& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> EIGEN_DEVICE_FUNC void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
evalTo	Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> EIGEN_DEVICE_FUNC void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
evalTo	Eigen/src/Householder/HouseholderSequence.h	/^    template<typename DestType> inline void evalTo(DestType& dst) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	Eigen/src/Householder/HouseholderSequence.h	/^    void evalTo(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval
evalTo	Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval
evalTo	Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result, WorkVectorType& workspace) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  void evalTo(ResType& res) const$/;"	f	struct:Eigen::SPQR_QProduct
evalTo	Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, DenseShape)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, SparseShape)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	Eigen/src/SparseQR/SparseQR.h	/^  void evalTo(DesType& res) const$/;"	f	struct:Eigen::SparseQR_QProduct
evalTo	Eigen/src/misc/Image.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval_base
evalTo	Eigen/src/misc/Kernel.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval_base
evalToLazy	Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalToLazy(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evaluateProductBlockingSizesHeuristic	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void evaluateProductBlockingSizesHeuristic(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator()$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator(const ArgType& arg)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const PlainObjectType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const T& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& block) : block_evaluator_type(block)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& diagonal)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& n)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& ref)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& select)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^  explicit evaluator(const T& xpr) : evaluator<T>(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator : public unary_evaluator<T>$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseNullaryOp<NullaryOp,PlainObjectType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Diagonal<ArgType, DiagIndex> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PartialReduxExpr<ArgType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PlainObjectBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Ref<PlainObjectType, RefOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<const T>$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<CwiseBinaryOp<internal::scalar_product_op<Scalar1,Scalar2>,$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> > $/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Product<Lhs, Rhs, Options> > $/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/ReturnByValue.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/ReturnByValue.h	/^struct evaluator<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/Core/Solve.h	/^struct evaluator<Solve<Decomposition,RhsType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct evaluator<SolveWithGuess<Decomposition,RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/MappedSparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/MappedSparseMatrix.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct evaluator<MappedSparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseCompressedBase.h	/^  evaluator() : m_matrix(0), m_zero(0)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseCompressedBase.h	/^  explicit evaluator(const Derived &mat) : m_matrix(&mat), m_zero(0)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseCompressedBase.h	/^struct evaluator<SparseCompressedBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseMap.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseMap.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseMatrix.h	/^  explicit evaluator(const SparseMatrixType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseMatrix.h	/^struct evaluator<SparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseRef.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseRef.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	Eigen/src/SparseCore/SparseVector.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseVector.h	/^  explicit evaluator(const SparseVectorType &mat) : m_matrix(&mat)$/;"	f	struct:Eigen::internal::evaluator
evaluator	Eigen/src/SparseCore/SparseVector.h	/^struct evaluator<SparseVector<_Scalar,_Options,_Index> >$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_assume_aliasing {$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_difference_op<typename OtherXpr::Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, const OtherXpr,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_product_op<Scalar1,Scalar2>,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_sum_op<typename OtherXpr::Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, const OtherXpr,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<Product<Lhs, Rhs, DefaultProduct> > {$/;"	s	namespace:Eigen::internal
evaluator_base	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_base : public noncopyable$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits : public evaluator_traits_base<T>$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Core/SelfAdjointView.h	/^struct evaluator_traits<SelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Core/TriangularMatrix.h	/^struct evaluator_traits<TriangularView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Geometry/Homogeneous.h	/^struct evaluator_traits<Homogeneous<ArgType,Direction> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/Householder/HouseholderSequence.h	/^struct evaluator_traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct evaluator_traits<SparseSelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	Eigen/src/SparseQR/SparseQR.h	/^struct evaluator_traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
evaluator_traits_base	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits_base$/;"	s	namespace:Eigen::internal
evaluator_wrapper_base	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator_wrapper_base(const ArgType& arg) : m_argImpl(arg) {}$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
evaluator_wrapper_base	Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_wrapper_base$/;"	s	namespace:Eigen::internal
exact_sol	build/compare_schemes.py	/^    exact_sol = pd.read_csv("{}\/exact.txt".format(problem)).iloc[-1]$/;"	v
exp	Eigen/src/Core/MathFunctions.h	/^T exp(const T &x) {$/;"	f	namespace:Eigen::numext
exp	Eigen/src/Core/MathFunctions.h	/^double exp(const double &x) { return ::exp(x); }$/;"	f	namespace:Eigen::numext
exp	Eigen/src/Core/MathFunctions.h	/^float exp(const float &x) { return ::expf(x); }$/;"	f	namespace:Eigen::numext
exp	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half exp(const half& a) {$/;"	f	namespace:Eigen::half_impl
exp	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^exp() const$/;"	f
expand	Eigen/src/SparseLU/SparseLU_Memory.h	/^Index  SparseLUImpl<Scalar,StorageIndex>::expand(VectorType& vec, Index& length, Index nbElts, Index keep_prev, Index& num_expansions) $/;"	f	class:Eigen::internal::SparseLUImpl
exph	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half exph(const Eigen::half& a) {$/;"	f
expression	Eigen/src/Core/NoAlias.h	/^    ExpressionType& expression() const$/;"	f	class:Eigen::NoAlias
extend	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& extend(const MatrixBase<Derived>& p)$/;"	f	class:Eigen::AlignedBox
extendedTo	Eigen/src/Core/VectorwiseOp.h	/^    extendedTo(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
extendedToOpposite	Eigen/src/Core/VectorwiseOp.h	/^    extendedToOpposite(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
exteriorDistance	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline NonInteger exteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline NonInteger exteriorDistance(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
extract	Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.lhs()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.rhs()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return ExtractType(Base::extract(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extract	Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extractData	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLUBase<MatrixType,Derived>::extractData() const$/;"	f	class:Eigen::SuperLUBase
extractData	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^void UmfPackLU<MatrixType>::extractData() const$/;"	f	class:Eigen::UmfPackLU
extractScalarFactor	Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return conj(Base::extractScalarFactor(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x)$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	Eigen/src/Core/util/BlasUtil.h	/^  static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }$/;"	f	struct:Eigen::internal::blas_traits
extract_data	Eigen/src/Core/util/BlasUtil.h	/^template<typename T> const typename T::Scalar* extract_data(const T& m)$/;"	f	namespace:Eigen::internal
extract_data_selector	Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector {$/;"	s	namespace:Eigen::internal
extract_data_selector	Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector<T,false> {$/;"	s	namespace:Eigen::internal
extract_kernel	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline bool extract_kernel(MatrixType& mat, Ref<VectorType> res, Ref<VectorType> representative)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
f	Eigen/src/Core/arch/CUDA/Half.h	/^  float f;$/;"	m	union:Eigen::half_impl::FP32
f_evals	methods/core_methods.hpp	/^    int f_evals=0;$/;"	m	class:NumericalMethod
f_evals	methods/stabilized_methods.hpp	/^    int f_evals=0;$/;"	m	class:RKC
f_evals	methods/stabilized_methods.hpp	/^    int f_evals=0;$/;"	m	class:ROCK2
f_files	build/compare_schemes.py	/^        f_files =[]$/;"	v
f_files	build/study_err.py	/^        f_files =[]$/;"	v
f_print	methods/core_methods.hpp	/^    FILE *f_print=0;$/;"	m	class:NumericalMethod
f_rho_evals	methods/adaptive_methods.hpp	/^    int f_rho_evals=0;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
f_rho_evals	methods/adaptive_methods.hpp	/^    int f_rho_evals=0;$/;"	m	class:ClassicalAdaptiveScheme
f_rho_evals	methods/adaptive_methods.hpp	/^    int f_rho_evals=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
f_rho_evals	methods/adaptive_methods.hpp	/^    int f_rho_evals=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
f_stats	build/compare_schemes.py	/^        f_stats=pd.read_csv("{}\/stats_{}.txt".format(problem,tp))$/;"	v
f_stats	build/plot_all_paths.py	/^    f_stats=pd.read_csv("{}\/stats_{}.txt".format(problem,scheme))$/;"	v
f_stats	build/study_err.py	/^        f_stats=pd.read_csv("{}\/stats_{}.txt".format(problem,tp))$/;"	v
fabsh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half fabsh(const Eigen::half& a) {$/;"	f
fac	methods/adaptive_methods.hpp	/^    const Real fac = 0.8;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
fac	methods/adaptive_methods.hpp	/^    const Real fac = 0.8;$/;"	m	class:ClassicalAdaptiveScheme
fac	methods/adaptive_methods.hpp	/^    const Real fac = 0.8;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
fac	methods/adaptive_methods.hpp	/^    const Real fac = 0.8;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
factor	Eigen/src/Geometry/Scaling.h	/^  inline Scalar& factor() { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	Eigen/src/Geometry/Scaling.h	/^  inline const Scalar& factor() const { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factorize	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
factorize	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
factorize	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& factorize(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
factorize	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
factorize	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^void IncompleteCholesky<Scalar,_UpLo, OrderingType>::factorize(const _MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
factorize	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::factorize(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
factorize	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& factorize(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
factorize	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
factorize	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
factorize	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
factorize	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::factorize(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
factorize	Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::factorize(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
factorize	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
factorize	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholeskyBase
factorize	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
factorize	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
factorize	Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::factorize(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
factorize	Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::factorize(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
factorize	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperILU
factorize	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperLU
factorize	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
factorize_impl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize_impl()$/;"	f	class:Eigen::UmfPackLU
factorize_preordered	Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::factorize_preordered(const CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
false_type	Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
features	cmake-build-debug/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	cmake-build-debug/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fig	build/plot_2d_solution.py	/^    fig = plt.figure()$/;"	v
files	build/compare_schemes.py	/^    files = os.listdir(problem)$/;"	v
files	build/study_err.py	/^    files = os.listdir(problem)$/;"	v
fill	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void DenseBase<Derived>::fill(const Scalar& val)$/;"	f	class:Eigen::DenseBase
fill	Eigen/src/Core/TriangularMatrix.h	/^    void fill(const Scalar& value) { setConstant(value); }$/;"	f	class:Eigen::TriangularViewImpl
fill	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index i)$/;"	f	class:Eigen::SparseVector
fill	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fillfactor	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index fillfactor; \/\/ The estimated fills factors for L and U, compared with A$/;"	m	struct:Eigen::internal::perfvalues
fillrand	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index i)$/;"	f	class:Eigen::SparseVector
fillrand	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index r, Index c)$/;"	f	class:Eigen::SparseVector
finalize	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void finalize()$/;"	f	class:Eigen::SparseMatrix
finalize	Eigen/src/SparseCore/SparseVector.h	/^    inline void finalize() {}$/;"	f	class:Eigen::SparseVector
find	Eigen/src/SparseCore/SparseCompressedBase.h	/^  Index find(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
findSmallDiagEntry	Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallDiagEntry(Index f, Index l)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	Eigen/src/Eigenvalues/RealSchur.h	/^inline Index RealSchur<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealSchur
find_ordering	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType find_ordering \/* return the number of garbage collections *\/$/;"	f	namespace:internal
finished	Eigen/src/Core/CommaInitializer.h	/^  inline XprType& finished() {$/;"	f	struct:Eigen::CommaInitializer
first	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet first;$/;"	m	struct:Eigen::internal::DoublePacket
firstAligned	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC Index firstAligned(Index size) const {$/;"	f	class:Eigen::internal::blas_data_mapper
first_aligned	Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_aligned	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline Index first_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_aligned_impl	Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl$/;"	s	namespace:Eigen::internal
first_aligned_impl	Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl<Alignment, Derived, false>$/;"	s	namespace:Eigen::internal
first_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef Arg1 first_argument_type;$/;"	t	struct:Eigen::internal::binary_op_base
first_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::first_argument_type  first_argument_type;$/;"	t	struct:Eigen::internal::bind1st_op
first_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::first_argument_type  first_argument_type;$/;"	t	struct:Eigen::internal::bind2nd_op
first_column	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType first_column ;\/* first column in row (used in garbage collection) *\/$/;"	m	union:internal::Colamd_Row::__anon654
first_default_aligned	Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_default_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_default_aligned	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline Index first_default_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_multiple	Eigen/src/Core/util/Memory.h	/^inline Index first_multiple(Index size, Index base)$/;"	f	namespace:Eigen::internal
fixupL	Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::fixupL(const Index n, const IndexVector& perm_r, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
flagged	Eigen/src/Core/DenseBase.h	/^    const Derived& flagged() const$/;"	f	class:Eigen::DenseBase
flags	Eigen/src/Core/IO.h	/^  int flags;$/;"	m	struct:Eigen::IOFormat
float_to_half_rtne	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC __half float_to_half_rtne(float ff) {$/;"	f	namespace:Eigen::half_impl
floor	Eigen/src/Core/MathFunctions.h	/^T (floor)(const T& x)$/;"	f	namespace:Eigen::numext
floor	Eigen/src/Core/MathFunctions.h	/^double floor(const double &x) { return ::floor(x); }$/;"	f	namespace:Eigen::numext
floor	Eigen/src/Core/MathFunctions.h	/^float floor(const float &x) { return ::floorf(x); }$/;"	f	namespace:Eigen::numext
floor	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half floor(const half& a) {$/;"	f	namespace:Eigen::half_impl
floor	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^floor() const$/;"	f
floorh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half floorh(const Eigen::half& a) {$/;"	f
fmod	Eigen/src/Core/MathFunctions.h	/^T fmod(const T& a, const T& b) {$/;"	f	namespace:Eigen::numext
fmod	Eigen/src/Core/MathFunctions.h	/^double fmod(const double& a, const double& b) {$/;"	f	namespace:Eigen::numext
fmod	Eigen/src/Core/MathFunctions.h	/^float fmod(const float& a, const float& b) {$/;"	f	namespace:Eigen::numext
forceAlignedAccess	Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	Eigen/src/Core/MatrixBase.h	/^    inline Derived& forceAlignedAccess() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	Eigen/src/Core/MatrixBase.h	/^    inline const Derived& forceAlignedAccess() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline Derived& forceAlignedAccessIf() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline const Derived& forceAlignedAccessIf() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
format	Eigen/src/Core/DenseBase.h	/^    inline const WithFormat<Derived> format(const IOFormat& fmt) const$/;"	f	class:Eigen::DenseBase
fortran_to_c_numbering	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void fortran_to_c_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
fp1	methods/rock2_static_coefficients.cpp	/^Real ROCK2::fp1[46]={0.4102693550421609,0.3889624104727243,0.3804692420283886,0.3760815680865637,0.3735177579729938,0.3719340231904236,0.3708571145968057,0.3700947006022557,0.3695328931459086,0.3691085831661758,$/;"	m	class:ROCK2	file:
fp1	methods/stabilized_methods.hpp	/^    static Real fp1[46];$/;"	m	class:ROCK2
fp2	methods/rock2_static_coefficients.cpp	/^Real ROCK2::fp2[46]={0.4495196112243335,0.4219428123056774,0.4084335547255627,0.4009301129475925,0.3963598727888637,0.3934034185789226,0.3913676516238603,0.3899091428928617,0.388827696299666,0.3880048656683555,$/;"	m	class:ROCK2	file:
fp2	methods/stabilized_methods.hpp	/^    static Real fp2[46];$/;"	m	class:ROCK2
fromPositionOrientationScale	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromRotationMatrix	Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
fromRotationMatrix	Eigen/src/Geometry/Rotation2D.h	/^EIGEN_DEVICE_FUNC Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
fullPivHouseholderQr	Eigen/src/QR/FullPivHouseholderQR.h	/^MatrixBase<Derived>::fullPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
fullPivLu	Eigen/src/LU/FullPivLU.h	/^MatrixBase<Derived>::fullPivLu() const$/;"	f	class:Eigen::MatrixBase
functor	Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseBinaryOp
functor	Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseNullaryOp
functor	Eigen/src/Core/CwiseTernaryOp.h	/^  const TernaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseTernaryOp
functor	Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryOp
functor	Eigen/src/Core/CwiseUnaryView.h	/^    const ViewOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryView
functor	Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp& functor() const { return m_functor; }$/;"	f	class:Eigen::PartialReduxExpr
functor_has_linear_access	Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = !has_binary_operator<Functor>::value }; };$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/Random.h	/^struct functor_traits<scalar_random_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/Visitor.h	/^struct functor_traits<max_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/Visitor.h	/^struct functor_traits<min_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<Eigen::half, float> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<float, Eigen::half> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<int, Eigen::half> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<add_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<div_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<mul_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<sub_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<swap_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_cmp_op<LhsScalar,RhsScalar, cmp> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_difference_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_hypot_op<Scalar,Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_max_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_min_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_pow_op<Scalar,Exponent> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_quotient_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_sum_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_and_op> {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_or_op> {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_xor_op> {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct functor_traits<bind1st_op<BinaryOp> > : functor_traits<BinaryOp> {};$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct functor_traits<bind2nd_op<BinaryOp> > : functor_traits<BinaryOp> {};$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_constant_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_identity_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType> struct functor_traits< linspaced_op<Scalar,PacketType> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_compose<T0,T1,T2> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder1st<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder2nd<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::divides<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_and<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_not<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_or<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::minus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::multiplies<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::not_equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::plus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project1st<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project2nd<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select1st<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select2nd<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_compose<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs2_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_acos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_arg_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_asin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_atan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_boolean_not_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cast_op<Scalar,NewType> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_ceil_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_conjugate_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cosh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cube_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_exp_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_floor_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_inverse_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isfinite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isinf_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isnan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log10_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log1p_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_opposite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_round_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_rsqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_score_coeff_op<Scalar> > : functor_traits<scalar_abs_op<Scalar> > {};$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sign_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sinh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sqrt_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_square_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tanh_op<Scalar> > {$/;"	s	namespace:Eigen::internal
gamma	mcmc/mala.hpp	/^    Real gamma;$/;"	m	class:MALA_Sampler
gamma	mcmc/pcn.hpp	/^    Real gamma;$/;"	m	class:PCN_Sampler
gamma	mcmc/phmc.hpp	/^    Real gamma;$/;"	m	class:PHMC_Sampler
gamma	tools/mcmc.hpp	/^    Real gamma;$/;"	m	class:MCMC_Sampler
gamma_normal	mcmc/mala.hpp	/^    NormalDistribution** gamma_normal;$/;"	m	class:MALA_Sampler
gamma_normal	mcmc/pcn.hpp	/^    NormalDistribution** gamma_normal;$/;"	m	class:PCN_Sampler
gamma_normal	mcmc/phmc.hpp	/^    NormalDistribution** gamma_normal;$/;"	m	class:PHMC_Sampler
gamma_normal	tools/mcmc.hpp	/^    NormalDistribution** gamma_normal;$/;"	m	class:MCMC_Sampler
garbage_collection	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType garbage_collection  \/* returns the new value of pfree *\/$/;"	f	namespace:internal
gatherPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE SubPacket gatherPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
gebp_kernel	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gebp_kernel$/;"	s	namespace:Eigen::internal
gebp_madd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)$/;"	f	namespace:Eigen::internal
gebp_madd_selector	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename A, typename B, typename C, typename T> struct gebp_madd_selector {$/;"	s	namespace:Eigen::internal
gebp_madd_selector	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {$/;"	s	namespace:Eigen::internal
gebp_traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits$/;"	c	namespace:Eigen::internal
gebp_traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<RealScalar, std::complex<RealScalar>, false, _ConjRhs >$/;"	c	namespace:Eigen::internal
gebp_traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>$/;"	c	namespace:Eigen::internal
gebp_traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, std::complex<RealScalar>, _ConjLhs, _ConjRhs >$/;"	c	namespace:Eigen::internal
gemm_blocking_space	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index \/*rows*\/, Index \/*cols*\/, Index \/*depth*\/, Index \/*num_threads*\/, bool \/*full_rows = false*\/)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index rows, Index cols, Index depth, Index num_threads, bool l3_blocking)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, false>$/;"	c	namespace:Eigen::internal
gemm_blocking_space	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, true \/* == FiniteAtCompileTime *\/>$/;"	c	namespace:Eigen::internal
gemm_functor	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  gemm_functor(const Lhs& lhs, const Rhs& rhs, Dest& dest, const Scalar& actualAlpha, BlockingType& blocking)$/;"	f	struct:Eigen::internal::gemm_functor
gemm_functor	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct gemm_functor$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	Eigen/src/Core/GeneralProduct.h	/^struct gemv_dense_selector<OnTheLeft,StorageOrder,BlasCompatible>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,ColMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,ColMajor,true>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,RowMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,RowMajor,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,Dynamic,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,false>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,true>$/;"	s	namespace:Eigen::internal
general_det3_helper	Eigen/src/LU/InverseImpl.h	/^inline const typename Derived::Scalar general_det3_helper$/;"	f	namespace:Eigen::internal
general_matrix_matrix_product	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_product	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_rankupdate	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^struct general_matrix_matrix_rankupdate :$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_product_to_triangular_selector	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,false>$/;"	s	namespace:Eigen
general_product_to_triangular_selector	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,true>$/;"	s	namespace:Eigen
generator	tools/random_variable.hpp	/^    std::default_random_engine generator;$/;"	m	class:NormalDistribution
generator	tools/random_variable.hpp	/^    std::default_random_engine generator;$/;"	m	class:UniformDistribution
generic_dense_assignment_kernel	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	Eigen/src/Core/AssignEvaluator.h	/^class generic_dense_assignment_kernel$/;"	c	namespace:Eigen::internal
generic_dense_assignment_kernel	Eigen/src/Core/Swap.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorTypeT &dst, const SrcEvaluatorTypeT &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	Eigen/src/Core/Swap.h	/^class generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, Specialized>$/;"	c	namespace:Eigen::internal
generic_fast_tanh_float	Eigen/src/Core/MathFunctionsImpl.h	/^T generic_fast_tanh_float(const T& a_x)$/;"	f	namespace:Eigen::internal
generic_matrix_wrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper()$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper(const InputType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper(const MatrixType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class generic_matrix_wrapper<MatrixType,false>$/;"	c	namespace:Eigen::internal
generic_matrix_wrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class generic_matrix_wrapper<MatrixType,true>$/;"	c	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Inverse<Lhs>, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Inverse<Rhs>, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Transpose<Rhs>, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> $/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemvProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,InnerProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,OuterProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,SelfAdjointShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,TriangularShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,SelfAdjointShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,TriangularShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Transpose<Lhs>, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemmProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Homogeneous<LhsArg,Horizontal>, Rhs, HomogeneousShape, DenseShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Lhs, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Lhs, Homogeneous<RhsArg,Vertical>, TriangularShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Transform<Scalar,Dim,Mode,Options>, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<Lhs, RhsView, DenseShape, SparseSelfAdjointShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<LhsView, Rhs, SparseSelfAdjointShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl_base	Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl_base$/;"	s	namespace:Eigen::internal
generic_xpr_base	Eigen/src/Core/SolverBase.h	/^struct generic_xpr_base<Derived, MatrixXpr, SolverStorage>$/;"	s	namespace:Eigen::internal
generic_xpr_base	Eigen/src/SparseCore/SparseUtil.h	/^struct generic_xpr_base<Derived, MatrixXpr, Sparse>$/;"	s	namespace:Eigen::internal
get	Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Dense = Dense()) const$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
get	Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Sparse = Sparse())$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
getL	Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::traits
getLinearMapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC  EIGEN_ALWAYS_INLINE LinearMapper getLinearMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getMatrix	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
getMatrix	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
getMatrix	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
getMaxIterations	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexEigenSolver
getMaxIterations	Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexSchur
getMaxIterations	Eigen/src/Eigenvalues/EigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::EigenSolver
getMaxIterations	Eigen/src/Eigenvalues/RealSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::RealSchur
getSubMapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper<Scalar, Index, StorageOrder> getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::const_blas_data_mapper
getSubMapper	Eigen/src/Core/util/BlasUtil.h	/^  getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getU	Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::traits
getVectorMapper	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC  EIGEN_ALWAYS_INLINE VectorMapper getVectorMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
get_Real_params	models/inverse_model.hpp	/^    std::vector<Real>& get_Real_params(){return Real_params;}$/;"	f	class:InverseProblem
get_brusselator	models/models.cpp	/^Model *get_brusselator(int no_nodes)$/;"	f
get_conv_order	core_methods.hpp	/^    int get_conv_order(){return 3;}$/;"	f	class:RK3
get_conv_order	core_methods.hpp	/^    int get_conv_order(){return 4;}$/;"	f	class:RK4
get_conv_order	core_methods.hpp	/^  int get_conv_order(){return 1;}$/;"	f	class:EulerExplicit
get_conv_order	core_methods.hpp	/^  int get_conv_order(){return 2;}$/;"	f	class:Heun
get_conv_order	methods/core_methods.hpp	/^    int get_conv_order(){return 3;}$/;"	f	class:RK3
get_conv_order	methods/core_methods.hpp	/^    int get_conv_order(){return 4;}$/;"	f	class:RK4
get_conv_order	methods/core_methods.hpp	/^  int get_conv_order(){return 1;}$/;"	f	class:EulerExplicit
get_conv_order	methods/core_methods.hpp	/^  int get_conv_order(){return 2;}$/;"	f	class:Heun
get_conv_order	methods/stabilized_methods.cpp	/^int RKC::get_conv_order(){ return 1;}$/;"	f	class:RKC
get_conv_order	methods/stabilized_methods.cpp	/^int ROCK2::get_conv_order(){ return 2;}$/;"	f	class:ROCK2
get_conv_order	methods/step_integrators.hpp	/^    int get_conv_order(){return 3;}$/;"	f	class:RK3
get_conv_order	methods/step_integrators.hpp	/^    int get_conv_order(){return 4;}$/;"	f	class:RK4
get_conv_order	methods/step_integrators.hpp	/^  int get_conv_order(){return 1;}$/;"	f	class:EulerExplicit
get_conv_order	methods/step_integrators.hpp	/^  int get_conv_order(){return 2;}$/;"	f	class:Heun
get_current_t	core_methods.hpp	/^    double get_current_t() {return cur_t;}$/;"	f	class:NumericalMethod
get_current_t	methods/core_methods.hpp	/^    Real get_current_t() {return cur_t;}$/;"	f	class:NumericalMethod
get_dim	models/models.hpp	/^    int get_dim(){return dim;}$/;"	f	class:Model
get_dimension	models/models.hpp	/^    int get_dimension() {return dim;}$/;"	f	class:Equation
get_equation	models/models.hpp	/^    Equation* get_equation() {return equation;}$/;"	f	class:Model
get_error	methods/core_methods.hpp	/^    Real get_error(){return error;}$/;"	f	class:StepIntegrator
get_f_evals	methods/adaptive_methods.hpp	/^    int get_f_evals(){return f_evals;}$/;"	f	class:AleksaRandomPathsAdaptiveScheme
get_f_evals	methods/adaptive_methods.hpp	/^    int get_f_evals(){return f_evals;}$/;"	f	class:ClassicalAdaptiveScheme
get_f_evals	methods/adaptive_methods.hpp	/^    int get_f_evals(){return f_evals;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
get_f_evals	methods/adaptive_methods.hpp	/^    int get_f_evals(){return f_evals;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
get_f_evals	methods/core_methods.cpp	/^int EulerExplicit::get_f_evals(){return 1;}$/;"	f	class:EulerExplicit
get_f_evals	methods/core_methods.cpp	/^int Heun::get_f_evals(){return 2;}$/;"	f	class:Heun
get_f_evals	methods/core_methods.cpp	/^int RK3::get_f_evals(){return 3;}$/;"	f	class:RK3
get_f_evals	methods/core_methods.cpp	/^int RK4::get_f_evals(){return 4;}$/;"	f	class:RK4
get_f_evals	methods/core_methods.hpp	/^    int get_f_evals(){return f_evals;}$/;"	f	class:NumericalMethod
get_f_evals	methods/stabilized_methods.cpp	/^int RKC::get_f_evals()$/;"	f	class:RKC
get_f_evals	methods/stabilized_methods.cpp	/^int ROCK2::get_f_evals()$/;"	f	class:ROCK2
get_f_rho_evalations	methods/adaptive_methods.hpp	/^    int get_f_rho_evalations(){ return f_rho_evals; }$/;"	f	class:AleksaRandomPathsAdaptiveScheme
get_f_rho_evalations	methods/adaptive_methods.hpp	/^    int get_f_rho_evalations(){ return f_rho_evals; }$/;"	f	class:ClassicalAdaptiveScheme
get_f_rho_evalations	methods/adaptive_methods.hpp	/^    int get_f_rho_evalations(){ return f_rho_evals; }$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
get_f_rho_evalations	methods/adaptive_methods.hpp	/^    int get_f_rho_evalations(){ return f_rho_evals; }$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
get_factor	Eigen/src/Core/util/BlasUtil.h	/^template<typename From,typename To> struct get_factor {$/;"	s	namespace:Eigen::internal
get_factor	Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {$/;"	s	namespace:Eigen::internal
get_final	core_methods.hpp	/^  void get_final(double *x1)$/;"	f	class:AdaptedClassicalNumericalMethod
get_final	methods/adaptive_methods.cpp	/^void AleksaRandomPathsAdaptiveScheme::get_final(Real *x1)$/;"	f	class:AleksaRandomPathsAdaptiveScheme
get_final	methods/adaptive_methods.cpp	/^void ClassicalAdaptiveScheme::get_final(Real *x1)$/;"	f	class:ClassicalAdaptiveScheme
get_final	methods/adaptive_methods.cpp	/^void GiacomoRandomPathsAdaptiveScheme::get_final(Real *x1)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
get_final	methods/core_methods.cpp	/^void FixedTimeSteppingMethod::get_final(Real *x1)$/;"	f	class:FixedTimeSteppingMethod
get_final	methods/giacomo.cpp	/^void GiacomoRandomPathsAdaptiveScheme2::get_final(Real *x1)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
get_fitz	models/models.cpp	/^Model* get_fitz()$/;"	f
get_instance	models/inverse_model.hpp	/^    static BrusselatorInverse* get_instance(Real prior_variance=0.5,Real noise_variance=1.0, int no_kl_elm=5)$/;"	f	class:BrusselatorInverse
get_instance	models/inverse_model.hpp	/^    static FitzHughInverse* get_instance(Real prior_variance=0.5,Real noise_variance=1.0)$/;"	f	class:FitzHughInverse
get_instance	models/inverse_model.hpp	/^    static TestInverse* get_instance(Real prior_variance=0.5,Real noise_variance=1.0)$/;"	f	class:TestInverse
get_last_step_error	core_methods.hpp	/^    double get_last_step_error(){return error;}$/;"	f	class:StepIntegrator
get_lorenz_system	models/models.cpp	/^Model* get_lorenz_system()$/;"	f
get_method	methods/methods.hpp	/^    NumericalMethod* get_method(Model *model,int N,StepIntegrator*step_integrator,double tol)$/;"	f	class:NumericalMethodFactory
get_model	models/inverse_model.cpp	/^Model* BrusselatorInverse::get_model(const std::vector<Real>& params)$/;"	f	class:BrusselatorInverse
get_model	models/inverse_model.hpp	/^    Model* get_model(const std::vector<Real>& params)$/;"	f	class:FitzHughInverse
get_model	models/inverse_model.hpp	/^    virtual Model* get_model(const std::vector<Real>& params)$/;"	f	class:TestInverse
get_name	methods/methods.hpp	/^    std::string get_name(){ return method_name; }$/;"	f	class:NumericalMethodFactory
get_name	models/models.hpp	/^    std::string get_name(){ return "brusselator" ; }$/;"	f	class:Brusselator
get_name	models/models.hpp	/^    std::string get_name(){ return "fitz" ; }$/;"	f	class:FitzHughNagumo
get_name	models/models.hpp	/^    std::string get_name(){ return "lorenz" ; }$/;"	f	class:Lorenz
get_name	models/models.hpp	/^    std::string get_name(){ return "po" ; }$/;"	f	class:PeroxideOxideEquation
get_name	models/models.hpp	/^    std::string get_name(){ return "test" ; }$/;"	f	class:TestEquation
get_name	models/models.hpp	/^    std::string get_name(){ return equation->get_name();}$/;"	f	class:Model
get_noise_variance	models/inverse_model.hpp	/^    Real get_noise_variance(){return noise_variance;}$/;"	f	class:InverseProblem
get_params	smc/smc.hpp	/^    std::vector<Real>& get_params() {return params;}$/;"	f	class:Particle
get_po_equation	models/models.cpp	/^Model* get_po_equation()$/;"	f
get_prior_distribution	models/inverse_model.hpp	/^    std::vector<RandomVariable*>& get_prior_distribution(){return prior_distribution;}$/;"	f	class:InverseProblem
get_sampled_array	mcmc/mala.hpp	/^  Real **get_sampled_array(){return sampled_array;}$/;"	f	class:MALA_Sampler
get_sampled_array	mcmc/pcn.hpp	/^    Real **get_sampled_array(){return sampled_array;}$/;"	f	class:PCN_Sampler
get_sampled_array	mcmc/phmc.hpp	/^  Real **get_sampled_array(){return sampled_array;}$/;"	f	class:PHMC_Sampler
get_sampled_array	tools/mcmc.hpp	/^  Real **get_sampled_array(){return sampled_array;}$/;"	f	class:MCMC_Sampler
get_symmetrized_graph	Eigen/src/MetisSupport/MetisSupport.h	/^  void get_symmetrized_graph(const MatrixType& A)$/;"	f	class:Eigen::MetisOrdering
get_t0	models/models.hpp	/^    Real get_t0() const { return t0;} $/;"	f	class:Model
get_t_obs	models/inverse_model.hpp	/^    std::vector<Real>& get_t_obs(){return t_obs;}$/;"	f	class:InverseProblem
get_test_equation	models/models.cpp	/^Model* get_test_equation()$/;"	f
get_tf	models/models.hpp	/^    Real get_tf() const { return tf;} $/;"	f	class:Model
get_total_f_evaluations	methods/adaptive_methods.hpp	/^    int get_total_f_evaluations(){ return f_evals+f_rho_evals;}$/;"	f	class:AleksaRandomPathsAdaptiveScheme
get_total_f_evaluations	methods/adaptive_methods.hpp	/^    int get_total_f_evaluations(){ return f_evals+f_rho_evals;}$/;"	f	class:ClassicalAdaptiveScheme
get_total_f_evaluations	methods/adaptive_methods.hpp	/^    int get_total_f_evaluations(){ return f_evals+f_rho_evals;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
get_total_f_evaluations	methods/adaptive_methods.hpp	/^    int get_total_f_evaluations(){ return f_evals+f_rho_evals;}$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
get_true_model	models/inverse_model.hpp	/^    Model *get_true_model()$/;"	f	class:InverseProblem
get_weight	smc/smc.hpp	/^    Real get_weight()const {return weight;}$/;"	f	class:Particle
get_x	smc/smc.hpp	/^    std::vector<Real>& get_x(){return x;}$/;"	f	class:Particle
get_x0	models/models.hpp	/^    Real* get_x0(){ return x0;}$/;"	f	class:Model
get_x_obs	models/inverse_model.hpp	/^    std::vector<Real*>& get_x_obs(){return x_obs;}$/;"	f	class:InverseProblem
global_math_functions_filtering_base	Eigen/src/Core/MathFunctions.h	/^struct global_math_functions_filtering_base$/;"	s	namespace:Eigen::internal
glue_shapes	Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	s	namespace:Eigen::internal
glue_shapes	Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	s	namespace:Eigen::internal
grab	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const EigenBase<MatrixDerived> &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const InputType &A)$/;"	f	class:Eigen::IterativeSolverBase
grab	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const MatrixType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const Ref<const MatrixType> &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const EigenBase<MatrixDerived> &A)$/;"	f	class:Eigen::UmfPackLU
grab	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const UmfpackMatrixRef &A)$/;"	f	class:Eigen::UmfPackLU
grabMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLDLT
grabMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLLT
grabMatrix	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLU
guess	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const GuessType&     guess() const { return m_guess; }$/;"	f	class:Eigen::SolveWithGuess
h0	core_methods.hpp	/^    double h0;$/;"	m	class:NumericalMethod
h0	methods/core_methods.hpp	/^    Real h0;$/;"	m	class:NumericalMethod
hCoeffs	Eigen/src/QR/ColPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::ColPivHouseholderQR
hCoeffs	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const HCoeffsType& hCoeffs() const { return m_cpqr.hCoeffs(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
hCoeffs	Eigen/src/QR/FullPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::FullPivHouseholderQR
hCoeffs	Eigen/src/QR/HouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::HouseholderQR
h_path	methods/adaptive_methods.hpp	/^    Real *h_path;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
h_path	methods/adaptive_methods.hpp	/^    Real *h_path;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
h_path	methods/adaptive_methods.hpp	/^    Real *h_path;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
half	Eigen/src/Core/GenericPacketMath.h	/^  typedef T half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet4d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet4d half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8f half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8f half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8i half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half() {}$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half(const __half& h) : half_impl::half_base(h) {}$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half(const half& h) : half_impl::half_base(h) {}$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(bool b)$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(const T& val)$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(float f)$/;"	f	struct:Eigen::half
half	Eigen/src/Core/arch/CUDA/Half.h	/^struct half : public half_impl::half_base {$/;"	s	namespace:Eigen
half	Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^  typedef half2 half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f half; \/\/ Packet2f intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i half; \/\/ Packet2i intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half_base	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base() {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base(const __half& h) : __half(h) {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base(const half_base& h) : __half(h) {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	Eigen/src/Core/arch/CUDA/Half.h	/^struct half_base : public __half {$/;"	s	namespace:Eigen::half_impl
half_impl	Eigen/src/Core/arch/CUDA/Half.h	/^namespace half_impl {$/;"	n	namespace:Eigen
half_to_float	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC float half_to_float(__half h) {$/;"	f	namespace:Eigen::half_impl
handmade_aligned_free	Eigen/src/Core/util/Memory.h	/^inline void handmade_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
handmade_aligned_malloc	Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
handmade_aligned_realloc	Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_realloc(void* ptr, std::size_t size, std::size_t = 0)$/;"	f	namespace:Eigen::internal
hasNaN	Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::hasNaN() const$/;"	f	class:Eigen::DenseBase
has_ReturnType	Eigen/src/Core/util/Meta.h	/^struct has_ReturnType$/;"	s	namespace:Eigen::internal
has_binary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	Eigen/src/Core/util/Meta.h	/^struct has_binary_operator$/;"	s	namespace:Eigen::internal
has_denorm	Eigen/src/Core/arch/CUDA/Half.h	/^  static const float_denorm_style has_denorm = denorm_present;$/;"	m	struct:std::numeric_limits
has_denorm_loss	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_denorm_loss = false;$/;"	m	struct:std::numeric_limits
has_direct_access	Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { has_direct_access = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon134
has_direct_access	Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct has_direct_access$/;"	s	namespace:Eigen::internal
has_infinity	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_infinity = true;$/;"	m	struct:std::numeric_limits
has_none	Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	s	namespace:Eigen::internal
has_nullary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	Eigen/src/Core/util/Meta.h	/^struct has_nullary_operator$/;"	s	namespace:Eigen::internal
has_quiet_NaN	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_quiet_NaN = true;$/;"	m	struct:std::numeric_limits
has_signaling_NaN	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_signaling_NaN = true;$/;"	m	struct:std::numeric_limits
has_std_result_type	Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	s	namespace:Eigen::internal
has_tr1_result	Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	s	namespace:Eigen::internal
has_unary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	Eigen/src/Core/util/Meta.h	/^struct has_unary_operator$/;"	s	namespace:Eigen::internal
has_write_access	Eigen/src/Core/util/ForwardDeclarations.h	/^         has_write_access = (traits<Derived>::Flags & LvalueBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon134
hash	Eigen/src/Core/arch/CUDA/Half.h	/^struct hash<Eigen::half> {$/;"	s	namespace:std
hash	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash ;  \/* hash value, if col is not in a degree list *\/$/;"	m	union:internal::colamd_col::__anon651
hash_next	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash_next ;   \/* next column, if col is in a hash list *\/$/;"	m	union:internal::colamd_col::__anon652
head	Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType head(Index n) const$/;"	f
head	Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType head(Index n)$/;"	f
head	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type head(Index n = N) const$/;"	f
head	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type head(Index n = N)$/;"	f
headhash	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType headhash ;  \/* head of a hash bucket, if col is at the head of *\/$/;"	m	union:internal::colamd_col::__anon651
heap_relax_snode	Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::heap_relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
helper	Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_left_product_refactoring_helper<Lhs,typename Rhs::NestedExpression> helper;$/;"	t	struct:Eigen::internal::product_evaluator
helper	Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_right_product_refactoring_helper<typename Lhs::NestedExpression,Rhs> helper;$/;"	t	struct:Eigen::internal::product_evaluator
hessenbergTriangular	Eigen/src/Eigenvalues/RealQZ.h	/^    void RealQZ<MatrixType>::hessenbergTriangular()$/;"	f	class:Eigen::RealQZ
highest	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half highest() {$/;"	f	struct:Eigen::NumTraits
hnormalized	Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::hnormalized() const$/;"	f	class:Eigen::MatrixBase
hnormalized	Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::hnormalized() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous	Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::homogeneous() const$/;"	f	class:Eigen::MatrixBase
homogeneous	Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::homogeneous() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous_left_product_impl	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC homogeneous_left_product_impl(const Lhs& lhs, const MatrixType& rhs)$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
homogeneous_left_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs>$/;"	s	namespace:Eigen::internal
homogeneous_left_product_refactoring_helper	Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_refactoring_helper$/;"	s	namespace:Eigen::internal
homogeneous_right_product_impl	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC homogeneous_right_product_impl(const MatrixType& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
homogeneous_right_product_impl	Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs>$/;"	s	namespace:Eigen::internal
homogeneous_right_product_refactoring_helper	Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_refactoring_helper$/;"	s	namespace:Eigen::internal
householder	Eigen/src/SVD/UpperBidiagonalization.h	/^    const MatrixType& householder() const { return m_householder; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderCoefficients	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const CoeffVectorType& householderCoefficients() const$/;"	f	class:Eigen::HessenbergDecomposition
householderCoefficients	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline CoeffVectorType householderCoefficients() const$/;"	f	class:Eigen::Tridiagonalization
householderQ	Eigen/src/QR/ColPivHouseholderQR.h	/^  ::householderQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
householderQ	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::householderQ() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
householderQ	Eigen/src/QR/HouseholderQR.h	/^    HouseholderSequenceType householderQ() const$/;"	f	class:Eigen::HouseholderQR
householderQr	Eigen/src/QR/HouseholderQR.h	/^MatrixBase<Derived>::householderQr() const$/;"	f	class:Eigen::MatrixBase
householderSequence	Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType> householderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
householderU	Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderUSequenceType householderU() const$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderV	Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderVSequenceType householderV() \/\/ const here gives nasty errors and i'm lazy$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder_qr_inplace_blocked	Eigen/src/QR/HouseholderQR.h	/^struct householder_qr_inplace_blocked$/;"	s	namespace:Eigen::internal
householder_qr_inplace_unblocked	Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_unblocked(MatrixQR& mat, HCoeffs& hCoeffs, typename MatrixQR::Scalar* tempData = 0)$/;"	f	namespace:Eigen::internal
hseq_side_dependent_impl	Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl$/;"	s	namespace:Eigen::internal
hseq_side_dependent_impl	Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl<VectorsType, CoeffsType, OnTheRight>$/;"	s	namespace:Eigen::internal
hypot	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
hypotNorm	Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::hypotNorm() const$/;"	f	class:Eigen::MatrixBase
hypotNorm	Eigen/src/Core/VectorwiseOp.h	/^    const HypotNormReturnType hypotNorm() const$/;"	f	class:Eigen::VectorwiseOp
hypot_impl	Eigen/src/Core/MathFunctions.h	/^struct hypot_impl$/;"	s	namespace:Eigen::internal
hypot_retval	Eigen/src/Core/MathFunctions.h	/^struct hypot_retval$/;"	s	namespace:Eigen::internal
i	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  int32_t   i[4];$/;"	m	union:Eigen::internal::__anon513
icc_11_workaround	Eigen/src/Geometry/Transform.h	/^  template<int OtherMode,int OtherOptions> struct icc_11_workaround$/;"	s	class:Eigen::Transform
ignore_unused_variable	Eigen/src/Core/util/Macros.h	/^    template<typename T> EIGEN_DEVICE_FUNC void ignore_unused_variable(const T&) {}$/;"	f	namespace:Eigen::internal
imag	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() const { return ImagReturnType(derived()); }$/;"	f
imag	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() { return NonConstImagReturnType(derived()); }$/;"	f
imag_default_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl$/;"	s	namespace:Eigen::internal
imag_default_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
imag_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_impl<std::complex<T> >$/;"	s	namespace:Eigen::internal
imag_impl	Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct imag_impl : imag_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
imag_ref	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref	Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref_default_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl$/;"	s	namespace:Eigen::internal
imag_ref_default_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
imag_ref_impl	Eigen/src/Core/MathFunctions.h	/^struct imag_ref_impl : imag_ref_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
imag_ref_retval	Eigen/src/Core/MathFunctions.h	/^struct imag_ref_retval$/;"	s	namespace:Eigen::internal
imag_retval	Eigen/src/Core/MathFunctions.h	/^struct imag_retval$/;"	s	namespace:Eigen::internal
image	Eigen/src/LU/FullPivLU.h	/^      image(const MatrixType& originalMatrix) const$/;"	f	class:Eigen::FullPivLU
image_retval	Eigen/src/LU/FullPivLU.h	/^struct image_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
image_retval_base	Eigen/src/misc/Image.h	/^  image_retval_base(const DecompositionType& dec, const MatrixType& originalMatrix)$/;"	f	struct:Eigen::internal::image_retval_base
image_retval_base	Eigen/src/misc/Image.h	/^template<typename _DecompositionType> struct image_retval_base$/;"	s	namespace:Eigen::internal
impl	Eigen/src/Core/functors/NullaryFunctors.h	/^  const linspaced_op_impl<Scalar,PacketType,NumTraits<Scalar>::IsInteger> impl;$/;"	m	struct:Eigen::internal::linspaced_op
include_prior	models/inverse_model.hpp	/^    bool include_prior=true;$/;"	m	class:InverseProblem
incrementToNonZero	Eigen/src/SparseCore/SparseView.h	/^        void incrementToNonZero()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const           { return m_iter.index(); }$/;"	f	class:Eigen::InnerIterator
index	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const { return m_inner; }$/;"	f	class:Eigen::internal::inner_iterator_selector
index	Eigen/src/Core/Diagonal.h	/^    inline Index index() const$/;"	f	class:Eigen::Diagonal
index	Eigen/src/Core/Redux.h	/^    index = Start * redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon577
index	Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex index;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
index	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex index() const { return m_cachedIndex; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
index	Eigen/src/SparseCore/CompressedStorage.h	/^    inline StorageIndex& index(Index i) { eigen_internal_assert(m_indices!=0); return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	Eigen/src/SparseCore/CompressedStorage.h	/^    inline const StorageIndex& index(Index i) const { eigen_internal_assert(m_indices!=0); return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return EvalIterator::index() - convert_index<StorageIndex>(IsRowMajor ? m_block.startCol() : m_block.startRow()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
index	Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return convert_index<StorageIndex>(m_outerPos - (IsRowMajor ? m_eval.m_block.startCol() : m_eval.m_block.startRow())); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
index	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
index	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
index	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
index	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_lhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
index	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_rhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
index	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline StorageIndex index() const  { return m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
index	Eigen/src/SparseCore/SparseTriangularView.h	/^      inline StorageIndex index() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE StorageIndex index() const { return m_inner; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index index() const { return m_matrix.rowIndex()[m_idrow]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
index	smc/pf_smc.cpp	/^  int index;$/;"	m	struct:ShuffleSelect	file:
index	smc/stuart_smc.cpp	/^  int index;$/;"	m	struct:ShuffleSelect	file:
index	tools/random_variable.hpp	/^    int index;$/;"	m	class:DirSample
indexPtr	Eigen/src/SparseCore/CompressedStorage.h	/^    StorageIndex* indexPtr() { return m_indices; }$/;"	f	class:Eigen::internal::CompressedStorage
indexPtr	Eigen/src/SparseCore/CompressedStorage.h	/^    const StorageIndex* indexPtr() const { return m_indices; }$/;"	f	class:Eigen::internal::CompressedStorage
indexer	tools/random_variable.hpp	/^  std::set<DirSample> indexer;$/;"	m	class:DiscreteDirac
indices	Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	Eigen/src/Core/PermutationMatrix.h	/^    indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationWrapper
indices	Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
infinity	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half infinity() {$/;"	f	struct:Eigen::NumTraits
infinity	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half infinity() { return Eigen::half_impl::raw_uint16_to_half(0x7c00); }$/;"	f	struct:std::numeric_limits
infinity	Eigen/src/Core/util/Meta.h	/^  static T infinity() { assert(false && "Infinity not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
infinity	Eigen/src/Core/util/Meta.h	/^  static double infinity() { return CUDART_INF; }$/;"	f	struct:Eigen::internal::device::numeric_limits
infinity	Eigen/src/Core/util/Meta.h	/^  static float infinity() { return CUDART_INF_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
info	Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LDLT
info	Eigen/src/Cholesky/LLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LLT
info	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::CholmodBase
info	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexEigenSolver
info	Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexSchur
info	Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::EigenSolver
info	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::GeneralizedEigenSolver
info	Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo info() const$/;"	f	class:Eigen::RealQZ
info	Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::RealSchur
info	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
info	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::DiagonalPreconditioner
info	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::IdentityPreconditioner
info	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
info	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteCholesky
info	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteLUT
info	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::IterativeSolverBase
info	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PastixBase
info	Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PardisoImpl
info	Eigen/src/QR/ColPivHouseholderQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ColPivHouseholderQR
info	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  ComputationInfo info() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
info	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SPQR
info	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SimplicialCholeskyBase
info	Eigen/src/SparseLU/SparseLU.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseLU
info	Eigen/src/SparseQR/SparseQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseQR
info	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SuperLUBase
info	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::UmfPackLU
info_arch	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodDecomposition
init	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLDLT
init	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLLT
init	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSupernodalLLT
init	Eigen/src/Core/Block.h	/^    void init()$/;"	f	class:Eigen::internal::BlockImpl_dense
init	Eigen/src/Core/Visitor.h	/^  inline void init(const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::coeff_visitor
init	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void init()$/;"	f	class:Eigen::IterativeSolverBase
init	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLDLT
init	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLLT
init	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLU
init	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::init()$/;"	f	class:Eigen::PastixBase
init	Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(double estimatedDensity)$/;"	f	class:Eigen::internal::AmbiVector
init	Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(int mode)$/;"	f	class:Eigen::internal::AmbiVector
init	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperILU
init	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLU
init	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLUBase
init	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void init()$/;"	f	class:Eigen::UmfPackLU
initAcc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(AccPacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(DoublePacketType& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(Scalar& p) { p = Scalar(0); }$/;"	f	class:Eigen::internal::gebp_traits
initAssignment	Eigen/src/SparseCore/SparseMatrix.h	/^    void initAssignment(const Other& other)$/;"	f	class:Eigen::SparseMatrix
initFactorization	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void initFactorization(const MatrixType& a)$/;"	f	class:Eigen::SuperLUBase
initFrancisQRStep	Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::initFrancisQRStep(Index il, Index iu, const Vector3s& shiftInfo, Index& im, Vector3s& firstHouseholderVector)$/;"	f	class:Eigen::RealSchur
initParallel	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index rows, Index cols, Index depth, Index num_threads)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index, Index, Index, Index)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	Eigen/src/Core/products/Parallelizer.h	/^inline void initParallel()$/;"	f	namespace:Eigen
initParallelSession	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void initParallelSession(Index num_threads) const$/;"	f	struct:Eigen::internal::gemm_functor
init_particles	smc/pf_smc.cpp	/^void PF_SMC::init_particles()$/;"	f	class:PF_SMC
init_particles	smc/stuart_smc.cpp	/^void Stuart_SMC::init_particles()$/;"	f	class:Stuart_SMC
init_rows_cols	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType init_rows_cols  \/* returns true if OK, or false otherwise *\/$/;"	f	namespace:internal
init_scoring	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void init_scoring$/;"	f	namespace:internal
init_val	mcmc/mala.hpp	/^    Real *init_val;$/;"	m	class:MALA_Sampler
init_val	mcmc/pcn.hpp	/^    Real *init_val;$/;"	m	class:PCN_Sampler
init_val	mcmc/phmc.hpp	/^    Real *init_val;$/;"	m	class:PHMC_Sampler
init_val	tools/mcmc.hpp	/^    Real *init_val;$/;"	m	class:MCMC_Sampler
init_x_obs	models/inverse_model.hpp	/^    void init_x_obs()$/;"	f	class:InverseProblem
initialize_static_coefficients	methods/rock2_static_coefficients.cpp	/^void ROCK2::initialize_static_coefficients()$/;"	f	class:ROCK2
initperfvalues	Eigen/src/SparseLU/SparseLU.h	/^    void initperfvalues()$/;"	f	class:Eigen::SparseLU
inner	Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon262
inner	Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon263
inner	Eigen/src/Core/Redux.h	/^    inner = Start % Derived::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon575
inner	Eigen/src/Core/Redux.h	/^    inner = index % int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon577
inner	Eigen/src/Core/Stride.h	/^    inline Index inner() const { return m_inner.value(); }$/;"	f	class:Eigen::Stride
innerInd	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *innerInd;$/;"	m	struct:Eigen::SluMatrix::__anon111
innerIndexPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerIndexPtr() { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerIndexPtr()   { return Base::m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerIndexPtr() const { return m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerIndexPtr() { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerIndexPtr() const { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerIndexPtr() { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE StorageIndex* innerIndexPtr() { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const StorageIndex* innerIndexPtr() const { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerNonZeroPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerNonZeroPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerNonZeroPtr() { return Base::m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerNonZeroPtr() { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeroPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeroPtr	Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex* innerNonZeroPtr() { return 0; }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	Eigen/src/SparseCore/SparseVector.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return 0; }$/;"	f	class:Eigen::SparseVector
innerNonZeros	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Eigen::Map<IndexVector> innerNonZeros() { return Eigen::Map<IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeros	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const  Eigen::Map<const IndexVector> innerNonZeros() const { return Eigen::Map<const IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerSize	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const   { return m_dstExpr.innerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
innerSize	Eigen/src/Core/DenseBase.h	/^    Index innerSize() const$/;"	f	class:Eigen::DenseBase
innerSize	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const { return m_xpr.innerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
innerSize	Eigen/src/SparseCore/SparseMap.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
innerSize	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
innerSize	Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }$/;"	f	class:Eigen::SparseMatrixBase
innerSize	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }$/;"	f	class:Eigen::SparseVector
innerSize	Eigen/src/SparseCore/SparseView.h	/^  inline Index innerSize() const { return m_matrix.innerSize(); }$/;"	f	class:Eigen::SparseView
innerStride	Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Array
innerStride	Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ArrayWrapper
innerStride	Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::MatrixWrapper
innerStride	Eigen/src/Core/Block.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
innerStride	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
innerStride	Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
innerStride	Eigen/src/Core/Diagonal.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Diagonal
innerStride	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
innerStride	Eigen/src/Core/Map.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Map
innerStride	Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Matrix
innerStride	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::NestByValue
innerStride	Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::RefBase
innerStride	Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::Reverse
innerStride	Eigen/src/Core/SelfAdjointView.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfAdjointView
innerStride	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TransposeImpl
innerStride	Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().innerStride(); }$/;"	f	class:Eigen::TriangularBase
innerStride	Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
innerVector	Eigen/src/SparseCore/SparseBlock.h	/^const typename SparseMatrixBase<Derived>::ConstInnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer) const$/;"	f	class:Eigen::SparseMatrixBase
innerVector	Eigen/src/SparseCore/SparseBlock.h	/^typename SparseMatrixBase<Derived>::InnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer)$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	Eigen/src/SparseCore/SparseBlock.h	/^SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize) const$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	Eigen/src/SparseCore/SparseBlock.h	/^SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseMatrixBase
inner_iterator_selector	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &\/*innerSize*\/)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &innerSize)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IndexBased>$/;"	c	namespace:Eigen::internal
inner_iterator_selector	Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IteratorBased>$/;"	c	namespace:Eigen::internal
inner_stride_at_compile_time	Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time$/;"	s	namespace:Eigen::internal
inner_stride_at_compile_time	Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
inplace_decomposition	Eigen/src/Cholesky/LLT.h	/^  static bool inplace_decomposition(MatrixType& m)$/;"	f	struct:Eigen::internal::LLT_Traits
inplace_transpose_selector	Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,false,MatchPacketSize> { \/\/ non square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,false> { \/\/ square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,true> { \/\/ PacketSize x PacketSize$/;"	s	namespace:Eigen::internal
insert	Eigen/src/SparseCore/SparseMatrix.h	/^typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insert(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert	Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insert(Index i)$/;"	f	class:Eigen::SparseVector
insert	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseVector
insert	Eigen/src/StlSupport/StdDeque.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::deque
insert	Eigen/src/StlSupport/StdDeque.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::deque
insert	Eigen/src/StlSupport/StdList.h	/^    iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::list
insert	Eigen/src/StlSupport/StdList.h	/^    void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::list
insert	Eigen/src/StlSupport/StdVector.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::vector
insert	Eigen/src/StlSupport/StdVector.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::vector
insertBack	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBack	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBack(Index i)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInner	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInner	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInnerUnordered	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInnerUnordered	Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackUncompressed	Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_STRONG_INLINE Scalar& insertBackUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBackUnordered	Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackUnordered(Index i)$/;"	f	class:Eigen::SparseVector
insertByOuterInner	Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar& insertByOuterInner(Index j, Index i)$/;"	f	class:Eigen::SparseMatrix
insertCompressed	Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insertCompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertUncompressed	Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insertUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
integrate	methods/core_methods.cpp	/^std::vector<std::pair<Real,Real*>> FixedTimeSteppingMethod::integrate(const std::vector<Real>& t_i)$/;"	f	class:FixedTimeSteppingMethod
integrate	methods/core_methods.hpp	/^    virtual std::vector<std::pair<Real,Real*>> integrate(const std::vector<Real>& t_i){fprintf(stderr,"Integration for multiple t_i not implemented.");abort();};  \/\/ executes all steps, returns final solution$/;"	f	class:NumericalMethod
integrate_part	methods/core_methods.cpp	/^void AbdulleGaregnaniMethod::integrate_part( Real *x_start, Real *x_end,Real t_start,Real t_end,int N)$/;"	f	class:AbdulleGaregnaniMethod
integrate_part	methods/core_methods.cpp	/^void ClassicalNumericalMethod::integrate_part( Real *x_start, Real *x_end,Real t_start,Real t_end,int N)$/;"	f	class:ClassicalNumericalMethod
integrate_part	methods/core_methods.cpp	/^void ConradNumericalMethod::integrate_part( Real *x_start, Real *x_end,Real t_start,Real t_end,int N)$/;"	f	class:ConradNumericalMethod
integrate_part	methods/core_methods.cpp	/^void FixedTimeSteppingMethod::integrate_part(std::vector<Real> x_start, Real *x_end,Real t_start,Real t_end, int N)$/;"	f	class:FixedTimeSteppingMethod
internal	Eigen/src/Cholesky/LDLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Cholesky/LLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Cholesky/LLT.h	/^namespace internal{$/;"	n	namespace:Eigen
internal	Eigen/src/Cholesky/LLT_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Array.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/ArrayWrapper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/AssignEvaluator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Assign_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/BandMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Block.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/BooleanRedux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/ConditionEstimator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CoreEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CoreIterators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CwiseNullaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CwiseTernaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/CwiseUnaryView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/DenseBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/DenseCoeffsBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/DenseStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Diagonal.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/DiagonalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Dot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/ForceAlignedAccess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Fuzzy.h	/^namespace internal$/;"	n	namespace:Eigen
internal	Eigen/src/Core/GeneralProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/GenericPacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/GlobalFunctions.h	/^  namespace internal$/;"	n	namespace:Eigen
internal	Eigen/src/Core/IO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Inverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Map.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/MathFunctionsImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Matrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/NestByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/NumTraits.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/PermutationMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/PlainObjectBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Product.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/ProductEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Random.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Redux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Ref.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Replicate.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/ReturnByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Reverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Select.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/SelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Solve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/SolveTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/SolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/StableNorm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Swap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Transpose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Transpositions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/TriangularMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/VectorBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/VectorwiseOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/Visitor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AVX512/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/Half.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/NEON/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/SSE/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/ZVector/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/arch/ZVector/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/BinaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/NullaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/StlFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/TernaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/functors/UnaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/Parallelizer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/products/TriangularSolverVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/BlasUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/Constants.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/ForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/Macros.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/Macros.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/StaticAssert.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Core/util/XprHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/AngleAxis.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/Homogeneous.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/OrthoMethods.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/Quaternion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/Rotation2D.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/RotationBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/Transform.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/Umeyama.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Householder/BlockHouseholder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Householder/Householder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Householder/HouseholderSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/Jacobi/Jacobi.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/Determinant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/FullPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/InverseImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/PartialPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/PartialPivLU_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/LU/arch/Inverse_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/OrderingMethods/Amd.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^namespace internal {$/;"	n
internal	Eigen/src/OrderingMethods/Ordering.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	Eigen/src/QR/ColPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/QR/FullPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/QR/HouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/QR/HouseholderQR_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SVD/BDCSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SVD/JacobiSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SVD/UpperBidiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/AmbiVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/CompressedStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseAssign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseColEtree.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseMap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparsePermutation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseRef.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseTranspose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseTriangularView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/SparseView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseCore/TriangularSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLUImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SparseQR/SparseQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/StlSupport/details.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/misc/Image.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/misc/Kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	Eigen/src/misc/RealSvd2x2.h	/^namespace internal {$/;"	n	namespace:Eigen
intersection	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox intersection(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intersection	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC VectorType intersection(const Hyperplane& other) const$/;"	f	class:Eigen::Hyperplane
intersection	Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersection(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionParameter	Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionParameter(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionPoint	Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionPoint(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersects	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool intersects(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
inverse	Eigen/src/Core/DiagonalMatrix.h	/^    inverse() const$/;"	f	class:Eigen::DiagonalBase
inverse	Eigen/src/Core/PermutationMatrix.h	/^    inline InverseReturnType inverse() const$/;"	f	class:Eigen::PermutationBase
inverse	Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> inverse() const$/;"	f	class:Eigen::TranspositionsBase
inverse	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const$/;"	f	class:Eigen::QuaternionBase
inverse	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D inverse() const { return Rotation2D(-m_angle); }$/;"	f	class:Eigen::Rotation2D
inverse	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling inverse() const$/;"	f	class:Eigen::UniformScaling
inverse	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::inverse(TransformTraits hint) const$/;"	f	class:Eigen::Transform
inverse	Eigen/src/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType inverse() const { return adjoint(); }$/;"	f	class:Eigen::HouseholderSequence
inverse	Eigen/src/LU/FullPivLU.h	/^    inline const Inverse<FullPivLU> inverse() const$/;"	f	class:Eigen::FullPivLU
inverse	Eigen/src/LU/InverseImpl.h	/^inline const Inverse<Derived> MatrixBase<Derived>::inverse() const$/;"	f	class:Eigen::MatrixBase
inverse	Eigen/src/LU/PartialPivLU.h	/^    inline const Inverse<PartialPivLU> inverse() const$/;"	f	class:Eigen::PartialPivLU
inverse	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline const Inverse<ColPivHouseholderQR> inverse() const$/;"	f	class:Eigen::ColPivHouseholderQR
inverse	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline const Inverse<FullPivHouseholderQR> inverse() const$/;"	f	class:Eigen::FullPivHouseholderQR
inverse	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^inverse() const$/;"	f
inverse_problem	smc/smc.hpp	/^    InverseProblem* inverse_problem;$/;"	m	class:PF_SMC
inverse_problem	smc/smc.hpp	/^    InverseProblem* inverse_problem;$/;"	m	class:Stuart_SMC
iparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<StorageIndex,IPARM_SIZE,1>& iparm()$/;"	f	class:Eigen::PastixBase
iparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int& iparm(int idxparam)$/;"	f	class:Eigen::PastixBase
isApprox	Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isApprox($/;"	f	class:Eigen::DenseBase
isApprox	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(bool x, bool y, bool)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApprox	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	Eigen/src/Core/MathFunctions.h	/^inline bool isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApprox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const AlignedBox& other, const RealScalar& prec = ScalarTraits::dummy_precision()) const$/;"	f	class:Eigen::AlignedBox
isApprox	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const AngleAxis& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::AngleAxis
isApprox	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Hyperplane
isApprox	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const ParametrizedLine& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const QuaternionBase<OtherDerived>& other, const RealScalar& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::QuaternionBase
isApprox	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Rotation2D& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Rotation2D
isApprox	Eigen/src/Geometry/Scaling.h	/^  bool isApprox(const UniformScaling& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::UniformScaling
isApprox	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Transform& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Transform
isApprox	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Translation& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Translation
isApprox	Eigen/src/SparseCore/SparseFuzzy.h	/^bool SparseMatrixBase<Derived>::isApprox(const SparseMatrixBase<OtherDerived>& other, const RealScalar &prec) const$/;"	f	class:Eigen::SparseMatrixBase
isApprox	Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApproxOrLessThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const bool& x, const bool& y, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApproxOrLessThan	Eigen/src/Core/MathFunctions.h	/^inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApproxToConstant	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isApproxToConstant$/;"	f	class:Eigen::DenseBase
isApprox_selector	Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector$/;"	s	namespace:Eigen::internal
isApprox_selector	Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isCompressed	Eigen/src/SparseCore/SparseBlock.h	/^    bool isCompressed() const { return m_matrix.innerNonZeroPtr()==0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
isCompressed	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline bool isCompressed() const { return innerNonZeroPtr()==0; }$/;"	f	class:Eigen::SparseCompressedBase
isCompressed	Eigen/src/SparseCore/SparseMap.h	/^    bool isCompressed() const { return m_innerNonZeros==0; }$/;"	f	class:Eigen::SparseMapBase
isConstant	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isConstant$/;"	f	class:Eigen::DenseBase
isDiagonal	Eigen/src/Core/DiagonalMatrix.h	/^bool MatrixBase<Derived>::isDiagonal(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isEmpty	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool isEmpty() const { return (m_min.array() > m_max.array()).any(); }$/;"	f	class:Eigen::AlignedBox
isFinite	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isFinite() const$/;"	f
isHorizontal	Eigen/src/Core/VectorwiseOp.h	/^      isHorizontal = (Direction==Horizontal) ? 1 : 0$/;"	e	enum:Eigen::VectorwiseOp::__anon435
isIdentity	Eigen/src/Core/CwiseNullaryOp.h	/^bool MatrixBase<Derived>::isIdentity$/;"	f	class:Eigen::MatrixBase
isInf	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isInf() const$/;"	f
isInjective	Eigen/src/LU/FullPivLU.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivLU
isInjective	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInjective	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isInjective() const { return m_cpqr.isInjective(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isInjective	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isInvertible	Eigen/src/LU/FullPivLU.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivLU
isInvertible	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInvertible	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isInvertible() const { return m_cpqr.isInvertible(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isInvertible	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivHouseholderQR
isLowerTriangular	Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isLowerTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isMuchSmallerThan	Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isMuchSmallerThan($/;"	f	class:Eigen::DenseBase
isMuchSmallerThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const Scalar&, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const bool& x, const bool&, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isMuchSmallerThan	Eigen/src/Core/MathFunctions.h	/^inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen::internal
isMuchSmallerThan_object_selector	Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_object_selector	Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector<Derived, true>$/;"	s	namespace:Eigen::internal
isNaN	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isNaN() const$/;"	f
isNegative	Eigen/src/Cholesky/LDLT.h	/^    inline bool isNegative(void) const$/;"	f	class:Eigen::LDLT
isNull	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool isNull() const { return isEmpty(); }$/;"	f	class:Eigen::AlignedBox
isOnes	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isOnes$/;"	f	class:Eigen::DenseBase
isOrthogonal	Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isOrthogonal$/;"	f	class:Eigen::MatrixBase
isPositive	Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositive() const$/;"	f	class:Eigen::LDLT
isRValue	Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isRValue() const { return m_isRValue; }$/;"	f	class:Eigen::SparseMatrixBase
isSurjective	Eigen/src/LU/FullPivLU.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivLU
isSurjective	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isSurjective	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isSurjective() const { return m_cpqr.isSurjective(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isSurjective	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isSymmetric	Eigen/src/SparseLU/SparseLU.h	/^    void isSymmetric(bool sym)$/;"	f	class:Eigen::SparseLU
isUnitary	Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isUnitary(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isUpperTriangular	Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isUpperTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isVector	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline bool isVector() const { return rows()==1 || cols()==1; }$/;"	f	class:Eigen::SparseMatrixBase
isVertical	Eigen/src/Core/VectorwiseOp.h	/^      isVertical   = (Direction==Vertical) ? 1 : 0,$/;"	e	enum:Eigen::VectorwiseOp::__anon435
isZero	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isZero(const RealScalar& prec) const$/;"	f	class:Eigen::DenseBase
is_arithmetic	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512> {$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512d> {$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512i> {$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct is_arithmetic<half> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct is_arithmetic<half2> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_bounded	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_bounded = false;$/;"	m	struct:std::numeric_limits
is_const	Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_const	Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_convertible	Eigen/src/Core/util/Meta.h	/^struct is_convertible$/;"	s	namespace:Eigen::internal
is_convertible_impl	Eigen/src/Core/util/Meta.h	/^struct is_convertible_impl$/;"	s	namespace:Eigen::internal
is_dynamic_size_storage	Eigen/src/Core/Matrix.h	/^      is_dynamic_size_storage = _MaxRows==Dynamic || _MaxCols==Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon450
is_exact	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_exact = false;$/;"	m	struct:std::numeric_limits
is_iec559	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_iec559 = false;$/;"	m	struct:std::numeric_limits
is_integer	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_integer = false;$/;"	m	struct:std::numeric_limits
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<bool>            { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<char>            { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed char>     { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed int>      { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed long>     { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed short>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_integral        { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_large	Eigen/src/Core/GeneralProduct.h	/^  enum { is_large = MaxSize == Dynamic ||$/;"	e	enum:Eigen::internal::product_size_category::__anon587
is_malloc_allowed	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }$/;"	f	namespace:Eigen::internal
is_malloc_allowed_impl	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed_impl(bool update, bool new_value = false)$/;"	f	namespace:Eigen::internal
is_modulo	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_modulo = false;$/;"	m	struct:std::numeric_limits
is_ref_compatible	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct is_ref_compatible$/;"	s	namespace:Eigen::internal
is_ref_compatible_impl	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct is_ref_compatible_impl$/;"	s	namespace:Eigen::internal
is_row_major	Eigen/src/Core/ProductEvaluators.h	/^  template<typename T> struct is_row_major : internal::conditional<(int(T::Flags)&RowMajorBit), internal::true_type, internal::false_type>::type {};$/;"	s	struct:Eigen::internal::generic_product_impl
is_same	Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_same	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_signed	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_signed = true;$/;"	m	struct:std::numeric_limits
is_specialized	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_specialized = true;$/;"	m	struct:std::numeric_limits
isfinite	Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isfinite)(const T &x) { return internal::isfinite_impl(x); }$/;"	f	namespace:Eigen::numext
isfinite	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isfinite)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isfinite	Eigen/src/Core/arch/CUDA/Half.h	/^bool (isfinite)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isfinite_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isfinite_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isfinite_impl	Eigen/src/Core/MathFunctions.h	/^isfinite_impl(const T& x)$/;"	f	namespace:Eigen::internal
isfinite_impl	Eigen/src/Core/MathFunctions.h	/^isfinite_impl(const T&) { return true; }$/;"	f	namespace:Eigen::internal
isinf	Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isinf)   (const T &x) { return internal::isinf_impl(x); }$/;"	f	namespace:Eigen::numext
isinf	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isinf)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isinf	Eigen/src/Core/arch/CUDA/Half.h	/^bool (isinf)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isinf_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isinf_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const double& x)      { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const float& x)       { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const long double& x) { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^isinf_impl(const T& x)$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^isinf_impl(const T&) { return false; }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const double& x)      { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const float& x)       { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const long double& x) { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_msvc_helper	Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool isinf_msvc_helper(T x)$/;"	f	namespace:Eigen::internal
isnan	Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isnan)   (const T &x) { return internal::isnan_impl(x); }$/;"	f	namespace:Eigen::numext
isnan	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isnan)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isnan	Eigen/src/Core/arch/CUDA/Half.h	/^bool (isnan)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isnan_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isnan_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const double& x)      { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const float& x)       { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const long double& x) { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^isnan_impl(const T& x)$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^isnan_impl(const T&) { return false; }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const double& x)      { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const float& x)       { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
isnan_impl	Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const long double& x) { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
iterations	Eigen/src/Eigenvalues/RealQZ.h	/^      Index iterations() const$/;"	f	class:Eigen::RealQZ
iterations	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index iterations() const$/;"	f	class:Eigen::IterativeSolverBase
jacobiSvd	Eigen/src/SVD/JacobiSVD.h	/^MatrixBase<Derived>::jacobiSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
k	models/models.hpp	/^    Real k[9];$/;"	m	class:PeroxideOxideEquation
k1	core_methods.hpp	/^    double *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k1	core_methods.hpp	/^    double *k1,*k2,*k3;$/;"	m	class:RK3
k1	methods/core_methods.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k1	methods/core_methods.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k1	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k1	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k2	core_methods.hpp	/^    double *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k2	core_methods.hpp	/^    double *k1,*k2,*k3;$/;"	m	class:RK3
k2	methods/core_methods.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k2	methods/core_methods.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k2	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k2	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k3	core_methods.hpp	/^    double *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k3	core_methods.hpp	/^    double *k1,*k2,*k3;$/;"	m	class:RK3
k3	methods/core_methods.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k3	methods/core_methods.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k3	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k3	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3;$/;"	m	class:RK3
k4	core_methods.hpp	/^    double *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k4	methods/core_methods.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
k4	methods/step_integrators.hpp	/^    Real *k1,*k2,*k3,*k4;$/;"	m	class:RK4
kappa	methods/stabilized_methods.cpp	/^Real** ROCK2::kappa;$/;"	m	class:ROCK2	file:
kappa	methods/stabilized_methods.hpp	/^    static Real **kappa;$/;"	m	class:ROCK2
kc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index kc() const { return m_kc; }$/;"	f	class:Eigen::internal::level3_blocking
keep_diag	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    struct keep_diag {$/;"	s	class:Eigen::IncompleteLUT
keep_diag	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    struct keep_diag {$/;"	s	class:Eigen::SimplicialCholeskyBase
kernel	Eigen/src/LU/FullPivLU.h	/^    inline const internal::kernel_retval<FullPivLU> kernel() const$/;"	f	class:Eigen::FullPivLU
kernel_retval	Eigen/src/LU/FullPivLU.h	/^struct kernel_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
kernel_retval_base	Eigen/src/misc/Kernel.h	/^  explicit kernel_retval_base(const DecompositionType& dec)$/;"	f	struct:Eigen::internal::kernel_retval_base
kernel_retval_base	Eigen/src/misc/Kernel.h	/^template<typename _DecompositionType> struct kernel_retval_base$/;"	s	namespace:Eigen::internal
l	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  int64_t   l[2];$/;"	m	union:Eigen::internal::__anon513
l1CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l1CacheSize()$/;"	f	namespace:Eigen
l2CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l2CacheSize()$/;"	f	namespace:Eigen
l3CacheSize	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l3CacheSize()$/;"	f	namespace:Eigen
lambda	models/models.hpp	/^    Real lambda;$/;"	m	class:TestEquation
lapack_complex_double	Eigen/src/misc/lapacke.h	96;"	d
lapack_complex_double_imag	Eigen/src/misc/lapacke.h	104;"	d
lapack_complex_double_real	Eigen/src/misc/lapacke.h	100;"	d
lapack_complex_float	Eigen/src/misc/lapacke.h	80;"	d
lapack_complex_float_imag	Eigen/src/misc/lapacke.h	88;"	d
lapack_complex_float_real	Eigen/src/misc/lapacke.h	84;"	d
lapack_int	Eigen/src/misc/lapacke.h	53;"	d
lapack_logical	Eigen/src/misc/lapacke.h	57;"	d
largest_eigenval	models/models.cpp	/^Real Equation::largest_eigenval(const Real *y0)$/;"	f	class:Equation
largest_eigenval	models/models.cpp	/^Real TestEquation::largest_eigenval(const Real *y0)$/;"	f	class:TestEquation
lastCoeff	Eigen/src/SparseCore/SparseBlock.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
lastErrorMessage	Eigen/src/SparseLU/SparseLU.h	/^    std::string lastErrorMessage() const$/;"	f	class:Eigen::SparseLU
lastErrorMessage	Eigen/src/SparseQR/SparseQR.h	/^    std::string lastErrorMessage() const { return m_lastError; }$/;"	f	class:Eigen::SparseQR
lazyAssign	Eigen/src/Core/Assign.h	/^  ::lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
lazyAssign	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
lazyAssign	Eigen/src/Core/TriangularMatrix.h	/^void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyAssign	Eigen/src/Core/TriangularMatrix.h	/^void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyProduct	Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::lazyProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
lazyproduct	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> lazyproduct;$/;"	t	struct:Eigen::internal::generic_product_impl
lda	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon111::__anon112
ldlt	Eigen/src/Cholesky/LDLT.h	/^MatrixBase<Derived>::ldlt() const$/;"	f	class:Eigen::MatrixBase
ldlt	Eigen/src/Cholesky/LDLT.h	/^SelfAdjointView<MatrixType, UpLo>::ldlt() const$/;"	f	class:Eigen::SelfAdjointView
ldlt_inplace	Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Lower>$/;"	s	namespace:Eigen::internal
ldlt_inplace	Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Upper>$/;"	s	namespace:Eigen::internal
least_square_conjugate_gradient	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^void least_square_conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
leftCols	Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr leftCols(Index n)$/;"	f
leftCols	Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr leftCols(Index n) const$/;"	f
leftCols	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type leftCols(Index n = N) const$/;"	f
leftCols	Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type leftCols(Index n = N)$/;"	f
legends	build/study_err.py	/^    legends=[]$/;"	v
length	Eigen/src/Householder/HouseholderSequence.h	/^    Index length() const { return m_length; }  \/**< \\brief Returns the length of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
length	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of principal columns in this row *\/$/;"	m	struct:internal::Colamd_Row
length	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of rows in this column *\/$/;"	m	struct:internal::colamd_col
level3_blocking	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    level3_blocking()$/;"	f	class:Eigen::internal::level3_blocking
level3_blocking	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class level3_blocking$/;"	c	namespace:Eigen::internal
lgamma	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^lgamma() const$/;"	f
lhs	Eigen/src/Core/CwiseBinaryOp.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CwiseBinaryOp
lhs	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const LhsNestedCleaned& lhs() const { return m_lhs; }$/;"	f	class:Eigen::Product
lhs_length	Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_length;$/;"	m	struct:Eigen::internal::GemmParallelInfo
lhs_start	Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_start;$/;"	m	struct:Eigen::internal::GemmParallelInfo
linear	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstLinearPart linear() const { return ConstLinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linear	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline LinearPart linear() { return LinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linearExt	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt()$/;"	f	class:Eigen::Transform
linearExt	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt() const$/;"	f	class:Eigen::Transform
linspaced_op	Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op(const Scalar& low, const Scalar& high, Index num_steps)$/;"	f	struct:Eigen::internal::linspaced_op
linspaced_op	Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType> struct linspaced_op$/;"	s	namespace:Eigen::internal
linspaced_op_impl	Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op_impl(const Scalar& low, const Scalar& high, Index num_steps) :$/;"	f	struct:Eigen::internal::linspaced_op_impl
linspaced_op_impl	Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,\/*IsInteger*\/false>$/;"	s	namespace:Eigen::internal
linspaced_op_impl	Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,\/*IsInteger*\/true>$/;"	s	namespace:Eigen::internal
list	Eigen/src/StlSupport/StdList.h	/^  class list<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
list_base	Eigen/src/StlSupport/StdList.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > list_base;$/;"	t	class:std::list
llt	Eigen/src/Cholesky/LLT.h	/^MatrixBase<Derived>::llt() const$/;"	f	class:Eigen::MatrixBase
llt	Eigen/src/Cholesky/LLT.h	/^SelfAdjointView<MatrixType, UpLo>::llt() const$/;"	f	class:Eigen::SelfAdjointView
llt_inplace	Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Lower>$/;"	s	namespace:Eigen::internal
llt_inplace	Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Upper>$/;"	s	namespace:Eigen::internal
llt_rank_update_lower	Eigen/src/Cholesky/LLT.h	/^static Index llt_rank_update_lower(MatrixType& mat, const VectorType& vec, const typename MatrixType::RealScalar& sigma)$/;"	f	namespace:Eigen::internal
load	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet load(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
loadHalfPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadHalfPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
log	Eigen/src/Core/MathFunctions.h	/^T log(const T &x) {$/;"	f	namespace:Eigen::numext
log	Eigen/src/Core/MathFunctions.h	/^double log(const double &x) { return ::log(x); }$/;"	f	namespace:Eigen::numext
log	Eigen/src/Core/MathFunctions.h	/^float log(const float &x) { return ::logf(x); }$/;"	f	namespace:Eigen::numext
log	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log(const half& a) {$/;"	f	namespace:Eigen::half_impl
log	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log() const$/;"	f
log10	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log10(const half& a) {$/;"	f	namespace:Eigen::half_impl
log10	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log10() const$/;"	f
log1p	Eigen/src/Core/MathFunctions.h	/^  EIGEN_DEVICE_FUNC inline Scalar log1p(const Scalar& x) {$/;"	f	namespace:Eigen::internal::std_fallback
log1p	Eigen/src/Core/MathFunctions.h	/^double log1p(const double &x) { return ::log1p(x); }$/;"	f	namespace:Eigen::numext
log1p	Eigen/src/Core/MathFunctions.h	/^float log1p(const float &x) { return ::log1pf(x); }$/;"	f	namespace:Eigen::numext
log1p	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(log1p, Scalar) log1p(const Scalar& x)$/;"	f	namespace:Eigen::numext
log1p	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log1p(const half& a) {$/;"	f	namespace:Eigen::half_impl
log1p	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log1p() const$/;"	f
log1p_impl	Eigen/src/Core/MathFunctions.h	/^struct log1p_impl {$/;"	s	namespace:Eigen::internal
log1p_retval	Eigen/src/Core/MathFunctions.h	/^struct log1p_retval$/;"	s	namespace:Eigen::internal
log2	Eigen/src/Core/MathFunctions.h	/^inline int log2(int x)$/;"	f	namespace:Eigen::numext
logAbsDeterminant	Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
logAbsDeterminant	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::logAbsDeterminant() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
logAbsDeterminant	Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
logAbsDeterminant	Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::HouseholderQR
logAbsDeterminant	Eigen/src/SparseLU/SparseLU.h	/^    Scalar logAbsDeterminant() const$/;"	f	class:Eigen::SparseLU
logDeterminant	Eigen/src/CholmodSupport/CholmodSupport.h	/^    Scalar logDeterminant() const$/;"	f	class:Eigen::CholmodBase
logh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half logh(const Eigen::half& a) {$/;"	f
lowest	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half lowest() {$/;"	f	struct:Eigen::NumTraits
lowest	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half lowest() { return Eigen::half_impl::raw_uint16_to_half(0xfbff); }$/;"	f	struct:std::numeric_limits
lpNorm	Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::lpNorm() const$/;"	f	class:Eigen::MatrixBase
lpNorm	Eigen/src/Core/VectorwiseOp.h	/^    const typename LpNormReturnType<p>::Type lpNorm() const$/;"	f	class:Eigen::VectorwiseOp
lpNorm_selector	Eigen/src/Core/Dot.h	/^struct lpNorm_selector$/;"	s	namespace:Eigen::internal
lpNorm_selector	Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 1>$/;"	s	namespace:Eigen::internal
lpNorm_selector	Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 2>$/;"	s	namespace:Eigen::internal
lpNorm_selector	Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, Infinity>$/;"	s	namespace:Eigen::internal
lsub	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector lsub; \/\/ Compressed row indices of L rectangular supernodes. $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
lu	Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lusup	Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  lusup; \/\/ nonzero values of L ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
m_E	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_E; \/\/ The permutation applied to columns$/;"	m	class:Eigen::SPQR
m_H	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_H;  \/\/The householder vectors$/;"	m	class:Eigen::SPQR
m_HPinv	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_HPinv; \/\/ The row permutation of H$/;"	m	class:Eigen::SPQR
m_HTau	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_dense *m_HTau; \/\/ The Householder coefficients$/;"	m	class:Eigen::SPQR
m_L	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    FactorType m_L;              \/\/ The lower part stored in CSC$/;"	m	class:Eigen::IncompleteCholesky
m_LDLT	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_LDLT;$/;"	m	class:Eigen::SimplicialCholesky
m_Lstore	Eigen/src/SparseLU/SparseLU.h	/^    SCMatrix m_Lstore; \/\/ The lower triangular matrix (supernodal)$/;"	m	class:Eigen::SparseLU
m_P	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ Fill-reducing permutation$/;"	m	class:Eigen::IncompleteLUT
m_P	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ the permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Pinv	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ Inverse permutation$/;"	m	class:Eigen::IncompleteLUT
m_Pinv	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ the inverse permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Q	Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Q	Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_Q;               \/\/ The orthogonal reflectors$/;"	m	class:Eigen::SparseQR
m_R	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable MatrixType m_R; \/\/ The sparse matrix R in Eigen format$/;"	m	class:Eigen::SPQR
m_R	Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_R;               \/\/ The triangular factor matrix$/;"	m	class:Eigen::SparseQR
m_S	Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_T	Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Ustore	Eigen/src/SparseLU/SparseLU.h	/^    MappedSparseMatrix<Scalar,ColMajor,StorageIndex> m_Ustore; \/\/ The upper triangular matrix$/;"	m	class:Eigen::SparseLU
m_Z	Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_actualAlpha	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Scalar m_actualAlpha;$/;"	m	struct:Eigen::internal::gemm_functor
m_adjoint	Eigen/src/SVD/JacobiSVD.h	/^  TransposeTypeWithSameStorageOrder m_adjoint;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_algoswap	Eigen/src/SVD/BDCSVD.h	/^  int m_algoswap;$/;"	m	class:Eigen::BDCSVD
m_allocatedElements	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedElements;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedSize;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::internal::CompressedStorage
m_allow_tol	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_allow_tol; \/\/ Allow to use some tolerance during numerical factorization.$/;"	m	class:Eigen::SPQR
m_alphas	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_alphas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_analysisIsOk	Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::CholmodBase
m_analysisIsOk	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    bool m_analysisIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_analysisIsOk	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_analysisIsOk	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_analysisIsOk	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::PastixBase
m_analysisIsOk	Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_analysisIsOk	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SPQR
m_analysisIsOk	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_analysisIsOk	Eigen/src/SparseLU/SparseLU.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SparseLU
m_analysisIsOk	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::SuperLUBase
m_analysisIsOk	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::UmfPackLU
m_analysisIsok	Eigen/src/SparseQR/SparseQR.h	/^    bool m_analysisIsok;$/;"	m	class:Eigen::SparseQR
m_angle	Eigen/src/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	Eigen/src/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_arg	Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& m_arg;$/;"	m	class:Eigen::internal::EvalToTemp
m_arg	Eigen/src/Core/CoreEvaluators.h	/^  const ArgTypeNested m_arg;$/;"	m	struct:Eigen::internal::unary_evaluator
m_arg	Eigen/src/Core/CoreEvaluators.h	/^  typename internal::add_const_on_value_type<ArgTypeNested>::type m_arg;$/;"	m	struct:Eigen::internal::evaluator
m_arg	Eigen/src/SparseCore/SparseTriangularView.h	/^  const ArgType& m_arg;$/;"	m	struct:Eigen::internal::unary_evaluator
m_arg1	Eigen/src/Core/CwiseTernaryOp.h	/^  Arg1Nested m_arg1;$/;"	m	class:Eigen::CwiseTernaryOp
m_arg1Impl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Arg1> m_arg1Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator
m_arg2	Eigen/src/Core/CwiseTernaryOp.h	/^  Arg2Nested m_arg2;$/;"	m	class:Eigen::CwiseTernaryOp
m_arg2Impl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Arg2> m_arg2Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator
m_arg3	Eigen/src/Core/CwiseTernaryOp.h	/^  Arg3Nested m_arg3;$/;"	m	class:Eigen::CwiseTernaryOp
m_arg3Impl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Arg3> m_arg3Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator
m_argImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator
m_argImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator_wrapper_base
m_argImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgTypeNestedCleaned> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/SparseCore/SparseBlock.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/SparseCore/SparseTranspose.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/SparseCore/SparseTriangularView.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	Eigen/src/SparseCore/SparseView.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_axis	Eigen/src/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_betas	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType m_betas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_bidiagonal	Eigen/src/SVD/UpperBidiagonalization.h	/^    BidiagonalType m_bidiagonal;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_block	Eigen/src/SparseCore/SparseBlock.h	/^    const XprType &m_block;$/;"	m	struct:Eigen::internal::unary_evaluator
m_block	Eigen/src/SparseCore/SparseBlock.h	/^  const XprType& m_block;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_blockA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    LhsScalar* m_blockA;$/;"	m	class:Eigen::internal::level3_blocking
m_blockB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockB;$/;"	m	class:Eigen::internal::level3_blocking
m_blockCols	Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockCols	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::BlockImpl
m_blockRows	Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockRows	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::BlockImpl
m_blocking	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    BlockingType& m_blocking;$/;"	m	struct:Eigen::internal::gemm_functor
m_buffer	Eigen/src/SparseCore/AmbiVector.h	/^    Scalar* m_buffer;$/;"	m	class:Eigen::internal::AmbiVector
m_c	Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_cR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_cR; \/\/ The sparse R factor in cholmod format$/;"	m	class:Eigen::SPQR
m_cachedIndex	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_cachedIndex; \/\/ current coordinate$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cachedValue	Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_cachedValue;       \/\/ current value$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cc	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_common m_cc; \/\/ Workspace and parameters$/;"	m	class:Eigen::SPQR
m_cholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable cholmod_common m_cholmod;$/;"	m	class:Eigen::CholmodBase
m_cholmodFactor	Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_factor* m_cholmodFactor;$/;"	m	class:Eigen::CholmodBase
m_coeff	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typename DiagonalCoeffType::Scalar m_coeff;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_coeffs	Eigen/src/Core/BandMatrix.h	/^    CoefficientsType m_coeffs;$/;"	m	class:Eigen::internal::BandMatrix
m_coeffs	Eigen/src/Core/BandMatrix.h	/^    const CoefficientsType& m_coeffs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_coeffs	Eigen/src/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	Eigen/src/Geometry/Quaternion.h	/^    Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	Eigen/src/Geometry/Quaternion.h	/^    const Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	Eigen/src/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	Eigen/src/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	Eigen/src/Householder/HouseholderSequence.h	/^    typename CoeffsType::Nested m_coeffs;$/;"	m	class:Eigen::HouseholderSequence
m_col	Eigen/src/Core/CommaInitializer.h	/^  Index m_col;              \/\/ current col id$/;"	m	struct:Eigen::CommaInitializer
m_col	Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_col	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_col; \/\/ Number of columns$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_colFactor	Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, ColFactor> m_colFactor;$/;"	m	class:Eigen::Replicate
m_colNormsDirect	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colNormsDirect;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colNormsUpdated	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colNormsUpdated;$/;"	m	class:Eigen::ColPivHouseholderQR
m_col_to_sup	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_col_to_sup; \/\/ col_to_sup[j] is the supernode number to which column j belongs$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_cols	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::ColsAtCompileTime> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseCol ? ArgType::ColsAtCompileTime : 1> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::CwiseNullaryOp
m_cols	Eigen/src/Core/DenseStorage.h	/^    Index m_cols;$/;"	m	class:Eigen::DenseStorage
m_cols	Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::MapBase
m_cols	Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_cols	Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_cols	Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_colsPermutation	Eigen/src/QR/ColPivHouseholderQR.h	/^    PermutationType m_colsPermutation;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colsTranspositions	Eigen/src/LU/FullPivLU.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_colsTranspositions	Eigen/src/QR/ColPivHouseholderQR.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::ColPivHouseholderQR
m_cols_permutation	Eigen/src/QR/FullPivHouseholderQR.h	/^    PermutationType m_cols_permutation;$/;"	m	class:Eigen::FullPivHouseholderQR
m_cols_transpositions	Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_cols_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_comm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_comm; \/\/ The MPI communicator identifier$/;"	m	class:Eigen::PastixBase
m_compU	Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_compV	Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_computationOptions	Eigen/src/SVD/SVDBase.h	/^  unsigned int m_computationOptions;$/;"	m	class:Eigen::SVDBase
m_computeFullU	Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeFullV	Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computeQZ	Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_computeQZ;$/;"	m	class:Eigen::RealQZ
m_computeThinU	Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeThinV	Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computed	Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_computed;$/;"	m	class:Eigen::BDCSVD
m_condition	Eigen/src/Core/Select.h	/^    typename ConditionMatrixType::Nested m_condition;$/;"	m	class:Eigen::Select
m_conditionImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ConditionMatrixType> m_conditionImpl;$/;"	m	struct:Eigen::internal::evaluator
m_containsDiag	Eigen/src/SparseCore/SparseTriangularView.h	/^      bool m_containsDiag;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_control	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackControl m_control;$/;"	m	class:Eigen::UmfPackLU
m_cpqr	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  ColPivHouseholderQR<MatrixType> m_cpqr;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_currentBlockRows	Eigen/src/Core/CommaInitializer.h	/^  Index m_currentBlockRows; \/\/ current block height$/;"	m	struct:Eigen::CommaInitializer
m_currentEl	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_currentEl;   \/\/ the current element in sparse\/linked-list mode$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_data	Eigen/src/Core/CoreEvaluators.h	/^  PointerType m_data;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_data	Eigen/src/Core/CoreEvaluators.h	/^  const Scalar *m_data;$/;"	m	struct:Eigen::internal::evaluator
m_data	Eigen/src/Core/DenseStorage.h	/^    T *m_data;$/;"	m	class:Eigen::DenseStorage
m_data	Eigen/src/Core/DenseStorage.h	/^    internal::plain_array<T,Size,_Options> m_data;$/;"	m	class:Eigen::DenseStorage
m_data	Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize)+(ForceAlignment?EIGEN_MAX_ALIGN_BYTES:0),0> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize),0,EIGEN_PLAIN_ENUM_MIN(AlignedMax,PacketSize)> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	Eigen/src/Core/MapBase.h	/^    PointerType m_data;$/;"	m	class:Eigen::MapBase
m_data	Eigen/src/Core/util/BlasUtil.h	/^  Scalar *m_data;$/;"	m	class:Eigen::internal::BlasLinearMapper
m_data	Eigen/src/Core/util/BlasUtil.h	/^  Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::blas_data_mapper
m_data	Eigen/src/Core/util/BlasUtil.h	/^  Scalar* m_data;$/;"	m	class:Eigen::internal::BlasVectorMapper
m_data	Eigen/src/SparseCore/SparseMatrix.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseMatrix
m_data	Eigen/src/SparseCore/SparseVector.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseVector
m_deallocate	Eigen/src/Core/util/Memory.h	/^    bool m_deallocate;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_dec	Eigen/src/Core/Solve.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::Solve
m_dec	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::SolveWithGuess
m_dec	Eigen/src/misc/Image.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::image_retval_base
m_dec	Eigen/src/misc/Kernel.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_dest	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Dest& m_dest;$/;"	m	struct:Eigen::internal::gemm_functor
m_detPermC	Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_detPermR	Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_det_p	Eigen/src/LU/PartialPivLU.h	/^    signed char m_det_p;$/;"	m	class:Eigen::PartialPivLU
m_det_pq	Eigen/src/LU/FullPivLU.h	/^    signed char m_det_pq;$/;"	m	class:Eigen::FullPivLU
m_det_pq	Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::ColPivHouseholderQR
m_det_pq	Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::FullPivHouseholderQR
m_diag	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorType m_diag;                                \/\/ the diagonal coefficients (LDLT mode)$/;"	m	class:Eigen::SimplicialCholeskyBase
m_diagCoeffImpl	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<DiagonalCoeffType> m_diagCoeffImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagCoeffNested	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    DiagCoeffNested m_diagCoeffNested;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_diagCoeffNested	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  DiagCoeffNested m_diagCoeffNested;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagImpl	Eigen/src/Core/ProductEvaluators.h	/^  evaluator<DiagonalType> m_diagImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_diagSize	Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalVectorType m_diagonal;$/;"	m	class:Eigen::DiagonalMatrix
m_diagonal	Eigen/src/Core/DiagonalMatrix.h	/^    typename DiagonalVectorType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalWrapper
m_diagpivotthresh	Eigen/src/SparseLU/SparseLU.h	/^    RealScalar m_diagpivotthresh; \/\/ Specifies the threshold used for a diagonal entry to be an acceptable pivot$/;"	m	class:Eigen::SparseLU
m_direction	Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_divisor	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_divisor;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_dparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Array<double,DPARM_SIZE,1> m_dparm; \/\/ Scalar vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_droptol	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    RealScalar m_droptol;$/;"	m	class:Eigen::IncompleteLUT
m_dst	Eigen/src/Core/AssignEvaluator.h	/^  DstEvaluatorType& m_dst;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dstExpr	Eigen/src/Core/AssignEvaluator.h	/^  DstXprType& m_dstExpr;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dummy	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  MatrixType m_dummy; \/\/ used to default initialize the Ref<> object$/;"	m	class:Eigen::internal::generic_matrix_wrapper
m_dummy	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixType m_dummy;$/;"	m	class:Eigen::UmfPackLU
m_eigenvectorsOk	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::ComplexEigenSolver
m_eigenvectorsOk	Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::EigenSolver
m_eigenvectorsOk	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivalues	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivalues	Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::EigenSolver
m_eivalues	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    RealVectorType m_eivalues;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivec	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_eivec;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivec	Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::EigenSolver
m_eivec	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvectorsType m_eivec;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eivec	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    EigenvectorsType m_eivec;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_else	Eigen/src/Core/Select.h	/^    typename ElseMatrixType::Nested m_else;$/;"	m	class:Eigen::Select
m_elseImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ElseMatrixType> m_elseImpl;$/;"	m	struct:Eigen::internal::evaluator
m_empty	Eigen/src/SparseCore/SparseDenseProduct.h	/^    bool m_empty;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_end	Eigen/src/Core/CoreIterators.h	/^  const Index m_end;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_end	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_end;$/;"	m	class:Eigen::internal::AmbiVector
m_end	Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_end	Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_end	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_end;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_end	Eigen/src/SparseCore/SparseView.h	/^        const Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_endidrow	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_endidrow;                       \/\/ End index of row indices of the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_endidval	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_endidval;                 \/\/ End of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_epsilon	Eigen/src/SparseCore/AmbiVector.h	/^    RealScalar m_epsilon;       \/\/ epsilon used to prune zero coefficients$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_epsilon	Eigen/src/SparseCore/SparseView.h	/^  RealScalar m_epsilon;$/;"	m	class:Eigen::SparseView
m_error	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable RealScalar m_error;$/;"	m	class:Eigen::IterativeSolverBase
m_etree	Eigen/src/SparseLU/SparseLU.h	/^    IndexVector m_etree; \/\/ Column elimination tree $/;"	m	class:Eigen::SparseLU
m_etree	Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_etree;            \/\/ Column elimination tree$/;"	m	class:Eigen::SparseQR
m_eval	Eigen/src/Core/CoreIterators.h	/^  EvaluatorType m_eval;$/;"	m	class:Eigen::InnerIterator
m_eval	Eigen/src/Core/CoreIterators.h	/^  const EvaluatorType& m_eval;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_eval	Eigen/src/SparseCore/SparseBlock.h	/^  const unary_evaluator& m_eval;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_evaluator	Eigen/src/Core/Redux.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::redux_evaluator
m_evaluator	Eigen/src/Core/Visitor.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::visitor_evaluator
m_expr	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const XprType &m_expr;$/;"	m	struct:Eigen::internal::binary_evaluator
m_expression	Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::ArrayWrapper
m_expression	Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::MatrixWrapper
m_expression	Eigen/src/Core/ForceAlignedAccess.h	/^    const ExpressionType& m_expression;$/;"	m	class:Eigen::ForceAlignedAccess
m_expression	Eigen/src/Core/NestByValue.h	/^    const ExpressionType m_expression;$/;"	m	class:Eigen::NestByValue
m_expression	Eigen/src/Core/NoAlias.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::NoAlias
m_extractedDataAreDirty	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::SuperLUBase
m_extractedDataAreDirty	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::UmfPackLU
m_fact_errorCode	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_fact_errorCode;$/;"	m	class:Eigen::UmfPackLU
m_factor	Eigen/src/Geometry/Scaling.h	/^  Scalar m_factor;$/;"	m	class:Eigen::UniformScaling
m_factor	Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar m_factor;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_factorizationIsOk	Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::CholmodBase
m_factorizationIsOk	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    bool m_factorizationIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_factorizationIsOk	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_factorizationIsOk	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_factorizationIsOk	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::PastixBase
m_factorizationIsOk	Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_factorizationIsOk	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SPQR
m_factorizationIsOk	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_factorizationIsOk	Eigen/src/SparseLU/SparseLU.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SparseLU
m_factorizationIsOk	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::SuperLUBase
m_factorizationIsOk	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::UmfPackLU
m_factorizationIsok	Eigen/src/SparseQR/SparseQR.h	/^    bool m_factorizationIsok;$/;"	m	class:Eigen::SparseQR
m_fillfactor	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    int m_fillfactor;$/;"	m	class:Eigen::IncompleteLUT
m_firstRowElt	Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_firstRowElt;      \/\/ First element in each row$/;"	m	class:Eigen::SparseQR
m_flip	Eigen/src/Core/functors/NullaryFunctors.h	/^  const bool m_flip;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_format	Eigen/src/Core/IO.h	/^    IOFormat m_format;$/;"	m	class:Eigen::WithFormat
m_functor	Eigen/src/Core/AssignEvaluator.h	/^  const Functor &m_functor;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_functor	Eigen/src/Core/CoreEvaluators.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::binary_evaluator
m_functor	Eigen/src/Core/CoreEvaluators.h	/^  const MemberOp m_functor;$/;"	m	struct:Eigen::internal::evaluator
m_functor	Eigen/src/Core/CoreEvaluators.h	/^  const NullaryOp m_functor;$/;"	m	struct:Eigen::internal::evaluator
m_functor	Eigen/src/Core/CoreEvaluators.h	/^  const TernaryOp m_functor;$/;"	m	struct:Eigen::internal::ternary_evaluator
m_functor	Eigen/src/Core/CoreEvaluators.h	/^  const UnaryOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::CwiseBinaryOp
m_functor	Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::CwiseNullaryOp
m_functor	Eigen/src/Core/CwiseTernaryOp.h	/^  const TernaryOp m_functor;$/;"	m	class:Eigen::CwiseTernaryOp
m_functor	Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOp
m_functor	Eigen/src/Core/CwiseUnaryView.h	/^    ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryView
m_functor	Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp m_functor;$/;"	m	class:Eigen::PartialReduxExpr
m_functor	Eigen/src/Core/VectorwiseOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::member_redux
m_functor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_functor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_functor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::binary_evaluator
m_functor	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_functor	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_global_iter	Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_global_iter;$/;"	m	class:Eigen::RealQZ
m_glu	Eigen/src/SparseLU/SparseLU.h	/^    typename Base::GlobalLU_t m_glu; $/;"	m	class:Eigen::SparseLU
m_glu	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& m_glu;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_guess	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const GuessType     &m_guess;$/;"	m	class:Eigen::SolveWithGuess
m_hCoeffs	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::HessenbergDecomposition
m_hCoeffs	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::Tridiagonalization
m_hCoeffs	Eigen/src/QR/ColPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::ColPivHouseholderQR
m_hCoeffs	Eigen/src/QR/FullPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::FullPivHouseholderQR
m_hCoeffs	Eigen/src/QR/FullPivHouseholderQR.h	/^  typename HCoeffsType::Nested m_hCoeffs;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_hCoeffs	Eigen/src/QR/HouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::HouseholderQR
m_hasCopy	Eigen/src/SparseCore/SparseRef.h	/^    bool m_hasCopy;$/;"	m	class:Eigen::Ref
m_hcoeffs	Eigen/src/SparseQR/SparseQR.h	/^    ScalarVector m_hcoeffs;         \/\/ The Householder coefficients$/;"	m	class:Eigen::SparseQR
m_hess	Eigen/src/Eigenvalues/ComplexSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::ComplexSchur
m_hess	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const HessenbergDecomposition<MatrixType>& m_hess;$/;"	m	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
m_hess	Eigen/src/Eigenvalues/RealSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::RealSchur
m_high	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_high;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_householder	Eigen/src/SVD/UpperBidiagonalization.h	/^    MatrixType m_householder;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_id	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_id	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_id	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    StorageIndex m_id;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_idrow	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idrow;                          \/\/ Index to browse the row indices $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_idval	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idval;                          \/\/ Index to browse the values in the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_index	Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamicindex<Index, XprType::DiagIndex> m_index;$/;"	m	struct:Eigen::internal::evaluator
m_index	Eigen/src/Core/Diagonal.h	/^    const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;$/;"	m	class:Eigen::Diagonal
m_index	Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_index;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_indexPtr	Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_indexPtr; \/\/ Pointer to the adjacenccy list of each row\/column$/;"	m	class:Eigen::MetisOrdering
m_indices	Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::PermutationMatrix
m_indices	Eigen/src/Core/PermutationMatrix.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::PermutationWrapper
m_indices	Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Transpositions
m_indices	Eigen/src/Core/Transpositions.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::TranspositionsWrapper
m_indices	Eigen/src/SparseCore/CompressedStorage.h	/^    StorageIndex* m_indices;$/;"	m	class:Eigen::internal::CompressedStorage
m_indices	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_indices	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_info	Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LDLT
m_info	Eigen/src/Cholesky/LLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LLT
m_info	Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::CholmodBase
m_info	Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::ComplexSchur
m_info	Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::EigenSolver
m_info	Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo m_info;$/;"	m	class:Eigen::RealQZ
m_info	Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::RealSchur
m_info	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_info	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteCholesky
m_info	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteLUT
m_info	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable ComputationInfo m_info;$/;"	m	class:Eigen::IterativeSolverBase
m_info	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::PastixBase
m_info	Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::PardisoImpl
m_info	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SPQR
m_info	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_info	Eigen/src/SparseLU/SparseLU.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseLU
m_info	Eigen/src/SparseQR/SparseQR.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseQR
m_info	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SuperLUBase
m_info	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::UmfPackLU
m_initialShift	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    RealScalar m_initialShift;   \/\/ The initial shift parameter$/;"	m	class:Eigen::IncompleteCholesky
m_initisOk	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_initisOk; $/;"	m	class:Eigen::PastixBase
m_inner	Eigen/src/Core/CoreIterators.h	/^  Index m_inner;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_inner	Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;$/;"	m	class:Eigen::Stride
m_inner	Eigen/src/SparseCore/SparseView.h	/^        Index m_inner;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_innerDim	Eigen/src/Core/ProductEvaluators.h	/^  Index m_innerDim;$/;"	m	struct:Eigen::internal::product_evaluator
m_innerIndex	Eigen/src/SparseCore/SparseBlock.h	/^  const Index m_innerIndex;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_innerIndices	Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_innerIndices; \/\/ Adjacency list $/;"	m	class:Eigen::MetisOrdering
m_innerIndices	Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerIndices;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerNonZeros;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_innerNonZeros;     \/\/ optional, if null then the data is compressed$/;"	m	class:Eigen::SparseMatrix
m_innerSize	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    StorageIndex m_innerSize;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_innerSize	Eigen/src/SparseCore/SparseMap.h	/^    Index   m_innerSize;$/;"	m	class:Eigen::SparseMapBase
m_innerSize	Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SparseMatrix
m_innerStride	Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamic<Index, XprType::InnerStrideAtCompileTime> m_innerStride;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_invdiag	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Vector m_invdiag;$/;"	m	class:Eigen::DiagonalPreconditioner
m_invp	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_invp;  \/\/ Inverse permutation vector$/;"	m	class:Eigen::PastixBase
m_iparm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Array<int,IPARM_SIZE,1> m_iparm; \/\/ integer vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_iparm	Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ParameterType m_iparm;$/;"	m	class:Eigen::PardisoImpl
m_isAllocated	Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isDense	Eigen/src/SparseCore/AmbiVector.h	/^    bool m_isDense;             \/\/ mode of the vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_isEtreeOk	Eigen/src/SparseQR/SparseQR.h	/^    bool m_isEtreeOk;               \/\/ whether the elimination tree match the initial input matrix$/;"	m	class:Eigen::SparseQR
m_isInitialized	Eigen/src/Cholesky/LDLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LDLT
m_isInitialized	Eigen/src/Cholesky/LLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LLT
m_isInitialized	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexEigenSolver
m_isInitialized	Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexSchur
m_isInitialized	Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::EigenSolver
m_isInitialized	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HessenbergDecomposition
m_isInitialized	Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_isInitialized;$/;"	m	class:Eigen::RealQZ
m_isInitialized	Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::RealSchur
m_isInitialized	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_isInitialized	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::Tridiagonalization
m_isInitialized	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::DiagonalPreconditioner
m_isInitialized	Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_isInitialized	Eigen/src/LU/PartialPivLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PartialPivLU
m_isInitialized	Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_isInitialized	Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_isInitialized	Eigen/src/QR/HouseholderQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HouseholderQR
m_isInitialized	Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isInitialized	Eigen/src/SVD/UpperBidiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_isInitialized	Eigen/src/SparseCore/SparseSolverBase.h	/^    mutable bool m_isInitialized;$/;"	m	class:Eigen::SparseSolverBase
m_isQSorted	Eigen/src/SparseQR/SparseQR.h	/^    bool m_isQSorted;               \/\/ whether Q is sorted or not$/;"	m	class:Eigen::SparseQR
m_isRUpToDate	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable bool m_isRUpToDate;$/;"	m	class:Eigen::SPQR
m_isRValue	Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SparseMatrixBase
m_isTranspose	Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_it	Eigen/src/SparseCore/SparseBlock.h	/^  EvalIterator m_it;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_iter	Eigen/src/Core/CoreIterators.h	/^  IteratorType m_iter;$/;"	m	class:Eigen::InnerIterator
m_iterations	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable Index m_iterations;$/;"	m	class:Eigen::IterativeSolverBase
m_jcol	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_jcol	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_jsuper_ref	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index& m_jsuper_ref;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_kc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_kc;$/;"	m	class:Eigen::internal::level3_blocking
m_l	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::SuperLUBase
m_l	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::UmfPackLU
m_l1	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l1;$/;"	m	struct:Eigen::internal::CacheSizes
m_l1_norm	Eigen/src/Cholesky/LDLT.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::LDLT
m_l1_norm	Eigen/src/Cholesky/LLT.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::LLT
m_l1_norm	Eigen/src/LU/FullPivLU.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::FullPivLU
m_l1_norm	Eigen/src/LU/PartialPivLU.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::PartialPivLU
m_l2	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l2;$/;"	m	struct:Eigen::internal::CacheSizes
m_l3	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l3;$/;"	m	struct:Eigen::internal::CacheSizes
m_lastError	Eigen/src/SparseLU/SparseLU.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseLU
m_lastError	Eigen/src/SparseQR/SparseQR.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseQR
m_length	Eigen/src/Householder/HouseholderSequence.h	/^    Index m_length;$/;"	m	class:Eigen::HouseholderSequence
m_lhs	Eigen/src/Core/CwiseBinaryOp.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_lhs	Eigen/src/Core/Product.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::Product
m_lhs	Eigen/src/Core/ProductEvaluators.h	/^  typename internal::add_const_on_value_type<LhsNested>::type m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhs	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Lhs& m_lhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_lhs	Eigen/src/Geometry/Homogeneous.h	/^  typename LhsMatrixTypeCleaned::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_lhs	Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_lhs	Eigen/src/SparseCore/SparseDenseProduct.h	/^  const LhsArg m_lhs;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_lhs	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Rhs::PlainObject m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhsEval	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const LhsEvaluator &m_lhsEval;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_lhsEval	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<Lhs> &m_lhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Lhs> m_lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_lhsImpl	Eigen/src/Core/ProductEvaluators.h	/^  LhsEtorType m_lhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhsImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Lhs> m_lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_lhsImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<LhsArg> m_lhsImpl;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_lhsIter	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsIter	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_lhsXprImpl	Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualLhs> m_lhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_llCurrent	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llCurrent;$/;"	m	class:Eigen::internal::AmbiVector
m_llSize	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llSize;$/;"	m	class:Eigen::internal::AmbiVector
m_llStart	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llStart;$/;"	m	class:Eigen::internal::AmbiVector
m_low	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_low;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lu	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLUT
m_lu	Eigen/src/LU/FullPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::FullPivLU
m_lu	Eigen/src/LU/PartialPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::PartialPivLU
m_luImpl	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  SparseLUImpl<Scalar, StorageIndex>& m_luImpl;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_mapL	Eigen/src/SparseLU/SparseLU.h	/^  const MappedSupernodalType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixLReturnType
m_mapL	Eigen/src/SparseLU/SparseLU.h	/^  const MatrixLType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_mapU	Eigen/src/SparseLU/SparseLU.h	/^  const MatrixUType& m_mapU;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_marker	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  StorageIndex* m_marker;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_mat	Eigen/src/SparseLU/SparseLU.h	/^    NCMatrix m_mat; \/\/ The input (permuted ) matrix $/;"	m	class:Eigen::SparseLU
m_matImpl	Eigen/src/Core/ProductEvaluators.h	/^  evaluator<MatrixType>   m_matImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_matT	Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matT	Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::EigenSolver
m_matT	Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::RealSchur
m_matU	Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matU	Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matU;$/;"	m	class:Eigen::RealSchur
m_matUisUptodate	Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::ComplexSchur
m_matUisUptodate	Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::RealSchur
m_matX	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_matX;$/;"	m	class:Eigen::ComplexEigenSolver
m_matrix	Eigen/src/Cholesky/LDLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LDLT
m_matrix	Eigen/src/Cholesky/LLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LLT
m_matrix	Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::CwiseUnaryView
m_matrix	Eigen/src/Core/Diagonal.h	/^    typename internal::ref_selector<MatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::Diagonal
m_matrix	Eigen/src/Core/IO.h	/^    typename ExpressionType::Nested m_matrix;$/;"	m	class:Eigen::WithFormat
m_matrix	Eigen/src/Core/Replicate.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::Replicate
m_matrix	Eigen/src/Core/Reverse.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Reverse
m_matrix	Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SelfAdjointView
m_matrix	Eigen/src/Core/Transpose.h	/^    typename internal::ref_selector<MatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::Transpose
m_matrix	Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::TriangularView
m_matrix	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::VectorwiseOp
m_matrix	Eigen/src/Core/VectorwiseOp.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::PartialReduxExpr
m_matrix	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::HessenbergDecomposition
m_matrix	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::Tridiagonalization
m_matrix	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
m_matrix	Eigen/src/Geometry/Homogeneous.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Homogeneous
m_matrix	Eigen/src/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ActualMatrixType m_matrix;$/;"	m	class:Eigen::internal::generic_matrix_wrapper
m_matrix	Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable SparseMatrixType m_matrix;$/;"	m	class:Eigen::PardisoImpl
m_matrix	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    CholMatrixType m_matrix;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_matrix	Eigen/src/SparseCore/SparseBlock.h	/^    typename internal::ref_selector<SparseMatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_matrix	Eigen/src/SparseCore/SparseBlock.h	/^    typename internal::ref_selector<XprType>::non_const_type m_matrix;$/;"	m	class:Eigen::BlockImpl
m_matrix	Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Derived *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSelfAdjointView
m_matrix	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_matrix	Eigen/src/SparseCore/SparseVector.h	/^  const SparseVectorType *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	Eigen/src/SparseCore/SparseView.h	/^  MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseView
m_matrix	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const MappedSuperNodalMatrix& m_matrix; \/\/ Supernodal lower triangular matrix $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_matrix	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_matrix;  \/\/ copy of the factorized matrix$/;"	m	class:Eigen::SuperLUBase
m_matrixU	Eigen/src/SVD/SVDBase.h	/^  MatrixUType m_matrixU;$/;"	m	class:Eigen::SVDBase
m_matrixV	Eigen/src/SVD/SVDBase.h	/^  MatrixVType m_matrixV;$/;"	m	class:Eigen::SVDBase
m_matrixWrapper	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  MatrixWrapper m_matrixWrapper;$/;"	m	class:Eigen::IterativeSolverBase
m_max	Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_maxIterations	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_maxIterations	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index m_maxIterations;$/;"	m	class:Eigen::IterativeSolverBase
m_maxIterationsPerRow	Eigen/src/Eigenvalues/ComplexSchur.h	/^    static const int m_maxIterationsPerRow = 30;$/;"	m	class:Eigen::ComplexSchur
m_maxIterationsPerRow	Eigen/src/Eigenvalues/RealSchur.h	/^    static const int m_maxIterationsPerRow = 40;$/;"	m	class:Eigen::RealSchur
m_maxIters	Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::ComplexSchur
m_maxIters	Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_maxIters;$/;"	m	class:Eigen::RealQZ
m_maxIters	Eigen/src/Eigenvalues/RealSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::RealSchur
m_maxpivot	Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_maxpivot	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_maxpivot	Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_mc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_mc;$/;"	m	class:Eigen::internal::level3_blocking
m_min	Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_mode	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_mode;$/;"	m	class:Eigen::internal::AmbiVector
m_msglvl	Eigen/src/PardisoSupport/PardisoSupport.h	/^    StorageIndex m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_multiplier	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_multiplier;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_nRec	Eigen/src/SVD/BDCSVD.h	/^  Index m_nRec;$/;"	m	class:Eigen::BDCSVD
m_naiveU	Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_naiveV	Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_nc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_nc;$/;"	m	class:Eigen::internal::level3_blocking
m_nnzL	Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nnzU	Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nonZerosPerCol	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_nonZerosPerCol;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_nonzeroSingularValues	Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_nonzero_pivots	Eigen/src/LU/FullPivLU.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_nonzero_pivots	Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::ColPivHouseholderQR
m_nonzero_pivots	Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivHouseholderQR
m_nonzeropivots	Eigen/src/SparseQR/SparseQR.h	/^    Index m_nonzeropivots;          \/\/ Number of non zero pivots found$/;"	m	class:Eigen::SparseQR
m_normOfS	Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_normOfT	Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_nsuper	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_nsuper; \/\/ Number of supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_numIters	Eigen/src/SVD/BDCSVD.h	/^  int m_numIters;$/;"	m	class:Eigen::BDCSVD
m_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_numeric;$/;"	m	class:Eigen::UmfPackLU
m_nzval	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* m_nzval; \/\/array of nonzero values packed by column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_nzval_colptr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_nzval_colptr; \/\/nzval_colptr[j] Stores the location in nzval[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_object	Eigen/src/Core/Ref.h	/^    TPlainObjectType m_object;$/;"	m	class:Eigen::Ref
m_object_bytes	Eigen/src/SparseCore/SparseRef.h	/^    char m_object_bytes[sizeof(TPlainObjectType)];$/;"	m	class:Eigen::Ref
m_ordering	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_ordering; \/\/ Ordering method to use, see SPQR's manual$/;"	m	class:Eigen::SPQR
m_origin	Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_originalMatrix	Eigen/src/misc/Image.h	/^    const MatrixType& m_originalMatrix;$/;"	m	struct:Eigen::internal::image_retval_base
m_other	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_constant_op
m_other	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const Derived& m_other; $/;"	m	struct:Eigen::SPQR_QProduct
m_other	Eigen/src/SparseQR/SparseQR.h	/^  const Derived& m_other;$/;"	m	struct:Eigen::SparseQR_QProduct
m_outer	Eigen/src/Core/CoreIterators.h	/^  const Index m_outer;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_outer	Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;$/;"	m	class:Eigen::Stride
m_outer	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const OuterType m_outer;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_outer	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const OuterType m_outer;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_outer	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const Index m_outer;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_outer	Eigen/src/SparseCore/SparseDenseProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_outer	Eigen/src/SparseCore/SparseView.h	/^        const Index m_outer;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_outer	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_outer;                    \/\/ Current column $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_outerIndex	Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_outerIndex;$/;"	m	class:Eigen::SparseMapBase
m_outerIndex	Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_outerIndex;$/;"	m	class:Eigen::SparseMatrix
m_outerPos	Eigen/src/SparseCore/SparseBlock.h	/^  Index m_outerPos;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_outerSize	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::BlockImpl
m_outerSize	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerSize	Eigen/src/SparseCore/SparseMap.h	/^    Index   m_outerSize;$/;"	m	class:Eigen::SparseMapBase
m_outerSize	Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SparseMatrix
m_outerStart	Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::BlockImpl
m_outerStart	Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerStride	Eigen/src/Core/Block.h	/^    Index m_outerStride;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_outerStride	Eigen/src/Core/CoreEvaluators.h	/^                                                    : RowsAtCompileTime> m_outerStride;$/;"	m	struct:Eigen::internal::evaluator
m_outerStride	Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamic<Index, XprType::OuterStrideAtCompileTime> m_outerStride;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_outputPerm_c	Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_outputPerm_c; \/\/ The final column permutation$/;"	m	class:Eigen::SparseQR
m_p	Eigen/src/LU/FullPivLU.h	/^    PermutationPType m_p;$/;"	m	class:Eigen::FullPivLU
m_p	Eigen/src/LU/PartialPivLU.h	/^    PermutationType m_p;$/;"	m	class:Eigen::PartialPivLU
m_p	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::SuperLUBase
m_p	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::UmfPackLU
m_parent	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_parent;                                 \/\/ elimination tree$/;"	m	class:Eigen::SimplicialCholeskyBase
m_pastixdata	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable pastix_data_t *m_pastixdata; \/\/ Data structure for pastix$/;"	m	class:Eigen::PastixBase
m_perfv	Eigen/src/SparseLU/SparseLU.h	/^    internal::perfvalues m_perfv;$/;"	m	class:Eigen::SparseLU
m_perm	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    PermutationType m_perm; $/;"	m	class:Eigen::IncompleteCholesky
m_perm	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_perm;  \/\/ Permutation vector$/;"	m	class:Eigen::PastixBase
m_perm	Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable IntColVectorType m_perm;$/;"	m	class:Eigen::PardisoImpl
m_perm	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& m_perm;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_perm_c	Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_c; \/\/ Column permutation $/;"	m	class:Eigen::SparseLU
m_perm_c	Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_perm_c;       \/\/ Fill-reducing  Column  permutation$/;"	m	class:Eigen::SparseQR
m_perm_r	Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_r ; \/\/ Row permutation$/;"	m	class:Eigen::SparseLU
m_pivotperm	Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_pivotperm;    \/\/ The permutation for rank revealing$/;"	m	class:Eigen::SparseQR
m_pmat	Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_pmat;            \/\/ Temporary matrix$/;"	m	class:Eigen::SparseQR
m_precision	Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::FullPivHouseholderQR
m_preconditioner	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner m_preconditioner;$/;"	m	class:Eigen::IterativeSolverBase
m_prescribedThreshold	Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_prescribedThreshold	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_prescribedThreshold	Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_prescribedThreshold	Eigen/src/SVD/SVDBase.h	/^  RealScalar m_prescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_pt	Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable void *m_pt[64];$/;"	m	class:Eigen::PardisoImpl
m_ptr	Eigen/src/Core/util/Memory.h	/^    T* m_ptr;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_ptr	Eigen/src/Core/util/Memory.h	/^  T* m_ptr;$/;"	m	class:Eigen::internal::scoped_array
m_q	Eigen/src/LU/FullPivLU.h	/^    PermutationQType m_q;$/;"	m	class:Eigen::FullPivLU
m_q	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::SuperLUBase
m_q	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::UmfPackLU
m_qr	Eigen/src/QR/ColPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::ColPivHouseholderQR
m_qr	Eigen/src/QR/FullPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::FullPivHouseholderQR
m_qr	Eigen/src/QR/FullPivHouseholderQR.h	/^  typename MatrixType::Nested m_qr;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_qr	Eigen/src/QR/HouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::HouseholderQR
m_qr	Eigen/src/SVD/JacobiSVD.h	/^  QRType m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQReturnType
m_qr	Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQTransposeReturnType
m_qr	Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQR_QProduct
m_qr_precond_morecols	Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreColsThanRows> m_qr_precond_morecols;$/;"	m	class:Eigen::JacobiSVD
m_qr_precond_morerows	Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreRowsThanCols> m_qr_precond_morerows;$/;"	m	class:Eigen::JacobiSVD
m_rank	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index m_rank; \/\/ The rank of the matrix$/;"	m	class:Eigen::SPQR
m_rank	Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_rank	Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_realQZ	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    RealQZ<MatrixType> m_realQZ;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_realSchur	Eigen/src/Eigenvalues/EigenSolver.h	/^    RealSchur<MatrixType> m_realSchur;$/;"	m	class:Eigen::EigenSolver
m_reference	Eigen/src/SparseCore/SparseView.h	/^  Scalar m_reference;$/;"	m	class:Eigen::SparseView
m_result	Eigen/src/Core/CoreEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	Eigen/src/Core/Inverse.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::unary_evaluator
m_result	Eigen/src/Core/ProductEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	Eigen/src/Core/ReturnByValue.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	Eigen/src/Core/Solve.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	Eigen/src/SparseCore/SparsePermutation.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	Eigen/src/SparseCore/SparseProduct.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::unary_evaluator
m_result	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_returnOne	Eigen/src/SparseCore/SparseTriangularView.h	/^      bool m_returnOne;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_rhs	Eigen/src/Core/CwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_rhs	Eigen/src/Core/Product.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::Product
m_rhs	Eigen/src/Core/ProductEvaluators.h	/^  typename internal::add_const_on_value_type<RhsNested>::type m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhs	Eigen/src/Core/Solve.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::Solve
m_rhs	Eigen/src/Core/SolveTriangular.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_rhs	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Rhs& m_rhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_rhs	Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_rhs	Eigen/src/Geometry/Homogeneous.h	/^  typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_rhs	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::SolveWithGuess
m_rhs	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Lhs::PlainObject m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhsEval	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<Rhs> &m_rhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsEval	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<RhsArg> &m_rhsEval;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_rhsImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<Rhs> m_rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_rhsImpl	Eigen/src/Core/ProductEvaluators.h	/^  RhsEtorType m_rhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhsImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Rhs> m_rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_rhsImpl	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<RhsArg> m_rhsImpl;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_rhsIter	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsIter	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_rhsXprImpl	Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualRhs> m_rhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_row	Eigen/src/Core/CommaInitializer.h	/^  Index m_row;              \/\/ current row id$/;"	m	struct:Eigen::CommaInitializer
m_row	Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_row	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_row; \/\/ Number of rows$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowFactor	Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, RowFactor> m_rowFactor;$/;"	m	class:Eigen::Replicate
m_rowind	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind; \/\/ Array of compressed row indices of rectangular supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowind_colptr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind_colptr; \/\/rowind_colptr[j] stores the location in rowind[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rows	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrix
m_rows	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_rows	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::RowsAtCompileTime> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseRow ? ArgType::RowsAtCompileTime : 1> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::CwiseNullaryOp
m_rows	Eigen/src/Core/DenseStorage.h	/^    Index m_rows;$/;"	m	class:Eigen::DenseStorage
m_rows	Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::MapBase
m_rows	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index m_rows;$/;"	m	class:Eigen::SPQR
m_rows	Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_rowsTranspositions	Eigen/src/LU/FullPivLU.h	/^    IntColVectorType m_rowsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_rowsTranspositions	Eigen/src/LU/PartialPivLU.h	/^    TranspositionType m_rowsTranspositions;$/;"	m	class:Eigen::PartialPivLU
m_rowsTranspositions	Eigen/src/QR/FullPivHouseholderQR.h	/^  typename IntDiagSizeVectorType::Nested m_rowsTranspositions;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_rows_transpositions	Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_rows_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_s	Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_scale	Eigen/src/Core/ProductEvaluators.h	/^    Scalar m_scale;$/;"	m	struct:Eigen::internal::generic_product_impl::adds
m_scale	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    VectorRx m_scale;            \/\/ The vector for scaling the matrix $/;"	m	class:Eigen::IncompleteCholesky
m_scaledMatrix	Eigen/src/SVD/JacobiSVD.h	/^    MatrixType m_scaledMatrix;$/;"	m	class:Eigen::JacobiSVD
m_schur	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexSchur<MatrixType> m_schur;$/;"	m	class:Eigen::ComplexEigenSolver
m_shift	Eigen/src/Householder/HouseholderSequence.h	/^    Index m_shift;$/;"	m	class:Eigen::HouseholderSequence
m_shiftOffset	Eigen/src/CholmodSupport/CholmodSupport.h	/^    double m_shiftOffset[2];$/;"	m	class:Eigen::CholmodBase
m_shiftOffset	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftOffset;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shiftScale	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftScale;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_sign	Eigen/src/Cholesky/LDLT.h	/^    internal::SignMatrix m_sign;$/;"	m	class:Eigen::LDLT
m_singularValues	Eigen/src/SVD/SVDBase.h	/^  SingularValuesType m_singularValues;$/;"	m	class:Eigen::SVDBase
m_size	Eigen/src/Core/util/Memory.h	/^    std::size_t m_size;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_size	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_size; \/\/ Size of the matrix $/;"	m	class:Eigen::PastixBase
m_size	Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_size;$/;"	m	class:Eigen::PardisoImpl
m_size	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_size;$/;"	m	class:Eigen::internal::AmbiVector
m_size	Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_size;$/;"	m	class:Eigen::internal::CompressedStorage
m_size	Eigen/src/SparseCore/SparseVector.h	/^    Index m_size;$/;"	m	class:Eigen::SparseVector
m_size1	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Index m_size1;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_sizeA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeA;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeB;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sluA	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluA;$/;"	m	class:Eigen::SuperLUBase
m_sluB	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sluBerr	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluCscale	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluEqued	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable char m_sluEqued;$/;"	m	class:Eigen::SuperLUBase
m_sluEtree	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable std::vector<int> m_sluEtree;$/;"	m	class:Eigen::SuperLUBase
m_sluFerr	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluL	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluOptions	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable superlu_options_t m_sluOptions;$/;"	m	class:Eigen::SuperLUBase
m_sluRscale	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluStat	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperLUStat_t m_sluStat;$/;"	m	class:Eigen::SuperLUBase
m_sluU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluX	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sparseIter	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    SparseXprIter m_sparseIter;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_sparseXprEval	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprEval;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_sparseXprImpl	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_spqr	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr; $/;"	m	struct:Eigen::SPQR_QProduct
m_spqr	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQReturnType
m_spqr	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQTransposeReturnType
m_src	Eigen/src/Core/AssignEvaluator.h	/^  const SrcEvaluatorType& m_src;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_start	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_start;$/;"	m	class:Eigen::internal::AmbiVector
m_start	Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_start;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_startCol	Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, (XprType::ColsAtCompileTime == 1 && BlockCols==1) ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startCol	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, (ArgType::ColsAtCompileTime == 1 && BlockCols==1) ? 0 : Dynamic> m_startCol;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startCol	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::BlockImpl
m_startRow	Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, (XprType::RowsAtCompileTime == 1 && BlockRows==1) ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startRow	Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, (ArgType::RowsAtCompileTime == 1 && BlockRows==1) ? 0 : Dynamic> m_startRow;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startRow	Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::BlockImpl
m_startidval	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_startidval;               \/\/ Start of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_staticA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX LhsScalar m_staticA[SizeA];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticA	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticA[SizeA * sizeof(LhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX RhsScalar m_staticB[SizeB];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticB[SizeB * sizeof(RhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_step	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_step;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_storage	Eigen/src/Core/PlainObjectBase.h	/^    DenseStorage<Scalar, Base::MaxSizeAtCompileTime, Base::RowsAtCompileTime, Base::ColsAtCompileTime, Options> m_storage;$/;"	m	class:Eigen::PlainObjectBase
m_stride	Eigen/src/Core/Map.h	/^    StrideType m_stride;$/;"	m	class:Eigen::Map
m_stride	Eigen/src/Core/Ref.h	/^  StrideBase m_stride;$/;"	m	class:Eigen::RefBase
m_stride	Eigen/src/Core/util/BlasUtil.h	/^  const Index m_stride;$/;"	m	class:Eigen::internal::blas_data_mapper
m_structureIsUptodate	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_structureIsUptodate;$/;"	m	class:Eigen::PastixLU
m_subdiag	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typename TridiagonalizationType::SubDiagonalType m_subdiag;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_subs	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrix
m_subs	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_sup_to_col	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_sup_to_col; \/\/sup_to_col[s] points to the starting column of the s-th supernode$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_supers	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrix
m_supers	Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_supno	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_supno;                    \/\/ Current SuperNode number$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_sve	Eigen/src/SparseCore/SparseView.h	/^        const unary_evaluator &m_sve;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_symbolic	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_symbolic;$/;"	m	class:Eigen::UmfPackLU
m_symmetricmode	Eigen/src/SparseLU/SparseLU.h	/^    bool m_symmetricmode;$/;"	m	class:Eigen::SparseLU
m_temp	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    VectorType m_temp;$/;"	m	class:Eigen::HessenbergDecomposition
m_temp	Eigen/src/Geometry/Homogeneous.h	/^  PlainObject m_temp;$/;"	m	struct:Eigen::internal::unary_evaluator
m_temp	Eigen/src/QR/ColPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::ColPivHouseholderQR
m_temp	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  RowVectorType m_temp;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_temp	Eigen/src/QR/FullPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::FullPivHouseholderQR
m_temp	Eigen/src/QR/HouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::HouseholderQR
m_temporary	Eigen/src/Cholesky/LDLT.h	/^    TmpMatrixType m_temporary;$/;"	m	class:Eigen::LDLT
m_then	Eigen/src/Core/Select.h	/^    typename ThenMatrixType::Nested m_then;$/;"	m	class:Eigen::Select
m_thenImpl	Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ThenMatrixType> m_thenImpl;$/;"	m	struct:Eigen::internal::evaluator
m_threshold	Eigen/src/SparseQR/SparseQR.h	/^    RealScalar m_threshold;         \/\/ Threshold to determine null Householder reflections$/;"	m	class:Eigen::SparseQR
m_tmp	Eigen/src/Eigenvalues/EigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::EigenSolver
m_tmp	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_tmp;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_tolerance	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar m_tolerance;$/;"	m	class:Eigen::IterativeSolverBase
m_tolerance	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    RealScalar m_tolerance; \/\/ treat columns with 2-norm below this tolerance as zero$/;"	m	class:Eigen::SPQR
m_trans	Eigen/src/Householder/HouseholderSequence.h	/^    bool m_trans;$/;"	m	class:Eigen::HouseholderSequence
m_transpose	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  bool m_transpose; $/;"	m	struct:Eigen::SPQR_QProduct
m_transpose	Eigen/src/SparseQR/SparseQR.h	/^  bool m_transpose;$/;"	m	struct:Eigen::SparseQR_QProduct
m_transpositions	Eigen/src/Cholesky/LDLT.h	/^    TranspositionType m_transpositions;$/;"	m	class:Eigen::LDLT
m_transpositions	Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	class:Eigen::Transpose
m_triangularMatrix	Eigen/src/Core/SolveTriangular.h	/^    const TriangularType& m_triangularMatrix;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_type	Eigen/src/PardisoSupport/PardisoSupport.h	/^    StorageIndex m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_u	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::SuperLUBase
m_u	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::UmfPackLU
m_umfpackInfo	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable UmfpackInfo m_umfpackInfo;$/;"	m	class:Eigen::UmfPackLU
m_unaryOp	Eigen/src/Core/CoreEvaluators.h	/^  const UnaryOp m_unaryOp;$/;"	m	struct:Eigen::internal::unary_evaluator
m_useDefaultThreshold	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SPQR
m_useDefaultThreshold	Eigen/src/SparseQR/SparseQR.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SparseQR
m_usePrescribedThreshold	Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_usePrescribedThreshold	Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_usePrescribedThreshold	Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_usePrescribedThreshold	Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_use_divisor	Eigen/src/Core/functors/NullaryFunctors.h	/^  const bool m_use_divisor;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_val	Eigen/src/Core/arch/SSE/PacketMath.h	/^  T m_val;$/;"	m	struct:Eigen::internal::eigen_packet_wrapper
m_value	Eigen/src/Core/functors/BinaryFunctors.h	/^  first_argument_type m_value;$/;"	m	struct:Eigen::internal::bind1st_op
m_value	Eigen/src/Core/functors/BinaryFunctors.h	/^  second_argument_type m_value;$/;"	m	struct:Eigen::internal::bind2nd_op
m_value	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Scalar m_value;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_value	Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_value;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_value	Eigen/src/SparseCore/SparseUtil.h	/^  Scalar m_value;$/;"	m	class:Eigen::Triplet
m_values	Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* m_values;$/;"	m	class:Eigen::internal::CompressedStorage
m_values	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_values	Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_values	Eigen/src/SparseCore/SparseMap.h	/^    ScalarPointer m_values;$/;"	m	class:Eigen::SparseMapBase
m_valuesOkay	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_valuesOkay, m_vectorsOkay;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_vector	Eigen/src/SparseCore/AmbiVector.h	/^    const AmbiVector& m_vector; \/\/ the target vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_vectors	Eigen/src/Householder/HouseholderSequence.h	/^    typename VectorsType::Nested m_vectors;$/;"	m	class:Eigen::HouseholderSequence
m_vectorsOkay	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_valuesOkay, m_vectorsOkay;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_view	Eigen/src/SparseCore/SparseView.h	/^        const XprType &m_view;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_view	Eigen/src/SparseCore/SparseView.h	/^    const XprType &m_view;$/;"	m	struct:Eigen::internal::unary_evaluator
m_workspace	Eigen/src/Eigenvalues/RealQZ.h	/^      Matrix<Scalar,Dynamic,1> m_workspace;$/;"	m	class:Eigen::RealQZ
m_workspace	Eigen/src/SVD/BDCSVD.h	/^  ArrayXr m_workspace;$/;"	m	class:Eigen::BDCSVD
m_workspace	Eigen/src/SVD/JacobiSVD.h	/^  WorkspaceType m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_col_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_row_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspaceI	Eigen/src/SVD/BDCSVD.h	/^  ArrayXi m_workspaceI;$/;"	m	class:Eigen::BDCSVD
m_workspaceVector	Eigen/src/Eigenvalues/RealSchur.h	/^    ColumnVectorType m_workspaceVector;$/;"	m	class:Eigen::RealSchur
m_wrapper	Eigen/src/Core/CoreEvaluators.h	/^  const internal::nullary_wrapper<CoeffReturnType,NullaryOp> m_wrapper;$/;"	m	struct:Eigen::internal::evaluator
m_xpr	Eigen/src/Core/Block.h	/^    XprTypeNested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	Eigen/src/Core/CommaInitializer.h	/^  XprType& m_xpr;           \/\/ target expression$/;"	m	struct:Eigen::CommaInitializer
m_xpr	Eigen/src/Core/CwiseUnaryOp.h	/^    XprTypeNested m_xpr;$/;"	m	class:Eigen::CwiseUnaryOp
m_xpr	Eigen/src/Core/Inverse.h	/^  XprTypeNested m_xpr;$/;"	m	class:Eigen::Inverse
m_xpr	Eigen/src/Core/Redux.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::redux_evaluator
m_xpr	Eigen/src/Core/Visitor.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::visitor_evaluator
m_zCoeffs	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  HCoeffsType m_zCoeffs;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_zero	Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_zero;$/;"	m	class:Eigen::internal::AmbiVector
m_zero	Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Scalar m_zero;$/;"	m	struct:Eigen::internal::evaluator
m_zero_nnz	Eigen/src/SparseCore/SparseMap.h	/^    Array<StorageIndex,2,1>  m_zero_nnz;$/;"	m	class:Eigen::SparseMapBase
madd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, DoublePacketType& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, ResPacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacketType& a, const RhsPacketType& b, AccPacketType& c, AccPacketType& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp, const true_type&) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsScalar& a, const RhsScalar& b, ResScalar& c, RhsScalar& \/*tmp*\/, const false_type&) const$/;"	f	class:Eigen::internal::gebp_traits
main	adaptive_timestepping.cpp	/^int main(int argc, char *argv[])$/;"	f
main	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	cmake-build-debug/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	cmake-build-debug/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	main.cpp	/^int main()$/;"	f
main	mala.cpp	/^int main()$/;"	f
main	mcmc_main.cpp	/^int main()$/;"	f
main	pcn.cpp	/^int main()$/;"	f
main	pf_smc_main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	phmc.cpp	/^int main(int argc,char *argv[])$/;"	f
main	smc_main.cpp	/^int main()$/;"	f
makeAffine	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC void makeAffine()$/;"	f	class:Eigen::Transform
makeCompressed	Eigen/src/SparseCore/SparseMatrix.h	/^    void makeCompressed()$/;"	f	class:Eigen::SparseMatrix
makeGivens	Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)$/;"	f	class:Eigen::JacobiRotation
makeHouseholder	Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholder($/;"	f	class:Eigen::MatrixBase
makeHouseholderInPlace	Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)$/;"	f	class:Eigen::MatrixBase
makeJacobi	Eigen/src/Jacobi/Jacobi.h	/^bool JacobiRotation<Scalar>::makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z)$/;"	f	class:Eigen::JacobiRotation
makeJacobi	Eigen/src/Jacobi/Jacobi.h	/^inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, Index p, Index q)$/;"	f	class:Eigen::JacobiRotation
make_block_householder_triangular_factor	Eigen/src/Householder/BlockHouseholder.h	/^void make_block_householder_triangular_factor(TriangularFactorType& triFactor, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
manageErrorCode	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void manageErrorCode(Index error) const$/;"	f	class:Eigen::PardisoImpl
manage_caching_sizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1, std::ptrdiff_t* l2, std::ptrdiff_t* l3)$/;"	f	namespace:Eigen::internal
manage_caching_sizes_helper	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)$/;"	f	namespace:Eigen::internal
manage_multi_threading	Eigen/src/Core/products/Parallelizer.h	/^inline void manage_multi_threading(Action action, int* v)$/;"	f	namespace:Eigen::internal
map_superlu	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> map_superlu(SluMatrix& sluMat)$/;"	f	namespace:Eigen::internal
mapbase_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit mapbase_evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::mapbase_evaluator
mapbase_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct mapbase_evaluator : evaluator_base<Derived>$/;"	s	namespace:Eigen::internal
mark	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType mark ;  \/* for computing set differences and marking dead rows*\/$/;"	m	union:internal::Colamd_Row::__anon654
markAsRValue	Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& markAsRValue() { m_isRValue = true; return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
matPrefix	Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matSuffix	Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
match	Eigen/src/Core/Ref.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
match	Eigen/src/SparseCore/SparseRef.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
matrix	Eigen/src/Core/ArrayBase.h	/^    MatrixWrapper<Derived> matrix() { return MatrixWrapper<Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	Eigen/src/Core/ArrayBase.h	/^    const MatrixWrapper<const Derived> matrix() const { return MatrixWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase<Derived>& matrix() { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC const MatrixBase<Derived>& matrix() const { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType matrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
matrix	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType& matrix() const$/;"	f	class:Eigen::IterativeSolverBase
matrix	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType& matrix() const$/;"	f	class:Eigen::internal::generic_matrix_wrapper
matrix	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const NestedExpression& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
matrix	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const _MatrixTypeNested& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typename internal::remove_reference<MatrixTypeNested>::type& matrix() { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrixH	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixHReturnType matrixH() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixL	Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LDLT
matrixL	Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LLT
matrixL	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const FactorType& matrixL() const { eigen_assert("m_factorizationIsOk"); return m_L; }$/;"	f	class:Eigen::IncompleteCholesky
matrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixL	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLLT
matrixL	Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixLReturnType<SCMatrix> matrixL() const$/;"	f	class:Eigen::SparseLU
matrixL	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const LMatrixType& matrixL() const$/;"	f	class:Eigen::SuperLU
matrixL	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixL() const$/;"	f	class:Eigen::UmfPackLU
matrixLDLT	Eigen/src/Cholesky/LDLT.h	/^    inline const MatrixType& matrixLDLT() const$/;"	f	class:Eigen::LDLT
matrixLLT	Eigen/src/Cholesky/LLT.h	/^    inline const MatrixType& matrixLLT() const$/;"	f	class:Eigen::LLT
matrixLU	Eigen/src/LU/FullPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::FullPivLU
matrixLU	Eigen/src/LU/PartialPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::PartialPivLU
matrixQ	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixQ	Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixQ() const {$/;"	f	class:Eigen::RealQZ
matrixQ	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::Tridiagonalization
matrixQ	Eigen/src/QR/ColPivHouseholderQR.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQ	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  HouseholderSequenceType matrixQ(void) const { return m_cpqr.householderQ(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixQ	Eigen/src/QR/FullPivHouseholderQR.h	/^inline typename FullPivHouseholderQR<MatrixType>::MatrixQReturnType FullPivHouseholderQR<MatrixType>::matrixQ() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQ	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQRMatrixQReturnType<SPQR> matrixQ() const$/;"	f	class:Eigen::SPQR
matrixQ	Eigen/src/SparseQR/SparseQR.h	/^    SparseQRMatrixQReturnType<SparseQR> matrixQ() const $/;"	f	class:Eigen::SparseQR
matrixQR	Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQR	Eigen/src/QR/FullPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	Eigen/src/QR/HouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::HouseholderQR
matrixQTZ	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const MatrixType& matrixQTZ() const { return m_cpqr.matrixQR(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixR	Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    const MatrixType matrixR() const$/;"	f	class:Eigen::SPQR
matrixR	Eigen/src/SparseQR/SparseQR.h	/^    const QRMatrixType& matrixR() const { return m_R; }$/;"	f	class:Eigen::SparseQR
matrixS	Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixS() const {$/;"	f	class:Eigen::RealQZ
matrixT	Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixT() const$/;"	f	class:Eigen::ComplexSchur
matrixT	Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixT() const {$/;"	f	class:Eigen::RealQZ
matrixT	Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixT() const$/;"	f	class:Eigen::RealSchur
matrixT	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixTReturnType matrixT() const$/;"	f	class:Eigen::Tridiagonalization
matrixT	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const MatrixType& matrixT() const { return m_cpqr.matrixQR(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixU	Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LDLT
matrixU	Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LLT
matrixU	Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixU() const$/;"	f	class:Eigen::ComplexSchur
matrixU	Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixU() const$/;"	f	class:Eigen::RealSchur
matrixU	Eigen/src/SVD/SVDBase.h	/^  const MatrixUType& matrixU() const$/;"	f	class:Eigen::SVDBase
matrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixU	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLLT
matrixU	Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixUReturnType<SCMatrix,MappedSparseMatrix<Scalar,ColMajor,StorageIndex> > matrixU() const$/;"	f	class:Eigen::SparseLU
matrixU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const UMatrixType& matrixU() const$/;"	f	class:Eigen::SuperLU
matrixU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixU() const$/;"	f	class:Eigen::UmfPackLU
matrixV	Eigen/src/SVD/SVDBase.h	/^  const MatrixVType& matrixV() const$/;"	f	class:Eigen::SVDBase
matrixZ	Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixZ() const {$/;"	f	class:Eigen::RealQZ
matrixZ	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  MatrixType matrixZ() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrix_swap_impl	Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl$/;"	s	namespace:Eigen::internal
matrix_swap_impl	Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>$/;"	s	namespace:Eigen::internal
matrix_type_times_scalar_type	Eigen/src/Householder/HouseholderSequence.h	/^template<typename OtherScalarType, typename MatrixType> struct matrix_type_times_scalar_type$/;"	s	namespace:Eigen::internal
max	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half (max)() { return Eigen::half_impl::raw_uint16_to_half(0x7bff); }$/;"	f	class:std::numeric_limits::Eigen
max	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half (max)(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
max	Eigen/src/Core/util/Meta.h	/^  static T (max)() { assert(false && "Highest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static double (max)() { return DBL_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static float (max)() { return CUDART_MAX_NORMAL_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static int (max)() { return INT_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static long (max)() { return LONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static long long (max)() { return LLONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static unsigned int (max)() { return UINT_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static unsigned long (max)() { return ULONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Core/util/Meta.h	/^  static unsigned long long (max)() { return ULLONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^max$/;"	f
maxCoeff	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::maxCoeff() const$/;"	f	class:Eigen::DenseBase
maxCoeff	Eigen/src/Core/VectorwiseOp.h	/^    const MaxCoeffReturnType maxCoeff() const$/;"	f	class:Eigen::VectorwiseOp
maxCoeff	Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
maxCoeff	Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* rowPtr, IndexType* colPtr) const$/;"	f	class:Eigen::DenseBase
maxIterations	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index maxIterations() const$/;"	f	class:Eigen::IterativeSolverBase
maxPivot	Eigen/src/LU/FullPivLU.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivLU
maxPivot	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::ColPivHouseholderQR
maxPivot	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline RealScalar maxPivot() const { return m_cpqr.maxPivot(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
maxPivot	Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivHouseholderQR
max_coeff_visitor	Eigen/src/Core/Visitor.h	/^struct max_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
max_exponent	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int max_exponent = 16;$/;"	m	struct:std::numeric_limits
max_exponent10	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int max_exponent10 = 4;$/;"	m	struct:std::numeric_limits
max_size	Eigen/src/Core/Matrix.h	/^      max_size = is_dynamic_size_storage ? Dynamic : _MaxRows*_MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon450
maxi	Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T maxi(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
maxs	methods/stabilized_methods.hpp	/^    static const int maxs=200; \/\/ maximal number of stages$/;"	m	class:RKC
maxs	methods/stabilized_methods.hpp	/^    static const int maxs=200; \/\/ maximal number of stages$/;"	m	class:ROCK2
maxsuper	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index maxsuper; \/\/ The maximum size for a supernode in complete LU$/;"	m	struct:Eigen::internal::perfvalues
mc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index mc() const { return m_mc; }$/;"	f	class:Eigen::internal::level3_blocking
mean	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::mean() const$/;"	f	class:Eigen::DenseBase
mean	Eigen/src/Core/VectorwiseOp.h	/^    const MeanReturnType mean() const$/;"	f	class:Eigen::VectorwiseOp
mean	tools/random_variable.hpp	/^    Eigen::VectorXd mean;$/;"	m	struct:EigenNormalRandomVariable
mean	tools/random_variable.hpp	/^    Real mean,variance;$/;"	m	class:NormalDistribution
means	build/plot_function_conf_bounds.py	/^    means = []$/;"	v
memInit	Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memInit(Index m, Index n, Index annz, Index lwork, Index fillratio, Index panel_size,  GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
memXpand	Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memXpand(VectorType& vec, Index& maxlen, Index nbElts, MemType memtype, Index& num_expansions)$/;"	f	class:Eigen::internal::SparseLUImpl
mem_expand	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  void mem_expand(IndexVector& lsub, Index& nextl, Index chmark)$/;"	f	struct:Eigen::internal::column_dfs_traits
mem_expand	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  void mem_expand(IndexVector& \/*glu.lsub*\/, Index \/*nextl*\/, Index \/*chmark*\/) {}$/;"	f	struct:Eigen::internal::panel_dfs_traits
member_lpnorm	Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC member_lpnorm() {}$/;"	f	struct:Eigen::internal::member_lpnorm
member_lpnorm	Eigen/src/Core/VectorwiseOp.h	/^struct member_lpnorm {$/;"	s	namespace:Eigen::internal
member_redux	Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC explicit member_redux(const BinaryOp func) : m_functor(func) {}$/;"	f	struct:Eigen::internal::member_redux
member_redux	Eigen/src/Core/VectorwiseOp.h	/^struct member_redux {$/;"	s	namespace:Eigen::internal
merged	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox merged(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
meta_floor_log2	Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2 {};$/;"	s	namespace:Eigen::internal
meta_floor_log2	Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_bogus>$/;"	s	namespace:Eigen::internal
meta_floor_log2	Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_down>$/;"	s	namespace:Eigen::internal
meta_floor_log2	Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_up>$/;"	s	namespace:Eigen::internal
meta_floor_log2	Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_terminate>$/;"	s	namespace:Eigen::internal
meta_floor_log2_bogus	Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_bogus$/;"	e	enum:Eigen::internal::__anon463
meta_floor_log2_move_down	Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_down,$/;"	e	enum:Eigen::internal::__anon463
meta_floor_log2_move_up	Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_up,$/;"	e	enum:Eigen::internal::__anon463
meta_floor_log2_selector	Eigen/src/Core/MathFunctions.h	/^template<unsigned int n, int lower, int upper> struct meta_floor_log2_selector$/;"	s	namespace:Eigen::internal
meta_floor_log2_terminate	Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_terminate,$/;"	e	enum:Eigen::internal::__anon463
meta_least_common_multiple	Eigen/src/Core/util/Meta.h	/^struct meta_least_common_multiple$/;"	s	namespace:Eigen
meta_least_common_multiple	Eigen/src/Core/util/Meta.h	/^struct meta_least_common_multiple<A,B,K,true>$/;"	s	namespace:Eigen
meta_no	Eigen/src/Core/util/Meta.h	/^struct meta_no  { char a[2]; };$/;"	s	namespace:Eigen::internal
meta_sqrt	Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c	namespace:Eigen
meta_yes	Eigen/src/Core/util/Meta.h	/^struct meta_yes { char a[1]; };$/;"	s	namespace:Eigen::internal
method_name	methods/methods.hpp	/^    std::string method_name;$/;"	m	class:NumericalMethodFactory
middle	Eigen/src/Core/MathFunctions.h	/^  enum { middle = (lower + upper) \/ 2,$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon464
middleCols	Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr middleCols(Index startCol, Index numCols)$/;"	f
middleCols	Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr middleCols(Index startCol, Index numCols) const$/;"	f
middleCols	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N) const$/;"	f
middleCols	Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N)$/;"	f
middleRows	Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr middleRows(Index startRow, Index n) const$/;"	f
middleRows	Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr middleRows(Index startRow, Index n)$/;"	f
middleRows	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N) const$/;"	f
middleRows	Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N)$/;"	f
min	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half (min)() { return Eigen::half_impl::raw_uint16_to_half(0x400); }$/;"	f	class:std::numeric_limits::Eigen
min	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half (min)(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
min	Eigen/src/Core/util/Meta.h	/^  static T (min)() { assert(false && "Lowest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static double (min)() { return DBL_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static float (min)() { return FLT_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static int (min)() { return INT_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static long (min)() { return LONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static long long (min)() { return LLONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static unsigned int (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static unsigned long (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Core/util/Meta.h	/^  static unsigned long long (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^min$/;"	f
minCoeff	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::minCoeff() const$/;"	f	class:Eigen::DenseBase
minCoeff	Eigen/src/Core/VectorwiseOp.h	/^    const MinCoeffReturnType minCoeff() const$/;"	f	class:Eigen::VectorwiseOp
minCoeff	Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
minCoeff	Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* rowId, IndexType* colId) const$/;"	f	class:Eigen::DenseBase
min_coeff_visitor	Eigen/src/Core/Visitor.h	/^struct min_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
min_exponent	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int min_exponent = -13;$/;"	m	struct:std::numeric_limits
min_exponent10	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int min_exponent10 = -4;$/;"	m	struct:std::numeric_limits
mini	Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T mini(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
minimum_degree_ordering	Eigen/src/OrderingMethods/Amd.h	/^void minimum_degree_ordering(SparseMatrix<Scalar,ColMajor,StorageIndex>& C, PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm)$/;"	f	namespace:Eigen::internal
model	core_methods.hpp	/^    Model& model;$/;"	m	class:NumericalMethod
model	methods/core_methods.hpp	/^    Model& model;$/;"	m	class:NumericalMethod
move	Eigen/src/Core/DenseStorage.h	/^      , m_cols(std::move(other.m_cols))$/;"	f	class:Eigen::DenseStorage
move	Eigen/src/Core/DenseStorage.h	/^      , m_rows(std::move(other.m_rows))$/;"	f	class:Eigen::DenseStorage
move	Eigen/src/Core/PlainObjectBase.h	/^      : m_storage( std::move(other.m_storage) )$/;"	f	class:Eigen::PlainObjectBase
mp_matrix	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType *mp_matrix;$/;"	m	class:Eigen::internal::generic_matrix_wrapper
mp_matrix	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixRef mp_matrix;$/;"	m	class:Eigen::UmfPackLU
mr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
mr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 3*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
mr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
mr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = Vectorizable ? 3*LhsPacketSize : default_mr,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
ms	methods/rock2_static_coefficients.cpp	/^int ROCK2::ms[46]={1,2,3,4,5,6,7,8,9,10,$/;"	m	class:ROCK2	file:
ms	methods/stabilized_methods.hpp	/^    static int ms[46];  \/\/ stage number$/;"	m	class:ROCK2
ms_from	Eigen/src/Core/util/Meta.h	/^  static From ms_from;$/;"	m	struct:Eigen::internal::is_convertible_impl
ms_from	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  static MatrixType ms_from;$/;"	m	struct:Eigen::internal::is_ref_compatible_impl
mu	methods/stabilized_methods.cpp	/^Real** ROCK2::mu;$/;"	m	class:ROCK2	file:
mu	methods/stabilized_methods.hpp	/^    static Real **mu;$/;"	m	class:ROCK2
mul_assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^struct mul_assign_op {$/;"	s	namespace:Eigen::internal
n	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   n; \/\/ Number of columns in the matrix  $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
n	core_methods.hpp	/^    int n;$/;"	m	class:NumericalMethod
n	core_methods.hpp	/^    int n;$/;"	m	class:StepIntegrator
n	mcmc/mala.hpp	/^    int n;$/;"	m	class:MALA_Sampler
n	mcmc/pcn.hpp	/^    int n;$/;"	m	class:PCN_Sampler
n	mcmc/phmc.hpp	/^    int n;$/;"	m	class:PHMC_Sampler
n	methods/core_methods.hpp	/^    int n;$/;"	m	class:NumericalMethod
n	methods/core_methods.hpp	/^    int n;$/;"	m	class:StepIntegrator
n	tools/mcmc.hpp	/^    int n;$/;"	m	class:MCMC_Sampler
n_h	methods/adaptive_methods.hpp	/^    int n_h=0;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
n_h	methods/adaptive_methods.hpp	/^    int n_h=0;$/;"	m	class:ClassicalAdaptiveScheme
n_h	methods/adaptive_methods.hpp	/^    int n_h=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
n_h	methods/adaptive_methods.hpp	/^    int n_h=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
nbThreads	Eigen/src/Core/products/Parallelizer.h	/^inline int nbThreads()$/;"	f	namespace:Eigen
nc	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index nc() const { return m_nc; }$/;"	f	class:Eigen::internal::level3_blocking
nestByValue	Eigen/src/Core/NestByValue.h	/^DenseBase<Derived>::nestByValue() const$/;"	f	class:Eigen::DenseBase
nestedExpression	Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::ArrayWrapper
nestedExpression	Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::MatrixWrapper
nestedExpression	Eigen/src/Core/Block.h	/^    XprType& nestedExpression() { return m_xpr; }$/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	Eigen/src/Core/Block.h	/^    const typename internal::remove_all<XprTypeNested>::type& nestedExpression() const$/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	Eigen/src/Core/Diagonal.h	/^    nestedExpression() const $/;"	f	class:Eigen::Diagonal
nestedExpression	Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC const XprTypeNestedCleaned& nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::Inverse
nestedExpression	Eigen/src/Core/Redux.h	/^  const XprType & nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::internal::redux_evaluator
nestedExpression	Eigen/src/Core/Replicate.h	/^    const _MatrixTypeNested& nestedExpression() const$/;"	f	class:Eigen::Replicate
nestedExpression	Eigen/src/Core/Reverse.h	/^    nestedExpression() const $/;"	f	class:Eigen::Reverse
nestedExpression	Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	Eigen/src/Core/Transpose.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	Eigen/src/Core/Transpose.h	/^    nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	Eigen/src/Core/Transpositions.h	/^    const TranspositionType& nestedExpression() const { return m_transpositions; }$/;"	f	class:Eigen::Transpose
nestedExpression	Eigen/src/Core/TriangularMatrix.h	/^    NestedExpression& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	Eigen/src/Core/TriangularMatrix.h	/^    const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	Eigen/src/Core/VectorwiseOp.h	/^    typename MatrixType::Nested nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::PartialReduxExpr
nestedExpression	Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Homogeneous
nestedExpression	Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseMatrixType& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
nestedExpression	Eigen/src/SparseCore/SparseBlock.h	/^    inline XprType& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	Eigen/src/SparseCore/SparseBlock.h	/^    inline const SparseMatrixType& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
nestedExpression	Eigen/src/SparseCore/SparseBlock.h	/^    inline const XprType& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	Eigen/src/SparseCore/SparseView.h	/^  nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SparseView
nested_eval	Eigen/src/Core/ReturnByValue.h	/^struct nested_eval<ReturnByValue<Derived>, n, PlainObject>$/;"	s	namespace:Eigen::internal
next	Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex next;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
next_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
next_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
next_points	methods/adaptive_methods.hpp	/^    Real **cur_points, ** next_points;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
next_x	core_methods.hpp	/^    double *next_x;$/;"	m	class:NumericalMethod
next_x	methods/core_methods.hpp	/^    Real *next_x;$/;"	m	class:NumericalMethod
nnz	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon111::__anon112
no	Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	s	struct:Eigen::internal::is_convertible_impl
no	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct no  {int a[2];};$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
no_acc	mcmc/mala.hpp	/^    int no_rejects,no_acc;$/;"	m	class:MALA_Sampler
no_acc	mcmc/pcn.hpp	/^    int no_rejects,no_acc;$/;"	m	class:PCN_Sampler
no_acc	mcmc/phmc.hpp	/^    int no_rejects,no_acc;$/;"	m	class:PHMC_Sampler
no_acc	tools/mcmc.hpp	/^    int no_rejects,no_acc;$/;"	m	class:MCMC_Sampler
no_assignment_operator	Eigen/src/Core/util/XprHelper.h	/^class no_assignment_operator$/;"	c	namespace:Eigen::internal
no_iter	mcmc/mala.hpp	/^    int no_iter;$/;"	m	class:MALA_Sampler
no_iter	mcmc/pcn.hpp	/^    int no_iter;$/;"	m	class:PCN_Sampler
no_iter	mcmc/phmc.hpp	/^    int no_iter;$/;"	m	class:PHMC_Sampler
no_iter	tools/mcmc.hpp	/^    int no_iter;$/;"	m	class:MCMC_Sampler
no_kl_elm	models/inverse_model.hpp	/^    int no_kl_elm;$/;"	m	class:BrusselatorInverse
no_nodes	build/plot_2d_solution.py	/^    no_nodes=30$/;"	v
no_nodes	build/plot_function_conf_bounds.py	/^    no_nodes=30$/;"	v
no_particles	smc/smc.hpp	/^    int no_particles;$/;"	m	class:PF_SMC
no_particles	smc/smc.hpp	/^    int no_particles;$/;"	m	class:Stuart_SMC
no_paths	methods/adaptive_methods.hpp	/^    int no_paths;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
no_paths	methods/adaptive_methods.hpp	/^    int no_paths;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
no_paths	methods/adaptive_methods.hpp	/^    int no_paths;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
no_rejects	mcmc/mala.hpp	/^    int no_rejects,no_acc;$/;"	m	class:MALA_Sampler
no_rejects	mcmc/pcn.hpp	/^    int no_rejects,no_acc;$/;"	m	class:PCN_Sampler
no_rejects	mcmc/phmc.hpp	/^    int no_rejects,no_acc;$/;"	m	class:PHMC_Sampler
no_rejects	tools/mcmc.hpp	/^    int no_rejects,no_acc;$/;"	m	class:MCMC_Sampler
no_steps	smc/smc.hpp	/^    int no_steps;$/;"	m	class:PF_SMC
no_steps	smc/smc.hpp	/^    int no_steps;$/;"	m	class:Stuart_SMC
noalias	Eigen/src/Core/NoAlias.h	/^NoAlias<Derived,MatrixBase> MatrixBase<Derived>::noalias()$/;"	f	class:Eigen::MatrixBase
noise_variance	models/inverse_model.hpp	/^    Real noise_variance;$/;"	m	class:InverseProblem
nonZeros	Eigen/src/Core/DenseBase.h	/^    inline Index nonZeros() const { return size(); }$/;"	f	class:Eigen::DenseBase
nonZeros	Eigen/src/SparseCore/AmbiVector.h	/^Index AmbiVector<_Scalar,_StorageIndex>::nonZeros() const$/;"	f	class:Eigen::internal::AmbiVector
nonZeros	Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const { return Dynamic; }$/;"	f	class:Eigen::BlockImpl
nonZeros	Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const$/;"	f	class:Eigen::BlockImpl
nonZeros	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index nonZeros() const$/;"	f	class:Eigen::SparseCompressedBase
nonZeros	Eigen/src/SparseCore/SparseMap.h	/^    inline Index nonZeros() const { return m_zero_nnz[1]; }$/;"	f	class:Eigen::SparseMapBase
nonZeros	Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZeros() const { return derived().nestedExpression().nonZeros(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
nonZeros	Eigen/src/SparseCore/SparseVector.h	/^    inline Index nonZeros() const  { return m_data.size(); }$/;"	f	class:Eigen::SparseVector
nonZerosEstimate	Eigen/src/SparseCore/SparseBlock.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseCompressedBase.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::binary_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::sparse_conjunction_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  Index nonZerosEstimate() const { return m_sparseXprEval.nonZerosEstimate(); }$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  Index nonZerosEstimate() const { return m_sparseXprImpl.nonZerosEstimate(); }$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseTriangularView.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	Eigen/src/SparseCore/SparseVector.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
noncopyable	Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
noncopyable	Eigen/src/Core/util/Meta.h	/^class noncopyable$/;"	c	namespace:Eigen::internal
nonzeroPivots	Eigen/src/LU/FullPivLU.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivLU
nonzeroPivots	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::ColPivHouseholderQR
nonzeroPivots	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index nonzeroPivots() const { return m_cpqr.nonzeroPivots(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
nonzeroPivots	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivHouseholderQR
nonzeroSingularValues	Eigen/src/SVD/SVDBase.h	/^  Index nonzeroSingularValues() const$/;"	f	class:Eigen::SVDBase
norm	Eigen/src/Core/Dot.h	/^inline typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const$/;"	f	class:Eigen::MatrixBase
norm	Eigen/src/Core/VectorwiseOp.h	/^    const NormReturnType norm() const$/;"	f	class:Eigen::VectorwiseOp
norm	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar norm() const { return coeffs().norm(); }$/;"	f	class:Eigen::QuaternionBase
norm	Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::norm() const$/;"	f	class:Eigen::SparseMatrixBase
norm1	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)$/;"	f	namespace:Eigen::numext
norm1_default_impl	Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl$/;"	s	namespace:Eigen::internal
norm1_default_impl	Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
norm1_impl	Eigen/src/Core/MathFunctions.h	/^struct norm1_impl : norm1_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
norm1_retval	Eigen/src/Core/MathFunctions.h	/^struct norm1_retval$/;"	s	namespace:Eigen::internal
normal	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline ConstNormalReturnType normal() const { return ConstNormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normalize	Eigen/src/Core/Dot.h	/^inline void MatrixBase<Derived>::normalize()$/;"	f	class:Eigen::MatrixBase
normalize	Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_DEVICE_FUNC void normalize() {$/;"	f	class:Eigen::VectorwiseOp
normalize	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline void normalize() { coeffs().normalize(); }$/;"	f	class:Eigen::QuaternionBase
normalized	Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::normalized() const$/;"	f	class:Eigen::MatrixBase
normalized	Eigen/src/Core/VectorwiseOp.h	/^    normalized() const { return m_matrix.cwiseQuotient(extendedToOpposite(this->norm())); }$/;"	f	class:Eigen::VectorwiseOp
normalized	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion<Scalar> normalized() const { return Quaternion<Scalar>(coeffs().normalized()); }$/;"	f	class:Eigen::QuaternionBase
nr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon290
nr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon291
nr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon292
nr	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon293
nr_etdfs	Eigen/src/SparseCore/SparseColEtree.h	/^void nr_etdfs (typename IndexVector::Scalar n, IndexVector& parent, IndexVector& first_kid, IndexVector& next_kid, IndexVector& post, typename IndexVector::Scalar postnum)$/;"	f	namespace:Eigen::internal
nsuper	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index nsuper() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
nu	methods/stabilized_methods.cpp	/^Real** ROCK2::nu;$/;"	m	class:ROCK2	file:
nu	methods/stabilized_methods.hpp	/^    const Real nu=0.95;$/;"	m	class:RKC
nu	methods/stabilized_methods.hpp	/^    static Real **nu;$/;"	m	class:ROCK2
nu	models/models.hpp	/^    Real nu;$/;"	m	class:Brusselator
nullary_wrapper	Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper$/;"	s	namespace:Eigen::internal
nullary_wrapper	Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,false,false> {};$/;"	s	namespace:Eigen::internal
nullary_wrapper	Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,false,true>$/;"	s	namespace:Eigen::internal
nullary_wrapper	Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,true,false>$/;"	s	namespace:Eigen::internal
nullary_wrapper	Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,true,false,false>$/;"	s	namespace:Eigen::internal
num_expansions	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   num_expansions; $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
numeric_limits	Eigen/src/Core/arch/CUDA/Half.h	/^struct numeric_limits<Eigen::half> {$/;"	s	namespace:std
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<double>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<float>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<int>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned int>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned long long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	Eigen/src/Core/util/Meta.h	/^template<typename T> struct numeric_limits$/;"	s	namespace:Eigen::internal::device
numext	Eigen/src/Core/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	Eigen/src/Core/arch/CUDA/Half.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	Eigen/src/Core/util/Meta.h	/^namespace numext {$/;"	n
nzlmax	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlmax; \/\/ Current max size of lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzlumax	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlumax; \/\/ Current max size of lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzumax	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzumax; \/\/ Current max size of ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
obs	models/inverse_model.hpp	/^    Real *obs;$/;"	m	class:BrusselatorInverse
obs	models/inverse_model.hpp	/^    Real *obs;$/;"	m	class:FitzHughInverse
obs	models/inverse_model.hpp	/^    Real *obs;$/;"	m	class:TestInverse
offset	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
operator !	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^operator!() const$/;"	f
operator !=	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC inline bool operator!=(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator !=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator != (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator &&	Eigen/src/plugins/CommonCwiseBinaryOps.h	/^operator&&(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator ()	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i) const { return op(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j) const { return op(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j) const {$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j=0) const { return op(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType=0, IndexType=0) const { return op(); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	Eigen/src/Core/ProductEvaluators.h	/^    template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const {$/;"	f	struct:Eigen::internal::generic_product_impl::adds
operator ()	Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::add
operator ()	Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::set
operator ()	Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::sub
operator ()	Eigen/src/Core/Random.h	/^  inline const Scalar operator() () const { return random<Scalar>(); }$/;"	f	struct:Eigen::internal::scalar_random_op
operator ()	Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator()(Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator()(Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar operator()(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
operator ()	Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::TriangularBase
operator ()	Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC inline ResultType operator()(const XprType& mat) const$/;"	f	struct:Eigen::internal::member_lpnorm
operator ()	Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC inline result_type operator()(const DenseBase<Derived>& mat) const$/;"	f	struct:Eigen::internal::member_redux
operator ()	Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::max_coeff_visitor
operator ()	Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::min_coeff_visitor
operator ()	Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::size_t operator()(const Eigen::half& a) const {$/;"	f	struct:std::hash
operator ()	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Eigen::half operator() (const float& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Eigen::half operator() (const int& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float operator() (const Eigen::half& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a && b; }$/;"	f	struct:Eigen::internal::scalar_boolean_and_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a ^ b; }$/;"	f	struct:Eigen::internal::scalar_boolean_xor_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a || b; }$/;"	f	struct:Eigen::internal::scalar_boolean_or_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return !(a<=b || b<=a);}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a!=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a<=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a<b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a==b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a>=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a>b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& _x, const Scalar& _y) const$/;"	f	struct:Eigen::internal::scalar_hypot_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a + b; }$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a - b; }$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a \/ b; }$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return numext::maxi(a, b); }$/;"	f	struct:Eigen::internal::scalar_max_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return numext::mini(a, b); }$/;"	f	struct:Eigen::internal::scalar_min_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const first_argument_type& a) const { return BinaryOp::operator()(a,m_value); }$/;"	f	struct:Eigen::internal::bind2nd_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const second_argument_type& b) const { return BinaryOp::operator()(m_value,b); }$/;"	f	struct:Eigen::internal::bind1st_op
operator ()	Eigen/src/Core/functors/BinaryFunctors.h	/^  inline result_type operator() (const Scalar& a, const Exponent& b) const { return numext::pow(a, b); }$/;"	f	struct:Eigen::internal::scalar_pow_op
operator ()	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() () const { return m_other; }$/;"	f	struct:Eigen::internal::scalar_constant_op
operator ()	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType i) const { return impl(i); }$/;"	f	struct:Eigen::internal::linspaced_op
operator ()	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType i) const {$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType row, IndexType col) const { return row==col ? Scalar(1) : Scalar(0); }$/;"	f	struct:Eigen::internal::scalar_identity_op
operator ()	Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar operator() (IndexType i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a) const { return !a; }$/;"	f	struct:Eigen::internal::scalar_boolean_not_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const NewType operator() (const Scalar& a) const { return cast<Scalar, NewType>(a); }$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }$/;"	f	struct:Eigen::internal::scalar_opposite_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::ceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::floor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::round(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scal&, const result_type& a) const { return a; }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs(a); }$/;"	f	struct:Eigen::internal::scalar_abs_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using numext::arg; return arg(a); }$/;"	f	struct:Eigen::internal::scalar_arg_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a, const Score&) const { return numext::abs(a); }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isfinite)(a); }$/;"	f	struct:Eigen::internal::scalar_isfinite_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isinf)(a); }$/;"	f	struct:Eigen::internal::scalar_isinf_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return (numext::isnan)(a); }$/;"	f	struct:Eigen::internal::scalar_isnan_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return Scalar(1)\/a; }$/;"	f	struct:Eigen::internal::scalar_inverse_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a*a; }$/;"	f	struct:Eigen::internal::scalar_cube_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a; }$/;"	f	struct:Eigen::internal::scalar_square_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return numext::cos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { EIGEN_USING_STD_MATH(log10) return log10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return Scalar(1)\/numext::sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::acos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::asin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::atan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::cosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::exp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::log(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::log1p(a); }$/;"	f	struct:Eigen::internal::scalar_log1p_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::tan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const$/;"	f	struct:Eigen::internal::scalar_sign_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator()(const Scalar& a) const { return numext::tanh(a); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { using numext::conj; return conj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }$/;"	f	struct:Eigen::internal::scalar_abs2_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::imag(a); }$/;"	f	struct:Eigen::internal::scalar_imag_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::real(a); }$/;"	f	struct:Eigen::internal::scalar_real_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::imag_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_imag_ref_op
operator ()	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::real_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_real_ref_op
operator ()	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockA, const DataMapper& lhs, Index depth, Index rows, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_lhs
operator ()	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockB, const DataMapper& rhs, Index depth, Index cols, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_rhs
operator ()	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(const DataMapper& res, const LhsScalar* blockA, const RhsScalar* blockB,$/;"	f	class:Eigen::internal::gebp_kernel
operator ()	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void operator() (Index row, Index rows, Index col=0, Index cols=-1, GemmParallelInfo<Index>* info=0) const$/;"	f	struct:Eigen::internal::gemm_functor
operator ()	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  void operator()(ResScalar* _res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index size, Index depth, const ResScalar& alpha)$/;"	f	struct:Eigen::internal::tribb_kernel
operator ()	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockA, const Scalar* _lhs, Index lhsStride, Index cols, Index rows)$/;"	f	struct:Eigen::internal::symm_pack_lhs
operator ()	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockB, const Scalar* _rhs, Index rhsStride, Index rows, Index cols, Index k2)$/;"	f	struct:Eigen::internal::symm_pack_rhs
operator ()	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Scalar& operator()(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
operator ()	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
operator ()	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar& operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
operator ()	Eigen/src/Core/util/BlasUtil.h	/^  inline T operator()(const T& x) const { return numext::conj(x); }$/;"	f	struct:Eigen::internal::conj_if
operator ()	Eigen/src/Core/util/BlasUtil.h	/^  inline const T& operator()(const T& x) const { return x; }$/;"	f	struct:Eigen::internal::conj_if
operator ()	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (Index row, Index col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Scalar& operator() (Index row, Index col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::IncompleteLUT::keep_diag
operator ()	Eigen/src/MetisSupport/MetisSupport.h	/^  void operator() (const MatrixType& A, PermutationType& matperm)$/;"	f	class:Eigen::MetisOrdering
operator ()	Eigen/src/OrderingMethods/Ordering.h	/^    void operator() (const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::COLAMDOrdering
operator ()	Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& \/*mat*\/, PermutationType& perm)$/;"	f	class:Eigen::NaturalOrdering
operator ()	Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const SparseSelfAdjointView<SrcType, SrcUpLo>& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::SimplicialCholeskyBase::keep_diag
operator ()	Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool operator() (const Index&, const Index&, const Scalar& value) const$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
operator ()	methods/core_methods.cpp	/^void EulerExplicit::operator()( Real *x0, Real *x1, Real h)$/;"	f	class:EulerExplicit
operator ()	methods/core_methods.cpp	/^void Heun::operator()( Real *x0, Real *x1, Real h )$/;"	f	class:Heun
operator ()	methods/core_methods.cpp	/^void RK3::operator()(Real *x0, Real *x1, Real h)$/;"	f	class:RK3
operator ()	methods/core_methods.cpp	/^void RK4::operator()(Real *x0, Real*x1, Real h)$/;"	f	class:RK4
operator ()	methods/stabilized_methods.cpp	/^void RKC::operator()( Real *x0, Real *x1, Real h )$/;"	f	class:RKC
operator ()	methods/stabilized_methods.cpp	/^void ROCK2::operator() ( Real *x0, Real *x1, Real h )$/;"	f	class:ROCK2
operator ()	tools/random_variable.hpp	/^    Eigen::VectorXd operator()() const$/;"	f	struct:EigenNormalRandomVariable
operator ()	tools/random_variable.hpp	/^    Real operator()() $/;"	f	class:DiscreteDirac
operator ()	tools/random_variable.hpp	/^    Real operator()() $/;"	f	class:NormalDistribution
operator ()	tools/random_variable.hpp	/^    Real operator()() $/;"	f	class:SarkaDistribution
operator ()	tools/random_variable.hpp	/^    Real operator()() $/;"	f	class:UniformDistribution
operator ()	tools/random_variable.hpp	/^  Real virtual operator()(){fprintf(stderr,"Sampling from random variable not implemented");abort(); return 1.0;}$/;"	f	class:RandomVariable
operator *	Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const MatrixBase<MatrixDerived> &matrix) const$/;"	f	class:Eigen::DiagonalBase
operator *	Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar) const$/;"	f	class:Eigen::DiagonalBase
operator *	Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar, const DiagonalBase& other)$/;"	f	class:Eigen::DiagonalBase
operator *	Eigen/src/Core/DiagonalProduct.h	/^MatrixBase<Derived>::operator*(const DiagonalBase<DiagonalDerived> &a_diagonal) const$/;"	f	class:Eigen::MatrixBase
operator *	Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	Eigen/src/Core/MatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const InverseImpl<Other, PermutationStorage>& other, const PermutationBase& perm)$/;"	f	class:Eigen::PermutationBase
operator *	Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const InverseImpl<Other,PermutationStorage>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const PermutationBase<Other>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::InverseImpl
operator *	Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const InverseType& trPerm)$/;"	f	class:Eigen::InverseImpl
operator *	Eigen/src/Core/PermutationMatrix.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	Eigen/src/Core/PermutationMatrix.h	/^operator*(const PermutationBase<PermutationDerived> &permutation,$/;"	f	namespace:Eigen
operator *	Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SelfAdjointView& rhs)$/;"	f	class:Eigen::SelfAdjointView
operator *	Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SelfAdjointView
operator *	Eigen/src/Core/SelfAdjointView.h	/^    operator*(const Scalar& s, const SelfAdjointView& mat)$/;"	f	class:Eigen::SelfAdjointView
operator *	Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trt)$/;"	f	class:Eigen::Transpose
operator *	Eigen/src/Core/Transpositions.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	Eigen/src/Core/Transpositions.h	/^operator*(const TranspositionsBase<TranspositionsDerived> &transpositions,$/;"	f	namespace:Eigen
operator *	Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const TriangularViewImpl& rhs)$/;"	f	class:Eigen::TriangularViewImpl
operator *	Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularViewImpl
operator *	Eigen/src/Core/VectorwiseOp.h	/^    operator*(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator *	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half operator * (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator *	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	Eigen/src/Geometry/AngleAxis.h	/^  friend EIGEN_DEVICE_FUNC inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Lhs>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Rhs>& rhs) const$/;"	f	class:Eigen::Homogeneous
operator *	Eigen/src/Geometry/Homogeneous.h	/^    operator* (const Transform<Scalar,Dim,Mode,Options>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::operator* (const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
operator *	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC friend inline Transform<Scalar,Dim,Affine> operator*(const DiagonalMatrix<Scalar,Dim>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType operator*(const EigenBase<OtherDerived>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Isometry> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode> operator*(const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/RotationBase.h	/^    operator*(const EigenBase<OtherDerived>& e) const$/;"	f	class:Eigen::RotationBase
operator *	Eigen/src/Geometry/Scaling.h	/^  inline Matrix<Scalar,Dim,Dim> operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::UniformScaling
operator *	Eigen/src/Geometry/Scaling.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?Affine:Mode)> operator* (const Transform<Scalar,Dim, Mode, Options>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling operator* (const UniformScaling& other) const$/;"	f	class:Eigen::UniformScaling
operator *	Eigen/src/Geometry/Scaling.h	/^  inline typename internal::plain_matrix_type<Derived>::type operator* (const MatrixBase<Derived>& other) const$/;"	f	class:Eigen::UniformScaling
operator *	Eigen/src/Geometry/Scaling.h	/^UniformScaling<Scalar>::operator* (const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	Eigen/src/Geometry/Scaling.h	/^operator*(const MatrixBase<Derived>& matrix, const UniformScaling<Scalar>& s)$/;"	f	namespace:Eigen
operator *	Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &b) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^    operator * (const EigenBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^    operator * (const Transform<Scalar,Dim,OtherMode,OtherOptions>& other) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Transform operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^  inline TransformTimeDiagonalReturnType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^  operator * (const EigenBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline AffineTransformType operator*(const EigenBase<OtherDerived>& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline IsometryTransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode> operator* (const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^  operator* (const MatrixBase<Derived>& vec) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const EigenBase<OtherDerived>& linear) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const UniformScaling<Scalar>& other) const$/;"	f	class:Eigen::Translation
operator *	Eigen/src/Householder/HouseholderSequence.h	/^    typename internal::matrix_type_times_scalar_type<Scalar, OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::HouseholderSequence
operator *	Eigen/src/Householder/HouseholderSequence.h	/^typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)$/;"	f	namespace:Eigen
operator *	Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation operator*(const JacobiRotation& other)$/;"	f	class:Eigen::JacobiRotation
operator *	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQReturnType
operator *	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
operator *	Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	Eigen/src/SparseCore/SparsePermutation.h	/^operator*( const PermutationBase<PermDerived>& perm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const InverseImpl<PermutationType,PermutationStorage>& tperm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const InverseImpl<PermutationType, PermutationStorage>& tperm)$/;"	f	namespace:Eigen
operator *	Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const PermutationBase<PermDerived>& perm)$/;"	f	namespace:Eigen
operator *	Eigen/src/SparseCore/SparseProduct.h	/^SparseMatrixBase<Derived>::operator*(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
operator *	Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
operator *	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator*(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator *=	Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator*=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator *=	Eigen/src/Core/MatrixBase.h	/^MatrixBase<Derived>::operator*=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator *=	Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator *=	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator*=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() * other; }$/;"	f	class:Eigen::TriangularViewImpl
operator *=	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator*=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator *=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half& operator *= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator *=	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator *=	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator*=(const EigenBase<OtherDerived>& other) { return *this = *this * other; }$/;"	f	class:Eigen::Transform
operator *=	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const DiagonalMatrix<Scalar,Dim>& s) { linearExt() *= s; return *this; }$/;"	f	class:Eigen::Transform
operator *=	Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const UniformScaling<Scalar>& s) { return scale(s.factor()); }$/;"	f	class:Eigen::Transform
operator *=	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +	Eigen/src/Core/VectorwiseOp.h	/^    operator+(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator +	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half operator + (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator +	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator+(const MatrixBase<DenseDerived> &a, const SparseMatrixBase<SparseDerived> &b)$/;"	f	namespace:Eigen
operator +	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator+(const SparseMatrixBase<SparseDerived> &a, const MatrixBase<DenseDerived> &b)$/;"	f	namespace:Eigen
operator ++	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator++()   { m_iter.operator++(); return *this; }$/;"	f	class:Eigen::InnerIterator
operator ++	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector& operator++() { m_inner++; return *this; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator ++	Eigen/src/SparseCore/AmbiVector.h	/^    Iterator& operator++()$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator ++	Eigen/src/SparseCore/SparseBlock.h	/^  inline OuterVectorInnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator ++	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator ++	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator ++	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator ++	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++() { ++m_sparseIter; return *this; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator ++	Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline InnerIterator& operator++()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator +=	Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator+=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator +=	Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator+=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator +=	Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator +=	Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator +=	Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator +=	Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator +=	Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& ArrayBase<Derived>::operator+=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator +=	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator+=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator +=	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator+=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator +=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half& operator += (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator +=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator+=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator+=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator ,	Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
operator ,	Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
operator -	Eigen/src/Core/VectorwiseOp.h	/^    operator-(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator -	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half operator - (const half& a) {$/;"	f	namespace:Eigen::half_impl
operator -	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half operator - (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator -	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator-(const MatrixBase<DenseDerived> &a, const SparseMatrixBase<SparseDerived> &b)$/;"	f	namespace:Eigen
operator -	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator-(const SparseMatrixBase<SparseDerived> &a, const MatrixBase<DenseDerived> &b)$/;"	f	namespace:Eigen
operator -	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator-() const { return NegativeReturnType(derived()); }$/;"	f
operator --	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline ReverseInnerIterator& operator--() { --m_id; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator -=	Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator-=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator -=	Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator-=(const ArrayBase<OtherDerived> &other)$/;"	f	class:Eigen::ArrayBase
operator -=	Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator -=	Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator -=	Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator-=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator -=	Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator -=	Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& ArrayBase<Derived>::operator-=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator -=	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator-=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator -=	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator-=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator -=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half& operator -= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator -=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator-=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator-=(const SparseMatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator /	Eigen/src/Core/VectorwiseOp.h	/^    operator\/(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator /	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half operator \/ (const half& a, Index b) {$/;"	f	namespace:Eigen::half_impl
operator /	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half operator \/ (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator /	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator\/(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator /=	Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator\/=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator /=	Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator /=	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator\/=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() \/ other; }$/;"	f	class:Eigen::TriangularViewImpl
operator /=	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator\/=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator /=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ half& operator \/= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator /=	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator <	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator < (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator <	smc/pf_smc.cpp	/^bool operator <( ShuffleSelect s1, ShuffleSelect s2) { return s1.up_bound< s2.up_bound;}$/;"	f
operator <	smc/stuart_smc.cpp	/^bool operator <( ShuffleSelect s1, ShuffleSelect s2) { return s1.up_bound< s2.up_bound;}$/;"	f
operator <	tools/random_variable.hpp	/^inline bool operator< (DirSample ds1, DirSample ds2){return ds1.up_bound<ds2.up_bound;}$/;"	f
operator <<	Eigen/src/Core/CommaInitializer.h	/^DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator <<	Eigen/src/Core/CommaInitializer.h	/^inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)$/;"	f	class:Eigen::DenseBase
operator <<	Eigen/src/Core/IO.h	/^    friend std::ostream & operator << (std::ostream & s, const WithFormat& wf)$/;"	f	class:Eigen::WithFormat
operator <<	Eigen/src/Core/IO.h	/^std::ostream & operator <<$/;"	f	namespace:Eigen
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet16uc & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2d & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2l & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4f & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4i & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4ui & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_ALWAYS_INLINE std::ostream& operator << (std::ostream& os, const half& v) {$/;"	f	namespace:Eigen::half_impl
operator <<	Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2d & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2l & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2ul & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4i & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4ui & v)$/;"	f	namespace:Eigen::internal
operator <<	Eigen/src/SparseCore/SparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrix& m)$/;"	f	class:Eigen::SparseMatrix
operator <<	Eigen/src/SparseCore/SparseMatrixBase.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)$/;"	f	class:Eigen::SparseMatrixBase
operator <<	Eigen/src/SparseCore/SparseVector.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseVector& m)$/;"	f	class:Eigen::SparseVector
operator <=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator <= (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator =	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Array& other)$/;"	f	class:Eigen::Array
operator =	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
operator =	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
operator =	Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Scalar &value)$/;"	f	class:Eigen::Array
operator =	Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const ArrayBase& other)$/;"	f	class:Eigen::ArrayBase
operator =	Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const Scalar &value)$/;"	f	class:Eigen::ArrayBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)$/;"	f	class:Eigen::DenseBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)$/;"	f	class:Eigen::MatrixBase
operator =	Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	Eigen/src/Core/DenseStorage.h	/^    DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other) $/;"	f	class:Eigen::DenseStorage
operator =	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage&) { return *this; }$/;"	f	class:Eigen::DenseStorage
operator =	Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalMatrix& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator =	Eigen/src/Core/MapBase.h	/^    Derived& operator=(const MapBase& other)$/;"	f	class:Eigen::MapBase
operator =	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
operator =	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
operator =	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)$/;"	f	class:Eigen::Matrix
operator =	Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::Matrix
operator =	Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase& other)$/;"	f	class:Eigen::PermutationBase
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& tr)$/;"	f	class:Eigen::PermutationBase
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::Map
operator =	Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::Map
operator =	Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationMatrix& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
operator =	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
operator =	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::PlainObjectBase
operator =	Eigen/src/Core/ReturnByValue.h	/^      Unusable& operator=(const Unusable&) {return *this;}$/;"	f	class:Eigen::ReturnByValue::Unusable
operator =	Eigen/src/Core/ReturnByValue.h	/^Derived& DenseBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	Eigen/src/Core/Transpositions.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	Eigen/src/Core/Transpositions.h	/^    Map& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Map
operator =	Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const Transpositions& other)$/;"	f	class:Eigen::Transpositions
operator =	Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
operator =	Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsWrapper& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& operator=(const TriangularView &other)$/;"	f	class:Eigen::TriangularView
operator =	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& operator=(const TriangularViewImpl& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator =	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half& operator=(const half& other) {$/;"	f	struct:Eigen::half
operator =	Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper& operator=(const T &v) {$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator =	Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionBase<QuatDerived>& q)$/;"	f	class:Eigen::AngleAxis
operator =	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::QuaternionBase
operator =	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)$/;"	f	class:Eigen::QuaternionBase
operator =	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Rotation2D& operator=(const  MatrixBase<Derived>& m)$/;"	f	class:Eigen::Rotation2D
operator =	Eigen/src/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Transform& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	Eigen/src/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage& operator=(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
operator =	Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const Derived& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	Eigen/src/SparseCore/SparseBlock.h	/^    BlockImpl& operator=(const T&)$/;"	f	class:Eigen::BlockImpl
operator =	Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const BlockType& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator& operator=(const InnerIterator& other)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator =	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
operator =	Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE SparseMatrix<Scalar,_Options,_StorageIndex>& SparseMatrix<Scalar,_Options,_StorageIndex>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView<SrcMatrixType,SrcMode>& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSymmetricPermutationProduct<SrcMatrixType,SrcMode>& permutedMatrix)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
operator =	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseVector
operator =	Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
operator =	Eigen/src/StlSupport/details.h	/^    inline T& operator=(const OtherT& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support& operator=(const workaround_msvc_stl_support& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix& operator=(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
operator ==	Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC inline bool operator==(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator ==	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator == (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator >	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator > (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator >=	Eigen/src/Core/arch/CUDA/Half.h	/^__device__ bool operator >= (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator Derived&	Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator Derived&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator SparseVectorType&	Eigen/src/SparseCore/SparseVector.h	/^  operator SparseVectorType&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator T&	Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator T&() { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator T&	Eigen/src/StlSupport/details.h	/^    inline operator T& () { return *static_cast<T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator []	Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator []	Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator []	Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator[](Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator[](Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	Eigen/src/Core/util/Memory.h	/^  T& operator[](std::ptrdiff_t i) { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	Eigen/src/Core/util/Memory.h	/^  const T& operator[](std::ptrdiff_t i) const { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex operator[](Index i) const { return i==m_index ? m_value : 0; }$/;"	f	class:Eigen::SparseMatrix::SingletonVector
operator ^	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator^(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator bool	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const         { return m_iter; }$/;"	f	class:Eigen::InnerIterator
operator bool	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator bool	Eigen/src/SparseCore/AmbiVector.h	/^    operator bool() const { return m_cachedIndex>=0; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator bool	Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return EvalIterator::operator bool() && EvalIterator::index() < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
operator bool	Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return m_outerPos < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator bool	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator bool	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator bool	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return (m_lhsIter && m_rhsIter); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id<m_innerSize; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_lhsIter; }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_rhsIter; }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE operator bool() const { return LhsIterator::operator bool() && (!m_empty); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline operator bool() const  { return m_sparseIter; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline operator bool() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator const Derived&	Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator const Derived&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const ExpressionType&	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::ForceAlignedAccess
operator const ExpressionType&	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::NestByValue
operator const Scalar	Eigen/src/Core/Product.h	/^  operator const Scalar() const$/;"	f	class:Eigen::internal::dense_product_base
operator const SparseVectorType&	Eigen/src/SparseCore/SparseVector.h	/^  operator const SparseVectorType&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const T&	Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator const T&() const { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator const T&	Eigen/src/StlSupport/details.h	/^    inline operator const T& () const { return *static_cast<const T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator const T*	Eigen/src/Core/util/Memory.h	/^  operator const T*() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
operator ||	Eigen/src/plugins/CommonCwiseBinaryOps.h	/^operator||(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operatorInverseSqrt	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorInverseSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorNorm	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::operatorNorm() const$/;"	f	class:Eigen::MatrixBase
operatorNorm	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::operatorNorm() const$/;"	f	class:Eigen::SelfAdjointView
operatorSqrt	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
options	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline superlu_options_t& options() { return m_sluOptions; }$/;"	f	class:Eigen::SuperLUBase
order	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType order ; \/* pivot ordering of this column, if col is dead *\/$/;"	m	union:internal::colamd_col::__anon650
order_children	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  void order_children$/;"	f	namespace:internal
ordering	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::ordering(const MatrixType& a, ConstCholMatrixPtr &pmat, CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
ordering_helper_at_plus_a	Eigen/src/OrderingMethods/Ordering.h	/^void ordering_helper_at_plus_a(const MatrixType& A, MatrixType& symmat)$/;"	f	namespace:Eigen::internal
origin	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
originalMatrix	Eigen/src/misc/Image.h	/^  inline const MatrixType& originalMatrix() const { return m_originalMatrix; }$/;"	f	struct:Eigen::internal::image_retval_base
other	Eigen/src/Core/util/Memory.h	/^    typedef aligned_allocator<U> other;$/;"	t	struct:Eigen::aligned_allocator::rebind
other	Eigen/src/StlSupport/details.h	/^      typedef aligned_allocator_indirection<U> other;$/;"	t	struct:Eigen::aligned_allocator_indirection::rebind
outer	Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon262
outer	Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon263
outer	Eigen/src/Core/Redux.h	/^    outer = Start \/ Derived::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon575
outer	Eigen/src/Core/Redux.h	/^    outer = index \/ int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon577
outer	Eigen/src/Core/Stride.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::Stride
outer	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
outer	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return EvalIterator::outer() - (IsRowMajor ? m_block.startRow() : m_block.startCol()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
outer	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
outer	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
outer	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
outer	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
outer	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
outer	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
outer	Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
outer	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index outer() const  { return m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
outerInd	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *outerInd;$/;"	m	struct:Eigen::SluMatrix::__anon111
outerIndexPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* outerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* outerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* outerIndexPtr() { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* outerIndexPtr()   { return Base::m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* outerIndexPtr() { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex* outerIndexPtr() { return 0; }$/;"	f	class:Eigen::SparseVector
outerIndexPtr	Eigen/src/SparseCore/SparseVector.h	/^    inline const StorageIndex* outerIndexPtr() const { return 0; }$/;"	f	class:Eigen::SparseVector
outerSize	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const   { return m_dstExpr.outerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerSize	Eigen/src/Core/DenseBase.h	/^    Index outerSize() const$/;"	f	class:Eigen::DenseBase
outerSize	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const { return m_xpr.outerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
outerSize	Eigen/src/SparseCore/SparseMap.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
outerSize	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
outerSize	Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }$/;"	f	class:Eigen::SparseMatrixBase
outerSize	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index outerSize() const { return 1; }$/;"	f	class:Eigen::SparseVector
outerSize	Eigen/src/SparseCore/SparseView.h	/^  inline Index outerSize() const { return m_matrix.outerSize(); }$/;"	f	class:Eigen::SparseView
outerStride	Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Array
outerStride	Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ArrayWrapper
outerStride	Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::MatrixWrapper
outerStride	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerStride() const { return m_dstExpr.outerStride(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerStride	Eigen/src/Core/Block.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
outerStride	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
outerStride	Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
outerStride	Eigen/src/Core/Diagonal.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Diagonal
outerStride	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
outerStride	Eigen/src/Core/Map.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Map
outerStride	Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Matrix
outerStride	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::NestByValue
outerStride	Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::RefBase
outerStride	Eigen/src/Core/SelfAdjointView.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfAdjointView
outerStride	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TransposeImpl
outerStride	Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
outerStride	Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().outerStride(); }$/;"	f	class:Eigen::TriangularBase
outer_product_selector_run	Eigen/src/Core/ProductEvaluators.h	/^void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const false_type&)$/;"	f	namespace:Eigen::internal
outer_product_selector_run	Eigen/src/Core/ProductEvaluators.h	/^void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const true_type&)$/;"	f	namespace:Eigen::internal
outer_stride_at_compile_time	Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
p	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType p ;   \/* used as a row pointer in init_rows_cols () *\/$/;"	m	union:internal::Colamd_Row::__anon653
p16uc_COMPLEX32_REV	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV = vec_sld(p16uc_REVERSE32, p16uc_REVERSE32, 8);                                         \/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_PSET64_HI, p16uc_PSET64_LO, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE32_HI	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE32_HI = { 0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE32_HI	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE32_HI = { 0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = p16uc_REVERSE32; $/;"	m	namespace:Eigen::internal
p16uc_FORWARD	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = vec_lvsl(0, (float*)0);$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_FORWARD =   { 0,1,2,3, 4,5,6,7, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld((Packet16uc)p4i_ZERO, vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 3), 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld(vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 0), (Packet16uc)p4i_ZERO, 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN  = vec_sld(p16uc_DUPLICATE32_HI, (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN  = vec_sld(p16uc_DUPLICATE32_HI, (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 1), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_HI	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_HI = (Packet16uc) vec_mergeh((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_HI	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET64_HI = { 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_LO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_LO = (Packet16uc) vec_mergel((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_LO	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET64_LO = (Packet16uc) vec_mergel((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE32	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE32 = { 12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE32	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_REVERSE32 = { 12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE64	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE64 = { 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE64	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_REVERSE64 = { 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_HI	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_HI = p16uc_PSET64_HI + p16uc_HALF64_0_16;                                         \/\/{ 0,1,2,3, 4,5,6,7, 16,17,18,19, 20,21,22,23};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_HI	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_HI = { 0,1,2,3, 4,5,6,7, 16,17,18,19, 20,21,22,23};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_LO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_LO = p16uc_PSET64_LO + p16uc_HALF64_0_16;                                         \/\/{ 8,9,10,11, 12,13,14,15, 24,25,26,27, 28,29,30,31};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_LO	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_LO = { 8,9,10,11, 12,13,14,15, 24,25,26,27, 28,29,30,31};$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet4f>(p2d_ONE), reinterpret_cast<Packet4f>(p2d_ZERO), 8));$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet4f>(p2d_ZERO), reinterpret_cast<Packet4f>(p2d_ONE), 8));$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet16uc>(p2d_ZERO), reinterpret_cast<Packet16uc>(p2d_ONE), 8));$/;"	m	namespace:Eigen::internal
p2d_MZERO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_MZERO = { -0.0, -0.0 };$/;"	m	namespace:Eigen::internal
p2d_ONE	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_ONE  = { 1.0, 1.0 }; $/;"	m	namespace:Eigen::internal
p2d_ONE	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_ONE = { 1.0, 1.0 }; $/;"	m	namespace:Eigen::internal
p2d_ZERO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_ZERO = reinterpret_cast<Packet2d>(p4f_ZERO);$/;"	m	namespace:Eigen::internal
p2d_ZERO_	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_ZERO_ = { -0.0, -0.0 };$/;"	m	namespace:Eigen::internal
p2l_1023	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static Packet2l p2l_1023 = { 1023, 1023 };$/;"	m	namespace:Eigen::internal
p2l_ONE	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2l  p2l_ONE  = { 1, 1 };$/;"	m	namespace:Eigen::internal
p2l_ZERO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2l  p2l_ZERO = reinterpret_cast<Packet2l>(p4i_ZERO);$/;"	m	namespace:Eigen::internal
p2ui_CONJ_XOR	Eigen/src/Core/arch/NEON/Complex.h	/^inline uint32x2_t p2ui_CONJ_XOR() {$/;"	f	namespace:Eigen::internal
p2ul_52	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static Packet2ul p2ul_52 = { 52, 52 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR	Eigen/src/Core/arch/NEON/Complex.h	/^  static uint64x2_t p2ul_CONJ_XOR = vld1q_u64( p2ul_conj_XOR_DATA );$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR	Eigen/src/Core/arch/NEON/Complex.h	/^  static uint64x2_t p2ul_CONJ_XOR = {0x0, 0x8000000000000000};$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2d_MZERO, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_MZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	Eigen/src/Core/arch/ZVector/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2d_ZERO_, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2d_MZERO, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_MZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	Eigen/src/Core/arch/ZVector/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_ZERO_, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_conj_XOR_DATA	Eigen/src/Core/arch/NEON/Complex.h	/^  const uint64_t  p2ul_conj_XOR_DATA[] = { 0x0, 0x8000000000000000 };$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 0.0, 1.0, 2.0, 3.0 };$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 0.0, 1.0, 2.0, 3.0 };$/;"	m	namespace:Eigen::internal
p4f_MZERO	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_MZERO = (Packet4f) vec_sl((Packet4ui)p4i_MINUS1, (Packet4ui)p4i_MINUS1); \/\/{ 0x80000000, 0x80000000, 0x80000000, 0x80000000}$/;"	m	namespace:Eigen::internal
p4f_ONE	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ONE = vec_ctf(p4i_ONE, 0); \/\/{ 1.0, 1.0, 1.0, 1.0}$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 0, 1, 2, 3 };$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 0, 1, 2, 3 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_MZERO);\/\/{ 0x00000000, 0x80000000, 0x00000000, 0x80000000 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	Eigen/src/Core/arch/NEON/Complex.h	/^inline uint32x4_t p4ui_CONJ_XOR() {$/;"	f	namespace:Eigen::internal
p_count	methods/core_methods.hpp	/^    int p_count=0;$/;"	m	class:NumericalMethod
pabs	Eigen/src/Core/GenericPacketMath.h	/^pabs(const Packet& a) { using std::abs; return abs(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pabs(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pabs(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pabs(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f pabs(const Packet16f& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pabs<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4  pabs<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pabs<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vabsq_f64(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vabsq_f32(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vabsq_s32(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs<Packet2d>(const Packet2d& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs<Packet4i>(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pack	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void pack(Scalar* blockA, const const_blas_data_mapper<Scalar,Index,StorageOrder>& lhs, Index cols, Index i, Index& count)$/;"	f	struct:Eigen::internal::symm_pack_lhs
packedMatrix	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const MatrixType& packedMatrix() const$/;"	f	class:Eigen::HessenbergDecomposition
packedMatrix	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline const MatrixType& packedMatrix() const$/;"	f	class:Eigen::Tridiagonalization
packet	Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::ternary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::ternary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(IndexType index) const$/;"	f	struct:Eigen::internal::evaluator
packet	Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(IndexType row, IndexType col) const$/;"	f	struct:Eigen::internal::evaluator
packet	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	Eigen/src/Core/GenericPacketMath.h	/^  Packet packet[N];$/;"	m	struct:Eigen::internal::PacketBlock
packet	Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::MapBase
packet	Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
packet	Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::NestByValue
packet	Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
packet	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::PlainObjectBase
packet	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
packet	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index idx) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	Eigen/src/Core/ProductEvaluators.h	/^  const PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	Eigen/src/Core/ProductEvaluators.h	/^  const PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	Eigen/src/Core/Redux.h	/^  PacketType packet(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
packet	Eigen/src/Core/Redux.h	/^  PacketType packet(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
packetByOuterInner	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
packetByOuterInner	Eigen/src/Core/Redux.h	/^  PacketType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i) const { return op.template packetOp<T>(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i) const { return op.template packetOp<T>(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j) const { return op.template packetOp<T>(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j) const {$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j=0) const { return op.template packetOp<T>(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType=0, IndexType=0) const { return op.template packetOp<T>(); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::bind2nd_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_difference_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_max_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_min_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_product_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_quotient_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_sum_op
packetOp	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& b) const$/;"	f	struct:Eigen::internal::bind1st_op
packetOp	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(IndexType i) const { return impl.packetOp(i); }$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(IndexType i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const PacketType packetOp() const { return internal::pset1<PacketType>(m_other); }$/;"	f	struct:Eigen::internal::scalar_constant_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const { return internal::pconj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs2_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_arg_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_opposite_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pacos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pasin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::patan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pcos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pcosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pexp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pfloor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog1p(a); }$/;"	f	struct:Eigen::internal::scalar_log1p_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pround(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::prsqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::ptan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& x) const { return ptanh(x); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_cube_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_op
packetOp	Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_square_op
packet_access_bit	Eigen/src/Core/Matrix.h	/^      packet_access_bit = (packet_traits<_Scalar>::Vectorizable && (EIGEN_UNALIGNED_VECTORIZE || (actual_alignment>=required_alignment))) ? PacketAccessBit : 0$/;"	e	enum:Eigen::internal::traits::__anon450
packet_impl	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::false_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_impl	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::true_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_traits	Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits<const T> : packet_traits<T> { };$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<float> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct packet_traits<Eigen::half> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<double>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<int32_t>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<float> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
pacos	Eigen/src/Core/GenericPacketMath.h	/^Packet pacos(const Packet& a) { using std::acos; return acos(a); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/GenericPacketMath.h	/^padd(const Packet& a,$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd padd<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf padd<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d padd<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f padd<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f padd<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d padd<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 padd<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 padd<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 padd<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(padd<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return vaddq_f64(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vaddq_f32(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vaddq_s32(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a + b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a + b); }$/;"	f	namespace:Eigen::internal
padd	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^DoublePacket<Packet> padd(const DoublePacket<Packet> &a, const DoublePacket<Packet> &b)$/;"	f	namespace:Eigen::internal
palign	Eigen/src/Core/GenericPacketMath.h	/^inline void palign(PacketType& first, const PacketType& second)$/;"	f	namespace:Eigen::internal
palign_impl	Eigen/src/Core/GenericPacketMath.h	/^struct palign_impl$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet2cd>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet4cf>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet4d>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet8f>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct palign_impl<Offset, Packet16f> {$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct palign_impl<Offset, Packet8d> {$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/ZVector/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/ZVector/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
pand	Eigen/src/Core/GenericPacketMath.h	/^pand(const Packet& a, const Packet& b) { return a & b; }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pand   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pand   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pand<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pand<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pand<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pand<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pand(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pand<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vandq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_and_si128(a,b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pand<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/GenericPacketMath.h	/^pandnot(const Packet& a, const Packet& b) { return a & (!b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pandnot<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pandnot<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pandnot<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pandnot<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pandnot<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pandnot<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pandnot(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pandnot<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vbicq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pandnot<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return pand<Packet4i>(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
panel_bmod	Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_bmod(const Index m, const Index w, const Index jcol, $/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_dfs(const Index m, const Index w, const Index jcol, MatrixType& A, IndexVector& perm_r, Index& nseg, ScalarVector& dense, IndexVector& panel_lsub, IndexVector& segrep, IndexVector& repfnz, IndexVector& xprune, IndexVector& marker, IndexVector& parent, IndexVector& xplore, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs_traits	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  panel_dfs_traits(Index jcol, StorageIndex* marker)$/;"	f	struct:Eigen::internal::panel_dfs_traits
panel_dfs_traits	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^struct panel_dfs_traits$/;"	s	namespace:Eigen::internal
panel_size	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index panel_size; \/\/ a panel consists of at most <panel_size> consecutive columns$/;"	m	struct:Eigen::internal::perfvalues
parallelize_gemm	Eigen/src/Core/products/Parallelizer.h	/^void parallelize_gemm(const Functor& func, Index rows, Index cols, Index depth, bool transpose)$/;"	f	namespace:Eigen::internal
params	smc/smc.hpp	/^    std::vector<Real>params;$/;"	m	class:Particle
pardisoInit	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoInit(int type)$/;"	f	class:Eigen::PardisoImpl
pardisoParameterArray	Eigen/src/PardisoSupport/PardisoSupport.h	/^    ParameterType& pardisoParameterArray()$/;"	f	class:Eigen::PardisoImpl
pardisoRelease	Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoRelease()$/;"	f	class:Eigen::PardisoImpl
pardiso_run_selector	Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector$/;"	s	namespace:Eigen::internal
pardiso_run_selector	Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector<long long int>$/;"	s	namespace:Eigen::internal
pardiso_traits	Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLDLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
parent	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType parent ;  \/* parent in parent tree super-column structure, if *\/$/;"	m	union:internal::colamd_col::__anon649
parg	Eigen/src/Core/GenericPacketMath.h	/^parg(const Packet& a) { using numext::arg; return arg(a); }$/;"	f	namespace:Eigen::internal
partialPivLu	Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::partialPivLu() const$/;"	f	class:Eigen::MatrixBase
partial_lu_impl	Eigen/src/LU/PartialPivLU.h	/^struct partial_lu_impl$/;"	s	namespace:Eigen::internal
partial_lu_inplace	Eigen/src/LU/PartialPivLU.h	/^void partial_lu_inplace(MatrixType& lu, TranspositionType& row_transpositions, typename TranspositionType::StorageIndex& nb_transpositions)$/;"	f	namespace:Eigen::internal
particles	smc/smc.hpp	/^    std::vector<Particle> particles;$/;"	m	class:PF_SMC
particles	smc/smc.hpp	/^    std::vector<Particle> particles;$/;"	m	class:Stuart_SMC
pasin	Eigen/src/Core/GenericPacketMath.h	/^Packet pasin(const Packet& a) { using std::asin; return asin(a); }$/;"	f	namespace:Eigen::internal
pastix_traits	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLDLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
patan	Eigen/src/Core/GenericPacketMath.h	/^Packet patan(const Packet& a) { using std::atan; return atan(a); }$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/GenericPacketMath.h	/^pblend(const Selector<unpacket_traits<Packet>::size>& ifPacket, const Packet& thenPacket, const Packet& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pblend(const Selector<4>& ifPacket, const Packet4d& thenPacket, const Packet4d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pblend(const Selector<8>& ifPacket, const Packet8f& thenPacket, const Packet8f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pblend(const Selector<16>& \/*ifPacket*\/,$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pblend(const Selector<8>& \/*ifPacket*\/,$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/SSE/Complex.h	/^template<>  EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pbroadcast2	Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast2(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast4(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4i>(const int *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet4i>(const int *a,$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a, const SrcPacket& \/*b*\/) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a, const SrcPacket& \/*b*\/, const SrcPacket& \/*c*\/, const SrcPacket& \/*d*\/) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8f pcast<Packet8i, Packet8f>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8i pcast<Packet8f, Packet8i>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pcast<half2, float4>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE half2 pcast<float4, half2>(const float4& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet16f pcast<Packet16h, Packet16f>(const Packet16h& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet16h pcast<Packet16f, Packet16h>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet4h, Packet4f>(const Packet4h& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4h pcast<Packet4f, Packet4h>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8f pcast<Packet8h, Packet8f>(const Packet8h& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8h pcast<Packet8f, Packet8h>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet2d pcast<Packet4f, Packet2d>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet2d, Packet4f>(const Packet2d& a, const Packet2d& b) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet4i, Packet4f>(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
pcast	Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4i pcast<Packet4f, Packet4i>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/GenericPacketMath.h	/^Packet pceil(const Packet& a) { using numext::ceil; return ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pceil<Packet4d>(const Packet4d& a) { return _mm256_ceil_pd(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pceil<Packet8f>(const Packet8f& a) { return _mm256_ceil_ps(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const  Packet2d& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const  Packet4f& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const Packet2d& a) { return _mm_ceil_pd(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const Packet4f& a) { return _mm_ceil_ps(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const  Packet2d& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const  Packet4f& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/GenericPacketMath.h	/^pconj(const Packet& a) { return numext::conj(a); }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pconj(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pconj(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pconj(const Packet4d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pconj(const Packet8f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pconj(const Packet8i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pconj(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pconj(const Packet16i& a) {$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pconj(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd(pxor(a.v, reinterpret_cast<Packet2d>(p2ul_CONJ_XOR2))); }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf(pxor<Packet4f>(a.v, reinterpret_cast<Packet4f>(p4ui_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pconj(const double2& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pconj(const float4& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pconj(const half2& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd(vreinterpretq_f64_u64(veorq_u64(vreinterpretq_u64_f64(a.v), p2ul_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd((Packet2d)vec_xor((Packet2d)a.v, (Packet2d)p2ul_CONJ_XOR2)); }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	Eigen/src/Core/util/BlasUtil.h	/^  inline T pconj(const T& x) const { return internal::pconj(x); }$/;"	f	struct:Eigen::internal::conj_if
pconj	Eigen/src/Core/util/BlasUtil.h	/^  inline const T& pconj(const T& x) const { return x; }$/;"	f	struct:Eigen::internal::conj_if
pcos	Eigen/src/Core/GenericPacketMath.h	/^Packet pcos(const Packet& a) { using std::cos; return cos(a); }$/;"	f	namespace:Eigen::internal
pcos	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pcos<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pcosh	Eigen/src/Core/GenericPacketMath.h	/^Packet pcosh(const Packet& a) { using std::cosh; return cosh(a); }$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet pcplxflip(const Packet& a)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pcplxflip<Packet2cd>(const Packet2cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pcplxflip<Packet4cf>(const Packet4cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/* <Packet1cd> *\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/* <Packet2cf> *\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/*<Packet2cf>*\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/GenericPacketMath.h	/^pdiv(const Packet& a,$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pdiv<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pdiv<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pdiv<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pdiv<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pdiv<Packet8i>(const Packet8i& \/*a*\/, const Packet8i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pdiv<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pdiv<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_div(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pdiv<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pdiv<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pdiv<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vdivq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a \/ b); }$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a \/ b); }$/;"	f	namespace:Eigen::internal
performFrancisQRStep	Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::performFrancisQRStep(Index il, Index im, Index iu, bool computeU, const Vector3s& firstHouseholderVector, Scalar* workspace)$/;"	f	class:Eigen::RealSchur
perfvalues	Eigen/src/SparseLU/SparseLU_Structs.h	/^struct perfvalues {$/;"	s	namespace:Eigen::internal
perm	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& perm() const { return m_perm; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
permutationP	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const PermutationType& permutationP() const { eigen_assert("m_analysisIsOk"); return m_perm; }$/;"	f	class:Eigen::IncompleteCholesky
permutationP	Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline const PermutationPType& permutationP() const$/;"	f	class:Eigen::FullPivLU
permutationP	Eigen/src/LU/PartialPivLU.h	/^    inline const PermutationType& permutationP() const$/;"	f	class:Eigen::PartialPivLU
permutationP	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationP() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationP	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::SuperLU
permutationP	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::UmfPackLU
permutationPinv	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationPinv() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationQ	Eigen/src/LU/FullPivLU.h	/^    inline const PermutationQType& permutationQ() const$/;"	f	class:Eigen::FullPivLU
permutationQ	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::SuperLU
permutationQ	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::UmfPackLU
permutation_matrix_product	Eigen/src/Core/ProductEvaluators.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, DenseShape>$/;"	s	namespace:Eigen::internal
permutation_matrix_product	Eigen/src/Geometry/Homogeneous.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, HomogeneousShape>$/;"	s	namespace:Eigen::internal
permutation_matrix_product	Eigen/src/SparseCore/SparsePermutation.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, SparseShape>$/;"	s	namespace:Eigen::internal
permute_symm_to_fullsymm	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_fullsymm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DestOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
permute_symm_to_symm	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_symm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DstOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
perturbCol0	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::perturbCol0$/;"	f	class:Eigen::BDCSVD
perturb_step	methods/core_methods.cpp	/^Real AbdulleGaregnaniMethod::perturb_step(Real h)$/;"	f	class:AbdulleGaregnaniMethod
pexp	Eigen/src/Core/GenericPacketMath.h	/^Packet pexp(const Packet& a) { using std::exp; return exp(a); }$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet4d>(const Packet4d& _x) {$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^pexp<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 pexp<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 pexp<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 pexp<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pexp<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/NEON/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type pfirst(const Packet& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> pfirst<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet4d>(const Packet4d& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet8f>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet8i>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double pfirst<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float pfirst<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE int pfirst<Packet16i>(const Packet16i& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double  pfirst<Packet2d>(const Packet2d& a) { double EIGEN_ALIGN16 x[2]; pstore<double>(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x; vec_ste(a, 0, &x); return x; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x; vec_ste(a, 0, &x); return x; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double pfirst<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  pfirst<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half pfirst<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(a, 0); }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float   pfirst<Packet4f>(const Packet4f& a) { float   EIGEN_ALIGN16 x[4]; vst1q_f32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t pfirst<Packet4i>(const Packet4i& a) { int32_t EIGEN_ALIGN16 x[4]; vst1q_s32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double EIGEN_ALIGN16 x[2]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float  EIGEN_ALIGN16 x[2]; vec_st2f(a.v4f[0], &x[0]); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int    EIGEN_ALIGN16 x[4]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/GenericPacketMath.h	/^Packet pfloor(const Packet& a) { using numext::floor; return floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pfloor<Packet4d>(const Packet4d& a) { return _mm256_floor_pd(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pfloor<Packet8f>(const Packet8f& a) { return _mm256_floor_ps(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return _mm_floor_pd(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a) { return _mm_floor_ps(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline Packet pgather(const Scalar* from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cd pgather<std::complex<double>, Packet2cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4cf pgather<std::complex<float>, Packet4cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4d pgather<double, Packet4d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet8f pgather<float, Packet8f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline Packet16f pgather<float, Packet16f>(const float* from,$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline Packet8d pgather<double, Packet8d>(const double* from,$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pgather<double, double2>(const double* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4 pgather<float, float4>(const float* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pgather<Eigen::half, half2>(const Eigen::half* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int32_t, Packet4i>(const int32_t* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride EIGEN_UNUSED)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/GenericPacketMath.h	/^pinsertfirst(const Packet& a, typename unpacket_traits<Packet>::type b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pinsertfirst(const Packet2cd& a, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pinsertfirst(const Packet4cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pinsertfirst(const Packet4d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pinsertfirst(const Packet8f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pinsertfirst(const Packet1cd&, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pinsertfirst(const Packet2cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pinsertfirst(const Packet2d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertfirst	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pinsertfirst(const Packet4f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/GenericPacketMath.h	/^pinsertlast(const Packet& a, typename unpacket_traits<Packet>::type b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pinsertlast(const Packet2cd& a, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pinsertlast(const Packet4cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pinsertlast(const Packet4d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pinsertlast(const Packet8f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pinsertlast(const Packet1cd&, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pinsertlast(const Packet2cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pinsertlast(const Packet2d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertlast	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pinsertlast(const Packet4f& a, float b)$/;"	f	namespace:Eigen::internal
pivotL	Eigen/src/SparseLU/SparseLU_pivotL.h	/^Index SparseLUImpl<Scalar,StorageIndex>::pivotL(const Index jcol, const RealScalar& diagpivotthresh, IndexVector& perm_r, IndexVector& iperm_c, Index& pivrow, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
plain_array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array() {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array(constructor_without_unaligned_array_assert) {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^  plain_array() $/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^  plain_array()$/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) $/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert)$/;"	f	struct:Eigen::internal::plain_array
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array$/;"	s	namespace:Eigen::internal
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, 0, MatrixOrArrayOptions, Alignment>$/;"	s	namespace:Eigen::internal
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 16>$/;"	s	namespace:Eigen::internal
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 32>$/;"	s	namespace:Eigen::internal
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 64>$/;"	s	namespace:Eigen::internal
plain_array	Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 8>$/;"	s	namespace:Eigen::internal
plain_matrix_type	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct plain_matrix_type<T,Sparse>$/;"	s	namespace:Eigen::internal
plain_object_eval	Eigen/src/SparseCore/SparseUtil.h	/^struct plain_object_eval<T,Sparse>$/;"	s	namespace:Eigen::internal
pload	Eigen/src/Core/GenericPacketMath.h	/^pload(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pload <Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pload <Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet4cf(pload<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload<Packet4d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload<Packet8f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pload<Packet8i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pload<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pload<Packet16i>(const int* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pload<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from) { return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>*        from) { return Packet2cf(pload<Packet4f>((const float *) from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pload<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pload<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pload<half2>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*    from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int32_t*  from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const __m128i*>(from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from)  { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
pload	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/GenericPacketMath.h	/^pload1(const typename unpacket_traits<Packet>::type  *a) { return pset1<Packet>(*a); }$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload1<Packet4d>(const double* from) { return _mm256_broadcast_sd(from); }$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload1<Packet8f>(const float*  from) { return _mm256_broadcast_ss(from); }$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pload1<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pload1<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
pload1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload1<Packet4f>(const float *from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/GenericPacketMath.h	/^ploaddup(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploaddup<Packet2cd>(const std::complex<double>* from) { return pset1<Packet2cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploaddup<Packet4cf>(const std::complex<float>* from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploaddup<Packet4d>(const double* from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploaddup<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploaddup<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploaddup<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>*     from)  { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*     from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double2 ploaddup<double2>(const double*  from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float4 ploaddup<float4>(const float*   from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> EIGEN_STRONG_INLINE half2 ploaddup<half2>(const Eigen::half*  from) {$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int32_t* from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*  from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>*     from) {  return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*      from) {  return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*    from)$/;"	f	namespace:Eigen::internal
ploaddup	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploadquad	Eigen/src/Core/GenericPacketMath.h	/^ploadquad(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadquad	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadquad<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadquad	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploadquad<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadquad	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploadquad<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt	Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet ploadt(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet ploadt_ro(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Aligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Unaligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Aligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Unaligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^ __device__ EIGEN_ALWAYS_INLINE half2 ploadt_ro<half2, Aligned>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^__device__ EIGEN_ALWAYS_INLINE half2 ploadt_ro<half2, Unaligned>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/GenericPacketMath.h	/^ploadu(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploadu<Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploadu<Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet4cf(ploadu<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploadu<Packet4d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadu<Packet8f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_ps(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i ploadu<Packet8i>(const int* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploadu<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i ploadu<Packet16i>(const int* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploadu<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>*       from) { return Packet2cf(ploadu<Packet4f>((const float*) from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 ploadu<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 ploadu<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 ploadu<half2>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*   from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int32_t* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from)  { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double*    from) { return pload<Packet2d>(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*     from) { return pload<Packet4f>(from); }$/;"	f	namespace:Eigen::internal
ploadu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int*       from) { return pload<Packet4i>(from); }$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/GenericPacketMath.h	/^Packet plog(const Packet& a) { using std::log; return log(a); }$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/AVX/MathFunctions.h	/^plog<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^plog<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 plog<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 plog<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 plog<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plog<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plog	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog10	Eigen/src/Core/GenericPacketMath.h	/^Packet plog10(const Packet& a) { using std::log10; return log10(a); }$/;"	f	namespace:Eigen::internal
plog1p	Eigen/src/Core/GenericPacketMath.h	/^Packet plog1p(const Packet& a) { return numext::log1p(a); }$/;"	f	namespace:Eigen::internal
plog1p	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 plog1p<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
plog1p	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 plog1p<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
plog1p	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plog1p<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/GenericPacketMath.h	/^plset(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d plset<Packet4d>(const double& a) { return _mm256_add_pd(_mm256_set1_pd(a), _mm256_set_pd(3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f plset<Packet8f>(const float& a) { return _mm256_add_ps(_mm256_set1_ps(a), _mm256_set_ps(7.0,6.0,5.0,4.0,3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f plset<Packet16f>(const float& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d plset<Packet8d>(const double& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return pset1<Packet2d>(a) + p2d_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return pset1<Packet4f>(a) + p4f_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)   { return pset1<Packet4i>(a) + p4i_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 plset<double2>(const double& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 plset<float4>(const float& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plset<half2>(const Eigen::half& a) {$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a)$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a)$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int32_t& a)$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return padd<Packet2d>(pset1<Packet2d>(a), p2d_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a)  { return padd<Packet4f>(pset1<Packet4f>(a), p4f_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)    { return padd<Packet4i>(pset1<Packet4i>(a), p4i_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plt2	build/plot_function_conf_bounds.py	/^    plt2 = ax.plot(x,true_y)$/;"	v
pmadd	Eigen/src/Core/GenericPacketMath.h	/^pmadd(const Packet&  a,$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet2cd& x, const Packet2cd& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet2cd& x, const Packet4d& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet4d& x, const Packet2cd& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet4cf& x, const Packet4cf& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet4cf& x, const Packet8f& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet8f& x, const Packet4cf& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmadd(const Packet4d& a, const Packet4d& b, const Packet4d& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmadd(const Packet8f& a, const Packet8f& b, const Packet8f& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmadd(const Packet16f& a, const Packet16f& b,$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmadd(const Packet8d& a, const Packet8d& b,$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet2d& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet2d& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet4f& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet4f& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return a*b + c; }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmadd<half2>(const half2& a, const half2& b, const half2& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vfmaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vmlaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vfmaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return vmlaq_s32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet2d& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet2d& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet4f& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet4f& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return _mm_fmadd_pd(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return _mm_fmadd_ps(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pmadd(const double& a, const double& b, const double& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float pmadd(const float& a, const float& b, const float& c) {$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c)$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd<Packet4i>(pmul<Packet4i>(a, b), c); }$/;"	f	namespace:Eigen::internal
pmadd	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const LhsScalar& x, const RhsScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const RealScalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const RealScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmax	Eigen/src/Core/GenericPacketMath.h	/^pmax(const Packet& a,$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmax<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmax<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmax<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmax<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmax<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmax<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmax<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmaxq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmaxq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmaxq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmax	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/GenericPacketMath.h	/^pmin(const Packet& a,$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmin<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmin<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmin<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmin<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmin<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmin<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmin<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vminq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vminq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vminq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmin	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/GenericPacketMath.h	/^pmul(const Packet& a,$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<double> pmul(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<float> pmul(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet2cd& a, const Packet2cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet2cd& x, const Packet4d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet4d& x, const Packet2cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet4cf& a, const Packet4cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet4cf& x, const Packet8f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet8f& x, const Packet4cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pmul<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pmul<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmul<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmul<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmul<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmul<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& x, const Packet2d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet2d& x, const Packet1cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& x, const Packet4f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet4f& x, const Packet2cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_madd(a,b,p2d_MZERO); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_madd(a,b, p4f_MZERO); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return a * b; }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmul<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmul<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmul<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmulq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmulq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmulq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& x, const Packet2d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet2d& x, const Packet1cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& x, const Packet4f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet4f& x, const Packet2cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a * b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a * b); }$/;"	f	namespace:Eigen::internal
pmul	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const LhsScalar& x, const RhsScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const RealScalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const RealScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pnegate	Eigen/src/Core/GenericPacketMath.h	/^pnegate(const Packet& a) { return -a; }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pnegate(const Packet2cd& a) { return Packet2cd(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pnegate(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pnegate(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pnegate(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pnegate(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pnegate(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return p2d_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return p4f_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return p4i_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pnegate(const double2& a) {$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pnegate(const float4& a) {$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pnegate(const half2& a) {$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate<Packet2d>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate<Packet4f>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return vnegq_f64(a); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return vnegq_f32(a); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return vnegq_s32(a); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(Packet4f(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return (-a); }$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return (-a); }$/;"	f	namespace:Eigen::internal
pointAt	Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::pointAt(const _Scalar& t) const$/;"	f	class:Eigen::ParametrizedLine
pointer	Eigen/src/Core/util/Memory.h	/^  typedef T*              pointer;$/;"	t	class:Eigen::aligned_allocator
pointer	Eigen/src/StlSupport/details.h	/^    typedef T*              pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
por	Eigen/src/Core/GenericPacketMath.h	/^por(const Packet& a, const Packet& b) { return a | b; }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd por    <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf por    <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d por<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f por<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f por<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d por<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(por(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(por<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vorrq_s32(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_or_si128(a,b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(por<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
potential	models/inverse_model.cpp	/^Real InverseProblem::potential(std::vector<Real> & params)$/;"	f	class:InverseProblem
potential	models/inverse_model.hpp	/^    Real potential(Real *x)$/;"	f	class:InverseProblem
potential	tools/random_variable.hpp	/^  virtual  Real potential(Real *x){};$/;"	f	class:RandomVariable
pow	Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<ExponentDerived>& exponents) $/;"	f	namespace:Eigen
pow	Eigen/src/Core/GlobalFunctions.h	/^  pow(const Scalar& x, const Eigen::ArrayBase<Derived>& exponents)$/;"	f	namespace:Eigen
pow	Eigen/src/Core/GlobalFunctions.h	/^  pow(const typename Derived::Scalar& x, const Eigen::ArrayBase<Derived>& exponents)$/;"	f	namespace:Eigen
pow	Eigen/src/Core/MathFunctions.h	/^inline typename internal::pow_impl<ScalarX,ScalarY>::result_type pow(const ScalarX& x, const ScalarY& y)$/;"	f	namespace:Eigen::numext
pow	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half pow(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
pow_impl	Eigen/src/Core/MathFunctions.h	/^struct pow_impl$/;"	s	namespace:Eigen::internal
pow_impl	Eigen/src/Core/MathFunctions.h	/^struct pow_impl<ScalarX,ScalarY, true>$/;"	s	namespace:Eigen::internal
powh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half powh(const Eigen::half& a, const Eigen::half& b) {$/;"	f
precision	Eigen/src/Core/IO.h	/^  int precision;$/;"	m	struct:Eigen::IOFormat
precomputed_alpha	methods/stabilized_methods.cpp	/^Real ROCK2::precomputed_alpha[maxs+1];$/;"	m	class:ROCK2	file:
precomputed_alpha	methods/stabilized_methods.hpp	/^    static Real precomputed_alpha[maxs+1];$/;"	m	class:ROCK2
precomputed_sigma	methods/stabilized_methods.cpp	/^Real ROCK2::precomputed_sigma[maxs+1];$/;"	m	class:ROCK2	file:
precomputed_sigma	methods/stabilized_methods.hpp	/^    static Real precomputed_sigma[maxs+1];$/;"	m	class:ROCK2
precomputed_tau	methods/stabilized_methods.cpp	/^Real ROCK2::precomputed_tau[maxs+1];$/;"	m	class:ROCK2	file:
precomputed_tau	methods/stabilized_methods.hpp	/^    static Real precomputed_tau[maxs+1];$/;"	m	class:ROCK2
preconditioner	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner& preconditioner() { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
preconditioner	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Preconditioner& preconditioner() const { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
predux	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux(const Packet& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) + vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) + vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_max_op
predux	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_min_op
predux	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_product_op
predux	Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sum_op
predux_downto4	Eigen/src/Core/GenericPacketMath.h	/^predux_downto4(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_downto4	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f predux_downto4<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_downto4	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet4d predux_downto4<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_downto4	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8f predux_downto4<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_downto4	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const DoublePacket<Packet>& predux_downto4(const DoublePacket<Packet> &a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_max(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_max<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_max<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_max<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_max<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_max<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpmaxq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_min(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_min<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_min<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_min<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_min<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_min<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpminq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_mul(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_mul<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_mul<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_mul<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_mul<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_mul<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) * vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) * vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/GenericPacketMath.h	/^preduxp(const Packet* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preduxp<Packet2cd>(const Packet2cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preduxp<Packet4cf>(const Packet4cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preduxp<Packet4d>(const Packet4d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preduxp<Packet8f>(const Packet8f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f preduxp<Packet16f>(const Packet16f*$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d preduxp<Packet8d>(const Packet8d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)        { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar> EIGEN_DEVICE_FUNC inline void prefetch(const Scalar* addr)$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> * addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> * addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { EIGEN_ARM_PREFETCH((double *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { EIGEN_ARM_PREFETCH((float *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>  (const float*    addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int32_t>(const int32_t*  addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *     addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void prefetch(int i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
prepare_chebychev_info	methods/stabilized_methods.cpp	/^void RKC::prepare_chebychev_info()$/;"	f	class:RKC
prerotate	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prescale	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::prescale(const Scalar& s)$/;"	f	class:Eigen::Transform
prescale	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
preshear	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::preshear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
pretranslate	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prev	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType prev ;  \/* previous column in degree list, if col is in a *\/$/;"	m	union:internal::colamd_col::__anon651
preverse	Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet preverse(const Packet& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preverse(const Packet2cd& a) {$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preverse(const Packet4cf& a) {$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preverse(const Packet4d& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preverse(const Packet8f& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f preverse(const Packet16f& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d preverse(const Packet8d& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a) { return vcombine_f64(vget_high_f64(a), vget_low_f64(a)); }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a) { return Packet2cf(_mm_castpd_ps(preverse(Packet2d(_mm_castps_pd(a.v))))); }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
print_matrix	Eigen/src/Core/IO.h	/^std::ostream & print_matrix(std::ostream & s, const Derived& _m, const IOFormat& fmt)$/;"	f	namespace:Eigen::internal
print_pos	methods/core_methods.cpp	/^void NumericalMethod::print_pos()$/;"	f	class:NumericalMethod
print_pos	methods/core_methods.cpp	/^void NumericalMethod::print_pos(Real *data){$/;"	f	class:NumericalMethod
prior_distribution	models/inverse_model.hpp	/^    std::vector<RandomVariable*> prior_distribution;$/;"	m	class:InverseProblem
problem	build/compare_schemes.py	/^    problem = sys.argv[1]$/;"	v
problem	build/plot_all_paths.py	/^    problem = sys.argv[1]$/;"	v
problem	build/study_err.py	/^    problem = sys.argv[1]$/;"	v
processRow	Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void processRow(const LhsEval& lhsEval, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha, Index i, Index col)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
process_command_line	tools/init.hpp	/^void process_command_line(int argc, char * argv[],Model*&model, StepIntegrator *&step_integrator, NumericalMethodFactory* &numerical_method_factory)$/;"	f
prod	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::prod() const$/;"	f	class:Eigen::DenseBase
prod	Eigen/src/Core/VectorwiseOp.h	/^    const ProdReturnType prod() const$/;"	f	class:Eigen::VectorwiseOp
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, LazyCoeffBasedProductMode, DenseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, Options>, ProductTag, LhsShape, RhsShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DenseShape, DiagonalShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DiagonalShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, HomogeneousShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, HomogeneousShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, DenseShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, SparseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.lhs(), xpr.rhs().diagonal().transpose()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.rhs(), xpr.lhs().diagonal()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, DiagonalShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, SparseShape, DiagonalShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparsePermutation.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, PermutationShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, SparseShape, PermutationShape >$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<Lhs, RhsView, DefaultProduct>, ProductTag, SparseShape, SparseSelfAdjointShape>$/;"	s	namespace:Eigen::internal
product_evaluator	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<LhsView, Rhs, DefaultProduct>, ProductTag, SparseSelfAdjointShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_promote_storage_type	Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,LhsSelfAdjoint,ConjugateLhs, RhsStorageOrder,RhsSelfAdjoint,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_size_category	Eigen/src/Core/GeneralProduct.h	/^template<int Size, int MaxSize> struct product_size_category$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,LhsIsTriangular,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,false,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,true,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix_trmm	Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^struct product_triangular_matrix_matrix_trmm :$/;"	s	namespace:Eigen::internal
product_type	Eigen/src/Core/GeneralProduct.h	/^template<typename Lhs, typename Rhs> struct product_type$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<int M>         struct product_type_selector<M, 1, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	Eigen/src/Core/GeneralProduct.h	/^template<int N>         struct product_type_selector<1, N, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
projection	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projective_transform_inverse	Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse$/;"	s	namespace:Eigen::internal
projective_transform_inverse	Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse<TransformType, Projective>$/;"	s	namespace:Eigen::internal
promote_index_type	Eigen/src/Core/util/XprHelper.h	/^struct promote_index_type$/;"	s	namespace:Eigen::internal
promote_scalar_arg	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg<S,T,false> : promote_scalar_arg_unsupported<S,T,typename NumTraits<S>::Literal> {};$/;"	s	namespace:Eigen::internal
promote_scalar_arg	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg<S,T,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<ExprScalar,T,PromotedType,false,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,PromotedType,ConvertibleToLiteral,false> {};$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,PromotedType,true,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,S,false,true> {};$/;"	s	namespace:Eigen::internal
pround	Eigen/src/Core/GenericPacketMath.h	/^Packet pround(const Packet& a) { using numext::round; return round(a); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pround<Packet4d>(const Packet4d& a) { return _mm256_round_pd(a, _MM_FROUND_CUR_DIRECTION); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pround<Packet8f>(const Packet8f& a) { return _mm256_round_ps(a, _MM_FROUND_CUR_DIRECTION); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return _mm_round_pd(a, 0); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a) { return _mm_round_ps(a, 0); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/GenericPacketMath.h	/^Packet prsqrt(const Packet& a) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d prsqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet16f prsqrt<Packet16f>(const Packet16f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^prsqrt<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^prsqrt<Packet8d>(const Packet8d& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 prsqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 prsqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 prsqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 prsqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
prune	Eigen/src/SparseCore/CompressedStorage.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::internal::CompressedStorage
prune	Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const KeepFunc& keep = KeepFunc())$/;"	f	class:Eigen::SparseMatrix
prune	Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseMatrix
prune	Eigen/src/SparseCore/SparseVector.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseVector
pruneL	Eigen/src/SparseLU/SparseLU_pruneL.h	/^void SparseLUImpl<Scalar,StorageIndex>::pruneL(const Index jcol, const IndexVector& perm_r, const Index pivrow, const Index nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
pruned	Eigen/src/SparseCore/SparseView.h	/^SparseMatrixBase<Derived>::pruned(const Scalar& reference,$/;"	f	class:Eigen::SparseMatrixBase
pscatter	Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pscatter(Scalar* to, const Packet& from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet2cd>(std::complex<double>* to, const Packet2cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet4cf>(std::complex<float>* to, const Packet4cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet4d>(double* to, const Packet4d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet8f>(float* to, const Packet8f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void pscatter<double, Packet8d>(double* to,$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void pscatter<float, Packet16f>(float* to,$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, double2>(double* to, const double2& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, float4>(float* to, const float4& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pscatter<Eigen::half, half2>(Eigen::half* to, const half2& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int32_t, Packet4i>(int32_t* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride EIGEN_UNUSED)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/GenericPacketMath.h	/^pset1(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pset1<Packet2cd>(const std::complex<double>& from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pset1<Packet4cf>(const std::complex<float>& from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pset1<Packet4d>(const double& from) { return _mm256_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pset1<Packet8f>(const float&  from) { return _mm256_set1_ps(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pset1<Packet8i>(const int&    from) { return _mm256_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pset1<Packet16f>(const float& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pset1<Packet16i>(const int& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pset1<Packet8d>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pset1<double2>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pset1<float4>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pset1<half2>(const Eigen::half& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) { return vdupq_n_f64(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return vdupq_n_f32(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int32_t&    from)   { return vdupq_n_s32(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps1(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&    from)$/;"	f	namespace:Eigen::internal
pset1	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)$/;"	f	namespace:Eigen::internal
pseudoEigenvalueMatrix	Eigen/src/Eigenvalues/EigenSolver.h	/^MatrixType EigenSolver<MatrixType>::pseudoEigenvalueMatrix() const$/;"	f	class:Eigen::EigenSolver
pseudoEigenvectors	Eigen/src/Eigenvalues/EigenSolver.h	/^    const MatrixType& pseudoEigenvectors() const$/;"	f	class:Eigen::EigenSolver
pseudoInverse	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const Inverse<CompleteOrthogonalDecomposition> pseudoInverse() const$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
pshiftleft	Eigen/src/Core/arch/AVX/MathFunctions.h	/^inline Packet8i pshiftleft(Packet8i v, int n)$/;"	f	namespace:Eigen::internal
pshiftright	Eigen/src/Core/arch/AVX/MathFunctions.h	/^inline Packet8f pshiftright(Packet8f v, int n)$/;"	f	namespace:Eigen::internal
psin	Eigen/src/Core/GenericPacketMath.h	/^Packet psin(const Packet& a) { using std::sin; return sin(a); }$/;"	f	namespace:Eigen::internal
psin	Eigen/src/Core/arch/AVX/MathFunctions.h	/^psin<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psin	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psin<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psinh	Eigen/src/Core/GenericPacketMath.h	/^Packet psinh(const Packet& a) { using std::sinh; return sinh(a); }$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/GenericPacketMath.h	/^Packet psqrt(const Packet& a) { using std::sqrt; return sqrt(a); }$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d psqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f psqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX/MathFunctions.h	/^psqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet16f psqrt<Packet16f>(const Packet16f& x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet8d psqrt<Packet8d>(const Packet8d& x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^psqrt<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AVX512/MathFunctions.h	/^psqrt<Packet8d>(const Packet8d& _x) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 psqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 psqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 psqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 psqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x) { return _mm_sqrt_pd(x); }$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x) { return _mm_sqrt_ps(x); }$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
psqrt	Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstore(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet8d& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<float>(float* to, const Packet16f& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<int>(int* to, const Packet16i& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<float>(float*   to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pstore<Eigen::half>(Eigen::half* to, const half2& from) {$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>  (float*    to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int32_t>(int32_t*  to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<__m128i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *     to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstore	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/GenericPacketMath.h	/^inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8i>(int* to, const int& a)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet16f>(float* to, const float& a) {$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet16i>(int* to, const int& a) {$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet8d>(double* to, const double& a) {$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstoret	Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void pstoret(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstoreu(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet8d& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<float>(float* to, const Packet16f& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<int>(int* to, const Packet16i& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pstoreu<Eigen::half>(Eigen::half* to, const half2& from) {$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>  (float*   to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int32_t>(int32_t* to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_si128(reinterpret_cast<__m128i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *     to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from) { pstore<double>(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*    to, const Packet4f& from) { pstore<float>(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*        to, const Packet4i& from) { pstore<int>(to, from); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/GenericPacketMath.h	/^psub(const Packet& a,$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd psub<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf psub<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d psub<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f psub<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f psub<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d psub<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 psub<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 psub<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 psub<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(psub<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return vsubq_f64(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vsubq_f32(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vsubq_s32(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a - b); }$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
psub	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a - b); }$/;"	f	namespace:Eigen::internal
ptan	Eigen/src/Core/GenericPacketMath.h	/^Packet ptan(const Packet& a) { using std::tan; return tan(a); }$/;"	f	namespace:Eigen::internal
ptanh	Eigen/src/Core/GenericPacketMath.h	/^Packet ptanh(const Packet& a) { using std::tanh; return tanh(a); }$/;"	f	namespace:Eigen::internal
ptanh	Eigen/src/Core/arch/AVX/MathFunctions.h	/^ptanh<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
ptanh	Eigen/src/Core/arch/SSE/MathFunctions.h	/^ptanh<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
ptr	Eigen/src/Core/util/Memory.h	/^  T* &ptr() { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptr	Eigen/src/Core/util/Memory.h	/^  const T* ptr() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptranspose	Eigen/src/Core/GenericPacketMath.h	/^ptranspose(PacketBlock<Packet,1>& \/*kernel*\/) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet2cd,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet4cf,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet4d,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,8>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet16f, 16>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet16f, 4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet8d, 4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet8d, 8>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet2cf,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<double2,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<float4,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^ptranspose(PacketBlock<half2,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/NEON/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/SSE/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet2cf,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
punpackp	Eigen/src/Core/arch/SSE/PacketMath.h	/^EIGEN_STRONG_INLINE void punpackp(Packet4f* vecs)$/;"	f	namespace:Eigen::internal
pushDownZero	Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::pushDownZero(Index z, Index f, Index l)$/;"	f	class:Eigen::RealQZ
push_back	Eigen/src/StlSupport/StdDeque.h	/^  void push_back(const value_type& x)$/;"	f	class:std::deque
push_back	Eigen/src/StlSupport/StdList.h	/^    void push_back(const value_type& x)$/;"	f	class:std::list
push_back	Eigen/src/StlSupport/StdVector.h	/^  void push_back(const value_type& x)$/;"	f	class:std::vector
push_front	Eigen/src/StlSupport/StdDeque.h	/^  void push_front(const value_type& x)$/;"	f	class:std::deque
pxor	Eigen/src/Core/GenericPacketMath.h	/^pxor(const Packet& a, const Packet& b) { return a ^ b; }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pxor   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pxor   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pxor<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pxor<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pxor<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pxor<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pxor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pxor<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return veorq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pxor<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
qnxnto	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.9.5/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^> struct qr_preconditioner_impl {};$/;"	s	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, QRPreconditioner, Case, false>$/;"	c	namespace:Eigen::internal
qr_preconditioner_should_do_anything	Eigen/src/SVD/JacobiSVD.h	/^struct qr_preconditioner_should_do_anything$/;"	s	namespace:Eigen::internal
quat_conj	Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived, typename Scalar> struct quat_conj$/;"	s	namespace:Eigen::internal
quat_conj	Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, double>$/;"	s	namespace:Eigen::internal
quat_conj	Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, float>$/;"	s	namespace:Eigen::internal
quat_product	Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived1, class Derived2, typename Scalar> struct quat_product$/;"	s	namespace:Eigen::internal
quat_product	Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, double>$/;"	s	namespace:Eigen::internal
quat_product	Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, float>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,3,3>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,4,1>$/;"	s	namespace:Eigen::internal
queryCacheSizes	Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_amd	Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel	Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_codes	Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_direct	Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryL1CacheSize	Eigen/src/Core/util/Memory.h	/^inline int queryL1CacheSize()$/;"	f	namespace:Eigen::internal
queryTopLevelCacheSize	Eigen/src/Core/util/Memory.h	/^inline int queryTopLevelCacheSize()$/;"	f	namespace:Eigen::internal
quiet_NaN	Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half quiet_NaN() {$/;"	f	struct:Eigen::NumTraits
quiet_NaN	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half quiet_NaN() { return Eigen::half_impl::raw_uint16_to_half(0x7e00); }$/;"	f	struct:std::numeric_limits
quiet_NaN	Eigen/src/Core/util/Meta.h	/^  static T quiet_NaN() { assert(false && "quiet_NaN not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
quiet_NaN	Eigen/src/Core/util/Meta.h	/^  static double quiet_NaN() { return CUDART_NAN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
quiet_NaN	Eigen/src/Core/util/Meta.h	/^  static float quiet_NaN() { return CUDART_NAN_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
r	build/plot_all_paths.py	/^            r=1.4$/;"	v
r	build/plot_all_paths.py	/^            r=2.0$/;"	v
r1	build/plot_dist_from_samples.py	/^    r1 = pd.read_csv("pf_distribution.txt")$/;"	v
r1	build/study_distribution.py	/^    r1 = pd.read_csv("distribution.txt")$/;"	v
r1	build/study_err.py	/^    r1 = pd.read_csv("{}\/err.txt".format(problem))$/;"	v
r1	build/study_mcmc.py	/^    r1 = pd.read_csv("mcmc_out.txt")$/;"	v
r_approximated	build/study_err.py	/^    r_approximated = pd.read_csv("{}\/approximation.txt".format(problem))$/;"	v
r_exact	build/plot_2d_solution.py	/^    r_exact = pd.read_csv("test.txt")$/;"	v
r_exact	build/study_err.py	/^    r_exact = pd.read_csv("{}\/exact.txt".format(problem))$/;"	v
r_exact	build/study_err.py	/^    r_exact = r_exact.reindex(r_exact.index.union(r_approximated.index),method="ffill")$/;"	v
r_interp	build/study_err.py	/^    r_interp = r_exact$/;"	v
r_plots	build/compare_schemes.py	/^    r_plots = []$/;"	v
r_plots	build/plot_all_paths.py	/^    r_plots=[]$/;"	v
r_plots	build/study_err.py	/^    r_plots=[] $/;"	v
rabs	config.h	/^inline Real rabs(Real a) { return a>0? a:-a;}$/;"	f
radix	Eigen/src/Core/arch/CUDA/Half.h	/^  static const int radix = 2;$/;"	m	struct:std::numeric_limits
rand_var	mcmc/mala.hpp	/^    RandomVariable* rand_var;$/;"	m	class:MALA_Sampler
rand_var	mcmc/pcn.hpp	/^    InverseProblem* rand_var;$/;"	m	class:PCN_Sampler
rand_var	mcmc/phmc.hpp	/^    RandomVariable* rand_var;$/;"	m	class:PHMC_Sampler
rand_var	tools/mcmc.hpp	/^    RandomVariable* rand_var;$/;"	m	class:MCMC_Sampler
random	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random()$/;"	f	namespace:Eigen::internal
random	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
random_default_impl	Eigen/src/Core/MathFunctions.h	/^struct random_default_impl {};$/;"	s	namespace:Eigen::internal
random_default_impl	Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
random_default_impl	Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
random_default_impl	Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
random_default_impl	Eigen/src/Core/arch/CUDA/Half.h	/^struct random_default_impl<half, false, false>$/;"	s	namespace:Eigen::internal
random_impl	Eigen/src/Core/MathFunctions.h	/^struct random_impl : random_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
random_impl	Eigen/src/Core/MathFunctions.h	/^template<> struct random_impl<bool>$/;"	s	namespace:Eigen::internal
random_retval	Eigen/src/Core/MathFunctions.h	/^struct random_retval$/;"	s	namespace:Eigen::internal
rank	Eigen/src/LU/FullPivLU.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivLU
rank	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::ColPivHouseholderQR
rank	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index rank() const { return m_cpqr.rank(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
rank	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivHouseholderQR
rank	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index rank() const$/;"	f	class:Eigen::SPQR
rank	Eigen/src/SVD/SVDBase.h	/^  inline Index rank() const$/;"	f	class:Eigen::SVDBase
rank	Eigen/src/SparseQR/SparseQR.h	/^    Index rank() const$/;"	f	class:Eigen::SparseQR
rank	Eigen/src/misc/Image.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::image_retval_base
rank	Eigen/src/misc/Kernel.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::kernel_retval_base
rankUpdate	Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::rankUpdate(const MatrixBase<Derived>& w, const typename LDLT<MatrixType,_UpLo>::RealScalar& sigma)$/;"	f	class:Eigen::LDLT
rankUpdate	Eigen/src/Cholesky/LLT.h	/^  static Index rankUpdate(MatrixType& mat, const VectorType& vec, const RealScalar& sigma)$/;"	f	struct:Eigen::internal::llt_inplace
rankUpdate	Eigen/src/Cholesky/LLT.h	/^LLT<_MatrixType,_UpLo> LLT<_MatrixType,_UpLo>::rankUpdate(const VectorType& v, const RealScalar& sigma)$/;"	f	class:Eigen::LLT
rankUpdate	Eigen/src/Core/products/SelfadjointProduct.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	Eigen/src/Core/products/SelfadjointRank2Update.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const MatrixBase<DerivedV>& v, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<MatrixType,Mode>::rankUpdate(const SparseMatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SparseSelfAdjointView
rawMatrix	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const CholMatrixType rawMatrix() const {$/;"	f	class:Eigen::SimplicialCholesky
raw_uint16_to_half	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC __half raw_uint16_to_half(unsigned short x) {$/;"	f	namespace:Eigen::half_impl
rcond	Eigen/src/Cholesky/LDLT.h	/^    RealScalar rcond() const$/;"	f	class:Eigen::LDLT
rcond	Eigen/src/Cholesky/LLT.h	/^    RealScalar rcond() const$/;"	f	class:Eigen::LLT
rcond	Eigen/src/LU/FullPivLU.h	/^    inline RealScalar rcond() const$/;"	f	class:Eigen::FullPivLU
rcond	Eigen/src/LU/PartialPivLU.h	/^    inline RealScalar rcond() const$/;"	f	class:Eigen::PartialPivLU
rcond_compute_sign	Eigen/src/Core/ConditionEstimator.h	/^struct rcond_compute_sign {$/;"	s	namespace:Eigen::internal
rcond_compute_sign	Eigen/src/Core/ConditionEstimator.h	/^struct rcond_compute_sign<Vector, Vector, false> {$/;"	s	namespace:Eigen::internal
rcond_estimate_helper	Eigen/src/Core/ConditionEstimator.h	/^rcond_estimate_helper(typename Decomposition::RealScalar matrix_norm, const Decomposition& dec)$/;"	f	namespace:Eigen::internal
rcond_invmatrix_L1_norm_estimate	Eigen/src/Core/ConditionEstimator.h	/^typename Decomposition::RealScalar rcond_invmatrix_L1_norm_estimate(const Decomposition& dec)$/;"	f	namespace:Eigen::internal
real	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)$/;"	f	namespace:Eigen::numext
real	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() const { return RealReturnType(derived()); }$/;"	f
real	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() { return NonConstRealReturnType(derived()); }$/;"	f
real_2x2_jacobi_svd	Eigen/src/misc/RealSvd2x2.h	/^void real_2x2_jacobi_svd(const MatrixType& matrix, Index p, Index q,$/;"	f	namespace:Eigen::internal
real_default_impl	Eigen/src/Core/MathFunctions.h	/^struct real_default_impl$/;"	s	namespace:Eigen::internal
real_default_impl	Eigen/src/Core/MathFunctions.h	/^struct real_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
real_impl	Eigen/src/Core/MathFunctions.h	/^struct real_impl<std::complex<T> >$/;"	s	namespace:Eigen::internal
real_impl	Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct real_impl : real_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
real_ref	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref	Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref_impl	Eigen/src/Core/MathFunctions.h	/^struct real_ref_impl$/;"	s	namespace:Eigen::internal
real_ref_retval	Eigen/src/Core/MathFunctions.h	/^struct real_ref_retval$/;"	s	namespace:Eigen::internal
real_retval	Eigen/src/Core/MathFunctions.h	/^struct real_retval$/;"	s	namespace:Eigen::internal
reallocate	Eigen/src/SparseCore/AmbiVector.h	/^    void reallocate(Index size)$/;"	f	class:Eigen::internal::AmbiVector
reallocate	Eigen/src/SparseCore/CompressedStorage.h	/^    inline void reallocate(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reallocateSparse	Eigen/src/SparseCore/AmbiVector.h	/^    void reallocateSparse()$/;"	f	class:Eigen::internal::AmbiVector
rebind	Eigen/src/Core/util/Memory.h	/^  struct rebind$/;"	s	class:Eigen::aligned_allocator
rebind	Eigen/src/StlSupport/details.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator_indirection
recalph	methods/rock2_static_coefficients.cpp	/^Real ROCK2::recalph[46]={1.029217577908589,1.171142615787386,1.289178731889639,1.370039721728061,1.430279163156856,1.478209340802438,1.516334027924159,1.547598809712693,1.573716033722604,1.595931553195606,$/;"	m	class:ROCK2	file:
recalph	methods/stabilized_methods.hpp	/^    static Real recalph[46];$/;"	m	class:ROCK2
recf	methods/rock2_static_coefficients.cpp	/^Real ROCK2::recf[4476]={0.1794612899156781,0.09326607661089206,0.1268473641290642,0.02103378190528467,0.0578662712551911,0.07776456841673993,0.02157791817707098,0.09528922876588625,0.08723622960881584,0.03957407527591189,$/;"	m	class:ROCK2	file:
recf	methods/stabilized_methods.hpp	/^    static Real recf[4476];$/;"	m	class:ROCK2
recf2	methods/rock2_static_coefficients.cpp	/^Real ROCK2::recf2[184]={0.0001461773410303843,0.9609306188294088,0.0001462237569103017,0.961544768057688,0.0001212611744044664,0.9643727851516277,0.000121293027834231,0.9648823789107062,0.3005488243231985,0.03229561778843724,0.6512099103020813,0.6392740828523978,0.1881787048433069,0.1294908679614229,0.3692922899497312,0.7942384047165153,0.1266454719228368,0.2166410891457194,$/;"	m	class:ROCK2	file:
recf2	methods/stabilized_methods.hpp	/^    static Real recf2[184];$/;"	m	class:ROCK2
reconstructedMatrix	Eigen/src/Cholesky/LDLT.h	/^MatrixType LDLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LDLT
reconstructedMatrix	Eigen/src/Cholesky/LLT.h	/^MatrixType LLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LLT
reconstructedMatrix	Eigen/src/LU/FullPivLU.h	/^MatrixType FullPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::FullPivLU
reconstructedMatrix	Eigen/src/LU/PartialPivLU.h	/^MatrixType PartialPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::PartialPivLU
reduceToTriangularForm	Eigen/src/Eigenvalues/ComplexSchur.h	/^void ComplexSchur<MatrixType>::reduceToTriangularForm(bool computeU)$/;"	f	class:Eigen::ComplexSchur
redux	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::redux(const Func& func) const$/;"	f	class:Eigen::DenseBase
redux	Eigen/src/Core/VectorwiseOp.h	/^    redux(const BinaryOp& func = BinaryOp()) const$/;"	f	class:Eigen::VectorwiseOp
redux	Eigen/src/Geometry/Homogeneous.h	/^    redux(const Func& func) const$/;"	f	class:Eigen::Homogeneous
redux_evaluator	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC explicit redux_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::redux_evaluator
redux_evaluator	Eigen/src/Core/Redux.h	/^class redux_evaluator$/;"	c	namespace:Eigen::internal
redux_impl	Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, SliceVectorizedTraversal, Unrolling>$/;"	s	namespace:Eigen::internal
redux_impl	Eigen/src/Core/Redux.h	/^struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	Eigen/src/Core/Redux.h	/^struct redux_novec_unroller$/;"	s	namespace:Eigen::internal
redux_novec_unroller	Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 0>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
redux_traits	Eigen/src/Core/Redux.h	/^struct redux_traits$/;"	s	namespace:Eigen::internal
redux_vec_unroller	Eigen/src/Core/Redux.h	/^struct redux_vec_unroller$/;"	s	namespace:Eigen::internal
redux_vec_unroller	Eigen/src/Core/Redux.h	/^struct redux_vec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
reference	Eigen/src/Core/util/Memory.h	/^  typedef T&              reference;$/;"	t	class:Eigen::aligned_allocator
reference	Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar reference;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
reference	Eigen/src/SparseCore/SparseView.h	/^  Scalar reference() const { return m_reference; }$/;"	f	class:Eigen::SparseView
reference	Eigen/src/StlSupport/details.h	/^    typedef T&              reference;$/;"	t	class:Eigen::aligned_allocator_indirection
relax	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index relax; \/\/ To control degree of relaxing supernodes. If the number of nodes (columns) $/;"	m	struct:Eigen::internal::perfvalues
relax_snode	Eigen/src/SparseLU/SparseLU_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_const	Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	s	namespace:Eigen::internal
remove_const	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	s	namespace:Eigen::internal
remove_pointer	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s	namespace:Eigen::internal
replicate	Eigen/src/Core/DenseBase.h	/^    const Replicate<Derived, Dynamic, Dynamic> replicate(Index rowFactor, Index colFactor) const$/;"	f	class:Eigen::DenseBase
replicate	Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate() const$/;"	f	class:Eigen::DenseBase
replicate	Eigen/src/Core/Replicate.h	/^VectorwiseOp<ExpressionType,Direction>::replicate(Index factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	Eigen/src/Core/VectorwiseOp.h	/^    replicate(Index factor = Factor) const$/;"	f	class:Eigen::VectorwiseOp
required_alignment	Eigen/src/Core/Matrix.h	/^      required_alignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::traits::__anon450
res	Eigen/src/Core/Visitor.h	/^  Scalar res;$/;"	m	struct:Eigen::internal::coeff_visitor
reserve	Eigen/src/SparseCore/CompressedStorage.h	/^    void reserve(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reserve	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(Index reserveSize)$/;"	f	class:Eigen::SparseMatrix
reserve	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif =$/;"	f	class:Eigen::SparseMatrix
reserve	Eigen/src/SparseCore/SparseVector.h	/^    inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }$/;"	f	class:Eigen::SparseVector
reserveInnerVectors	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserveInnerVectors(const SizesType& reserveSizes)$/;"	f	class:Eigen::SparseMatrix
resize	Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.resize(newSize); }$/;"	f	class:Eigen::ArrayWrapper
resize	Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.resize(newSize); }$/;"	f	class:Eigen::MatrixWrapper
resize	Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.resize(rows,cols); }$/;"	f	class:Eigen::ArrayWrapper
resize	Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.resize(rows,cols); }$/;"	f	class:Eigen::MatrixWrapper
resize	Eigen/src/Core/DenseBase.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::DenseBase
resize	Eigen/src/Core/DenseBase.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DenseStorage.h	/^    void resize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	Eigen/src/Core/DiagonalMatrix.h	/^    inline void resize(Index size) { m_diagonal.resize(size); }$/;"	f	class:Eigen::DiagonalMatrix
resize	Eigen/src/Core/PermutationMatrix.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::PermutationBase
resize	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
resize	Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PlainObjectBase
resize	Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	Eigen/src/Core/Transpose.h	/^    void resize(Index nrows, Index ncols) {$/;"	f	class:Eigen::Transpose
resize	Eigen/src/Core/Transpositions.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::TranspositionsBase
resize	Eigen/src/Core/TriangularMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::TriangularBase
resize	Eigen/src/SparseCore/AmbiVector.h	/^    void resize(Index size)$/;"	f	class:Eigen::internal::AmbiVector
resize	Eigen/src/SparseCore/CompressedStorage.h	/^    void resize(Index size, double reserveSizeFactor = 0)$/;"	f	class:Eigen::internal::CompressedStorage
resize	Eigen/src/SparseCore/SparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
resize	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseSelfAdjointView
resize	Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::SparseVector
resize	Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseVector
resize	Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size)$/;"	f	class:std::deque
resize	Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::deque
resize	Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size)$/;"	f	class:std::list
resize	Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size, const value_type& x)$/;"	f	class:std::list
resize	Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size)$/;"	f	class:std::vector
resize	Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::vector
resizeLike	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)$/;"	f	class:Eigen::PlainObjectBase
resizeNonZeros	Eigen/src/SparseCore/SparseMatrix.h	/^    void resizeNonZeros(Index size)$/;"	f	class:Eigen::SparseMatrix
resizeNonZeros	Eigen/src/SparseCore/SparseVector.h	/^    void resizeNonZeros(Index size) { m_data.resize(size); }$/;"	f	class:Eigen::SparseVector
resize_if_allowed	Eigen/src/Core/AssignEvaluator.h	/^void resize_if_allowed(DstXprType &dst, const SrcXprType& src, const Functor &\/*func*\/)$/;"	f	namespace:Eigen::internal
resize_if_allowed	Eigen/src/Core/AssignEvaluator.h	/^void resize_if_allowed(DstXprType &dst, const SrcXprType& src, const internal::assign_op<T1,T2> &\/*func*\/)$/;"	f	namespace:Eigen::internal
restart	Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::restart()$/;"	f	class:Eigen::internal::AmbiVector
result_of	Eigen/src/Core/functors/BinaryFunctors.h	/^struct result_of<scalar_cmp_op<LhsScalar, RhsScalar, Cmp>(LhsScalar,RhsScalar)> {$/;"	s	namespace:Eigen::internal
result_of	Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType)> {$/;"	s	namespace:Eigen::internal
result_of	Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1)> {$/;"	s	namespace:Eigen::internal
result_of	Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1,ArgType2)> {$/;"	s	namespace:Eigen::internal
result_of	Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of { };$/;"	s	namespace:Eigen::internal
result_of	Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of {$/;"	s	namespace:Eigen::internal
result_type	Eigen/src/Core/MathFunctions.h	/^  typedef ScalarX result_type;$/;"	t	struct:Eigen::internal::pow_impl
result_type	Eigen/src/Core/MathFunctions.h	/^  typedef typename ScalarBinaryOpTraits<ScalarX,ScalarY,internal::scalar_pow_op<ScalarX,ScalarY> >::ReturnType result_type;$/;"	t	struct:Eigen::internal::pow_impl
result_type	Eigen/src/Core/VectorwiseOp.h	/^                   >::type  result_type;$/;"	t	struct:Eigen::internal::member_redux
result_type	Eigen/src/Core/VectorwiseOp.h	/^  typedef ResultType result_type;$/;"	t	struct:Eigen::internal::member_lpnorm
result_type	Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_difference_op
result_type	Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_sum_op
result_type	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  typedef Eigen::half result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  typedef float result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_cmp_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::result_type          result_type;$/;"	t	struct:Eigen::internal::bind1st_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::result_type          result_type;$/;"	t	struct:Eigen::internal::bind2nd_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_conj_product_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_conj_product_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_difference_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_difference_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_max_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_max_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_min_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_min_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_product_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_quotient_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_sum_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_sum_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<Scalar,Exponent,scalar_pow_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_pow_op
result_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_quotient_op<LhsScalar,RhsScalar>::result_type result_type;$/;"	t	struct:Eigen::internal::functor_traits
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef NewType result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isfinite_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isinf_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isnan_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::abs_knowing_score
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs2_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_arg_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_ref_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_op
result_type	Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_ref_op
ret	Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon237
ret	Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon239
ret	Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::InnerStrideAtCompileTime };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon236
ret	Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::OuterStrideAtCompileTime };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon238
ret	Eigen/src/Core/GeneralProduct.h	/^    ret = selector::ret$/;"	e	enum:Eigen::internal::product_type::__anon590
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon595
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon603
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon602
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon604
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon597
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon601
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon606
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon605
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon611
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon614
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon609
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon612
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon600
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon599
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon607
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon596
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon610
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon613
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon608
ret	Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon598
ret	Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon594
ret	Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon591
ret	Eigen/src/Core/GeneralProduct.h	/^template<int M>         struct product_type_selector<M, 1, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon592
ret	Eigen/src/Core/GeneralProduct.h	/^template<int N>         struct product_type_selector<1, N, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon593
ret	Eigen/src/Core/Transpose.h	/^  enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon440
ret	Eigen/src/Core/Transpose.h	/^  enum { ret = bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed };$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon439
ret	Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = !has_binary_operator<Functor>::value }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon401
ret	Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { ret = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0 };$/;"	e	enum:Eigen::internal::has_direct_access::__anon133
ret	Eigen/src/Core/util/Meta.h	/^    enum { ret = meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::internal::__anon215
ret	Eigen/src/Core/util/Meta.h	/^  enum { ret = A*K };$/;"	e	enum:Eigen::meta_least_common_multiple::__anon218
ret	Eigen/src/Core/util/Meta.h	/^  enum { ret = meta_least_common_multiple<A,B,K+1>::ret };$/;"	e	enum:Eigen::meta_least_common_multiple::__anon217
ret	Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:Eigen::meta_sqrt::__anon216
ret	Eigen/src/Householder/Householder.h	/^    ret = n==Dynamic ? n : n-1$/;"	e	enum:Eigen::internal::decrement_size::__anon124
ret	Eigen/src/SVD/JacobiSVD.h	/^         ret = !( (QRPreconditioner == NoQRPreconditioner) ||$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon623
ret	Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
reverse	Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC ConstReverseReturnType reverse() const$/;"	f	class:Eigen::DenseBase
reverse	Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse()$/;"	f	class:Eigen::DenseBase
reverse	Eigen/src/Core/VectorwiseOp.h	/^    ReverseReturnType reverse()$/;"	f	class:Eigen::VectorwiseOp
reverse	Eigen/src/Core/VectorwiseOp.h	/^    const ConstReverseReturnType reverse() const$/;"	f	class:Eigen::VectorwiseOp
reverseInPlace	Eigen/src/Core/Reverse.h	/^inline void DenseBase<Derived>::reverseInPlace()$/;"	f	class:Eigen::DenseBase
reverseInPlace	Eigen/src/Core/Reverse.h	/^void VectorwiseOp<ExpressionType,Direction>::reverseInPlace()$/;"	f	class:Eigen::VectorwiseOp
reverse_packet	Eigen/src/Core/Reverse.h	/^    typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;$/;"	t	class:Eigen::Reverse
reverse_packet_cond	Eigen/src/Core/Reverse.h	/^template<typename PacketType, bool ReversePacket> struct reverse_packet_cond$/;"	s	namespace:Eigen::internal
reverse_packet_cond	Eigen/src/Core/Reverse.h	/^template<typename PacketType> struct reverse_packet_cond<PacketType,false>$/;"	s	namespace:Eigen::internal
rho	models/models.hpp	/^    Real sigma,rho,beta;$/;"	m	class:Lorenz
rhs	Eigen/src/Core/CwiseBinaryOp.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CwiseBinaryOp
rhs	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	class:Eigen::Product
rhs	Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs() const { return m_rhs; }$/;"	f	class:Eigen::Solve
rhs	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs()   const { return m_rhs; }$/;"	f	class:Eigen::SolveWithGuess
rightCols	Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr rightCols(Index n)$/;"	f
rightCols	Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr rightCols(Index n) const$/;"	f
rightCols	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type rightCols(Index n = N) const$/;"	f
rightCols	Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type rightCols(Index n = N)$/;"	f
rightHouseholderSequence	Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType,OnTheRight> rightHouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
rmax	config.h	/^inline Real rmax(Real a, Real b) { return a>b? a:b;}$/;"	f
rmin	config.h	/^inline Real rmin(Real a, Real b) { return a<b? a:b;}$/;"	f
rotate	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotation	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotation() const$/;"	f	class:Eigen::Transform
rotation_base_generic_product_selector	Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector< RotationDerived, DiagonalMatrix<Scalar,Dim,MaxDim>, false >$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,MatrixType,false>$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,OtherVectorType,true>$/;"	s	namespace:Eigen::internal
round	Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(round, Scalar) round(const Scalar& x)$/;"	f	namespace:Eigen::numext
round	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^round() const$/;"	f
round_error	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half round_error() { return Eigen::half(0.5); }$/;"	f	struct:std::numeric_limits
round_impl	Eigen/src/Core/MathFunctions.h	/^  struct round_impl {$/;"	s	namespace:Eigen::internal
round_impl	Eigen/src/Core/MathFunctions.h	/^  struct round_impl$/;"	s	namespace:Eigen::internal
round_retval	Eigen/src/Core/MathFunctions.h	/^struct round_retval$/;"	s	namespace:Eigen::internal
round_style	Eigen/src/Core/arch/CUDA/Half.h	/^  static const std::float_round_style round_style = std::round_to_nearest;$/;"	m	struct:std::numeric_limits
row	Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Traits::RowsAtCompileTime$/;"	e	enum:Eigen::internal::all_unroller::__anon580
row	Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Traits::RowsAtCompileTime$/;"	e	enum:Eigen::internal::any_unroller::__anon581
row	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index row() const             { return m_iter.row(); }$/;"	f	class:Eigen::InnerIterator
row	Eigen/src/Core/CoreIterators.h	/^  inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::inner_iterator_selector
row	Eigen/src/Core/TriangularMatrix.h	/^    row = (UnrollCount-1) % DstXprType::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon269
row	Eigen/src/Core/Visitor.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::visitor_impl::__anon247
row	Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
row	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return EvalIterator::row()   - m_block.startRow(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
row	Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return IsRowMajor ? 0 : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
row	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer.value() : index(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
row	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer.value() : index(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
row	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return IsRowMajor ? m_lhsIter.outer() : m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return IsRowMajor ? m_rhsIter.outer() : m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_lhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_rhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index row()   const { return NeedToTranspose ? m_outer : LhsIterator::index(); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index row() const    { return SparseXprType::IsRowMajor ? m_sparseIter.outer() : m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseTranspose.h	/^      Index row() const { return EvalIterator::col(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& row() const { return m_row; }$/;"	f	class:Eigen::Triplet
row	Eigen/src/SparseCore/SparseView.h	/^        inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index row() const { return index(); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
row	Eigen/src/plugins/BlockMethods.h	/^inline ConstRowXpr row(Index i) const$/;"	f
row	Eigen/src/plugins/BlockMethods.h	/^inline RowXpr row(Index i)$/;"	f
rowIndex	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndex()  { return m_rowind; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndex	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndex() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexByOuterInner	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rowIndexByOuterInner	Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
rowIndexPtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndexPtr() { return m_rowind_colptr; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexPtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowOffset	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value() > 0 ? 0 : -m_index.value(); }$/;"	f	struct:Eigen::internal::evaluator
rowOffset	Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
rowPrefix	Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSeparator	Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSpacer	Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowStride	Eigen/src/Core/CoreEvaluators.h	/^  inline Index rowStride() const { return XprType::IsRowMajor ? m_outerStride.value() : m_innerStride.value(); }$/;"	f	struct:Eigen::internal::mapbase_evaluator
rowStride	Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index rowStride() const$/;"	f	class:Eigen::DenseCoeffsBase
rowSuffix	Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
row_major_bit	Eigen/src/Core/Matrix.h	/^      row_major_bit = _Options&RowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon450
rowblk	Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index rowblk; \/\/ The minimum row dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
rows	Eigen/src/Cholesky/LDLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LDLT
rows	Eigen/src/Cholesky/LLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LLT
rows	Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex rows() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
rows	Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ArrayWrapper
rows	Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::MatrixWrapper
rows	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index rows() const        { return m_dstExpr.rows(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rows	Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrix
rows	Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
rows	Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
rows	Eigen/src/Core/CoreEvaluators.h	/^  Index rows() const $/;"	f	class:Eigen::internal::EvalToTemp
rows	Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseBinaryOp
rows	Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
rows	Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseTernaryOp
rows	Eigen/src/Core/CwiseUnaryOp.h	/^    Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::CwiseUnaryOp
rows	Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::CwiseUnaryView
rows	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows() const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index rows(void) {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	Eigen/src/Core/Diagonal.h	/^    inline Index rows() const$/;"	f	class:Eigen::Diagonal
rows	Eigen/src/Core/DiagonalMatrix.h	/^    inline Index rows() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
rows	Eigen/src/Core/EigenBase.h	/^  inline Index rows() const { return derived().rows(); }$/;"	f	struct:Eigen::EigenBase
rows	Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ForceAlignedAccess
rows	Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::Inverse
rows	Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::MapBase
rows	Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::NestByValue
rows	Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
rows	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }$/;"	f	class:Eigen::PlainObjectBase
rows	Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::Product
rows	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::redux_evaluator
rows	Eigen/src/Core/Replicate.h	/^    inline Index rows() const { return m_matrix.rows() * m_rowFactor.value(); }$/;"	f	class:Eigen::Replicate
rows	Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return static_cast<const Derived*>(this)->rows(); }$/;"	f	class:Eigen::ReturnByValue
rows	Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Reverse
rows	Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index rows() const { return m_condition.rows(); }$/;"	f	class:Eigen::Select
rows	Eigen/src/Core/SelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfAdjointView
rows	Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::Solve
rows	Eigen/src/Core/SolveTriangular.h	/^  inline Index rows() const { return m_rhs.rows(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
rows	Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transpose
rows	Eigen/src/Core/Transpositions.h	/^    Index rows() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
rows	Eigen/src/Core/Transpositions.h	/^    Index rows() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
rows	Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::TriangularBase
rows	Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::TriangularView
rows	Eigen/src/Core/VectorwiseOp.h	/^    Index rows() const { return (Direction==Vertical   ? 1 : m_matrix.rows()); }$/;"	f	class:Eigen::PartialReduxExpr
rows	Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::visitor_evaluator
rows	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index rows() const { return m_hess.packedMatrix().rows(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
rows	Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
rows	Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.rows() + (int(Direction)==Vertical   ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
rows	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
rows	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
rows	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return int(Mode)==int(Projective) ? m_matrix.cols() : (m_matrix.cols()-1); }$/;"	f	class:Eigen::Transform
rows	Eigen/src/Householder/HouseholderSequence.h	/^    Index rows() const { return Side==OnTheLeft ? m_vectors.rows() : m_vectors.cols(); }$/;"	f	class:Eigen::HouseholderSequence
rows	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index rows() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
rows	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    Index rows() const { return m_L.rows(); }$/;"	f	class:Eigen::IncompleteCholesky
rows	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLUT
rows	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index rows() const { return matrix().rows(); }$/;"	f	class:Eigen::IterativeSolverBase
rows	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::SolveWithGuess
rows	Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::FullPivLU
rows	Eigen/src/LU/PartialPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::PartialPivLU
rows	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PastixBase
rows	Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
rows	Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::ColPivHouseholderQR
rows	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index rows() const { return m_cpqr.rows(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
rows	Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::FullPivHouseholderQR
rows	Eigen/src/QR/FullPivHouseholderQR.h	/^  Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
rows	Eigen/src/QR/HouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::HouseholderQR
rows	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index rows() const {return m_rows; }$/;"	f	class:Eigen::SPQR
rows	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index rows() const { return m_transpose ? m_spqr.rows() : m_spqr.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
rows	Eigen/src/SVD/SVDBase.h	/^  inline Index rows() const { return m_rows; }$/;"	f	class:Eigen::SVDBase
rows	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
rows	Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
rows	Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
rows	Eigen/src/SparseCore/SparseBlock.h	/^    inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
rows	Eigen/src/SparseCore/SparseMap.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
rows	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
rows	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::SparseMatrixBase
rows	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSelfAdjointView
rows	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
rows	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }$/;"	f	class:Eigen::SparseVector
rows	Eigen/src/SparseCore/SparseView.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseView
rows	Eigen/src/SparseLU/SparseLU.h	/^    inline Index rows() const { return m_mat.rows(); }$/;"	f	class:Eigen::SparseLU
rows	Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
rows	Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
rows	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index rows() { return m_row; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rows	Eigen/src/SparseQR/SparseQR.h	/^    inline Index rows() const { return m_pmat.rows(); }$/;"	f	class:Eigen::SparseQR
rows	Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
rows	Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_transpose ? m_qr.rows() : m_qr.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
rows	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SuperLUBase
rows	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index rows() const { return mp_matrix.rows(); }$/;"	f	class:Eigen::UmfPackLU
rows	Eigen/src/misc/Image.h	/^  inline Index rows() const { return m_dec.rows(); }$/;"	f	struct:Eigen::internal::image_retval_base
rows	Eigen/src/misc/Kernel.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::kernel_retval_base
rowsPermutation	Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& rowsPermutation() const$/;"	f	class:Eigen::SparseLU
rowsTranspositions	Eigen/src/QR/FullPivHouseholderQR.h	/^    const IntDiagSizeVectorType& rowsTranspositions() const$/;"	f	class:Eigen::FullPivHouseholderQR
rows_select	Eigen/src/Core/GeneralProduct.h	/^    rows_select = product_size_category<Rows,MaxRows>::value,$/;"	e	enum:Eigen::internal::product_type::__anon589
rowwise	Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstRowwiseReturnType rowwise() const {$/;"	f	class:Eigen::DenseBase
rowwise	Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise()$/;"	f	class:Eigen::DenseBase
rsqrt	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^rsqrt() const$/;"	f
run	Eigen/src/CholmodSupport/CholmodSupport.h	/^  static void run(CholmodType& mat) {$/;"	f	struct:Eigen::internal::cholmod_configure_matrix
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel& kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index, Index) {}$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static void EIGEN_STRONG_INLINE run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_DONT_INLINE void run(Kernel &kernel,$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,SrcScalarType> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,SrcScalarType> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived & \/*mat*\/) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::all_unroller
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &\/*mat*\/) { return true; }$/;"	f	struct:Eigen::internal::all_unroller
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::all_unroller
run	Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::any_unroller
run	Eigen/src/Core/ConditionEstimator.h	/^  static inline Vector run(const Vector& v) {$/;"	f	struct:Eigen::internal::rcond_compute_sign
run	Eigen/src/Core/CwiseNullaryOp.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& m)$/;"	f	struct:Eigen::internal::setIdentity_impl
run	Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived& m)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived&)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/Dot.h	/^  static inline RealScalar run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	Eigen/src/Core/Dot.h	/^  static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)$/;"	f	struct:Eigen::internal::dot_nocheck
run	Eigen/src/Core/Dot.h	/^  static inline typename NumTraits<typename traits<Derived>::Scalar>::Real run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isApprox_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isApprox_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	Eigen/src/Core/GeneralProduct.h	/^  static inline void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_selector
run	Eigen/src/Core/GeneralProduct.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_selector
run	Eigen/src/Core/GenericPacketMath.h	/^  static inline void run(PacketType&, const PacketType&) {}$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/IO.h	/^  static inline int run()$/;"	f	struct:Eigen::internal::significant_decimals_impl
run	Eigen/src/Core/MathFunctions.h	/^    static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_default_impl
run	Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_impl
run	Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::round_impl
run	Eigen/src/Core/MathFunctions.h	/^  static EIGEN_DEVICE_FUNC inline ScalarX run(ScalarX x, ScalarY y)$/;"	f	struct:Eigen::internal::pow_impl
run	Eigen/src/Core/MathFunctions.h	/^  static EIGEN_DEVICE_FUNC inline result_type run(const ScalarX& x, const ScalarY& y)$/;"	f	struct:Eigen::internal::pow_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline NewType run(const OldType& x)$/;"	f	struct:Eigen::internal::cast_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl_default
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::hypot_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run()$/;"	f	struct:Eigen::internal::random_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::conj_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::log1p_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline T run(const std::complex<T>& x)$/;"	f	struct:Eigen::internal::imag_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline T run(const std::complex<T>& x)$/;"	f	struct:Eigen::internal::real_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline bool run()$/;"	f	struct:Eigen::internal::random_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	Eigen/src/Core/MathFunctions.h	/^  static inline const Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	Eigen/src/Core/NumTraits.h	/^  static int run() { return 0; }$/;"	f	struct:Eigen::internal::default_digits10_impl
run	Eigen/src/Core/NumTraits.h	/^  static int run() { return std::numeric_limits<T>::digits10; }$/;"	f	struct:Eigen::internal::default_digits10_impl
run	Eigen/src/Core/NumTraits.h	/^  static int run() {$/;"	f	struct:Eigen::internal::default_digits10_impl
run	Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index, Index)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	Eigen/src/Core/PlainObjectBase.h	/^  static inline void run(MatrixTypeA& a, MatrixTypeB& b)$/;"	f	struct:Eigen::internal::matrix_swap_impl
run	Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index rows, Index cols)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index size)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	Eigen/src/Core/ProductEvaluators.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index \/*col*\/, const Lhs& \/*lhs*\/, const Rhs& \/*rhs*\/, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet& res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	Eigen/src/Core/ProductEvaluators.h	/^  static inline void run(Dest& dst, const TranspositionType& tr, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::transposition_matrix_product
run	Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const AssignFunc& func)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const InitialFunc& \/*func*\/)$/;"	f	struct:Eigen::internal::assignment_from_xpr_op_product
run	Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived&, const Func&) { return Scalar(); }$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	Eigen/src/Core/Redux.h	/^  static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return preverse(x); }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return x; }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	Eigen/src/Core/Reverse.h	/^  static void run(ExpressionType &xpr)$/;"	f	struct:Eigen::internal::vectorwise_reverse_inplace_impl
run	Eigen/src/Core/Solve.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_selector
run	Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs&, Rhs&) {}$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	Eigen/src/Core/Transpose.h	/^    static void run(const Derived& dst, const OtherDerived& other)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	Eigen/src/Core/Transpose.h	/^    static void run(const Derived&, const OtherDerived&)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const OtherDerived& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	Eigen/src/Core/Transpose.h	/^  static void run(MatrixType& m) {$/;"	f	struct:Eigen::internal::inplace_transpose_selector
run	Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived &mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived& mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cd& first, const Packet2cd& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet4cf& first, const Packet4cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4d& first, const Packet4d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet8f& first, const Packet8f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet16f& first,$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet8d& first, const Packet8d& second) {$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/CUDA/Half.h	/^  static inline half run()$/;"	f	struct:Eigen::internal::random_default_impl
run	Eigen/src/Core/arch/CUDA/Half.h	/^  static inline half run(const half& x, const half& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE static void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/NEON/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/ZVector/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/ZVector/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, A& a, B& b, C& c, T& \/*t*\/)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^static void run(Index rows, Index cols, Index depth,$/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static void run(MatrixType& mat, const ProductType& prod, const typename MatrixType::Scalar& alpha, bool beta)$/;"	f	struct:Eigen::general_product_to_triangular_selector
run	Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static void run(Dest &dst, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  static void run(Dest& dest, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^EIGEN_DONT_INLINE void selfadjoint_matrix_vector_product<Scalar,Index,StorageOrder,UpLo,ConjugateLhs,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::selfadjoint_matrix_vector_product
run	Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* vecX, const Scalar* vecY, const Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_rank1_update
run	Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(MatrixType& mat, const OtherType& other, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_product_selector
run	Eigen/src/Core/products/SelfadjointRank2Update.h	/^  static void run(Scalar* mat, Index stride, const UType& u, const VType& v, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_rank2_update_selector
run	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^                                                        RhsStorageOrder,ConjugateRhs,ColMajor,Version>::run($/;"	f	class:Eigen::internal::product_triangular_matrix_matrix
run	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &a_lhs, const Rhs &a_rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	Eigen/src/Core/products/TriangularMatrixVector.h	/^  ::run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	class:Eigen::internal::triangular_matrix_vector_product
run	Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::trmv_selector
run	Eigen/src/Core/products/TriangularMatrixVector.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &lhs, const Rhs &rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	Eigen/src/Core/products/TriangularSolverMatrix.h	/^  static void run($/;"	f	struct:Eigen::internal::triangular_solve_matrix
run	Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	Eigen/src/Core/products/TriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)$/;"	f	struct:Eigen::internal::triangular_solve_vector
run	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE To run(const From& x) { return To(x); }$/;"	f	struct:Eigen::internal::get_factor
run	Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return numext::real(x); }$/;"	f	struct:Eigen::internal::get_factor
run	Eigen/src/Core/util/BlasUtil.h	/^  static const typename T::Scalar* run(const T& m)$/;"	f	struct:Eigen::internal::extract_data_selector
run	Eigen/src/Core/util/BlasUtil.h	/^  static typename T::Scalar* run(const T&) { return 0; }$/;"	f	struct:Eigen::internal::extract_data_selector
run	Eigen/src/Core/util/Memory.h	/^  EIGEN_DEVICE_FUNC static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_copy_helper
run	Eigen/src/Core/util/Memory.h	/^  static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_memmove_helper
run	Eigen/src/Eigenvalues/ComplexSchur.h	/^  static void run(ComplexSchur<MatrixType>& _this, const MatrixType& matrix, bool computeU)$/;"	f	struct:Eigen::internal::complex_schur_reduce_to_hessenberg
run	Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^  run(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::internal::eigenvalues_selector::MatrixBase
run	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& solver, const MatrixType& mat, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType&, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static const type& run (const TransformType& x) { return x.matrix(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static const type& run(const type &x) { return x; }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static type run (const TransformType& x) { return x.affine(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename ArgType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/Geometry/OrthoMethods.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	Eigen/src/Geometry/OrthoMethods.h	/^  static inline VectorType run(const Derived& src)$/;"	f	struct:Eigen::internal::unitOrthogonal_selector
run	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){$/;"	f	struct:Eigen::internal::quat_product
run	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived>& q){$/;"	f	struct:Eigen::internal::quat_conj
run	Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC static inline void run(QuaternionBase<Derived>& q, const Other& a_mat)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC static inline void run(QuaternionBase<Derived>& q, const Other& vec)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE ReturnType run(const RotationDerived& r, const OtherVectorType& v)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static inline ReturnType run(const RotationDerived& r, const DiagonalMatrix<Scalar,Dim,MaxDim>& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static inline ReturnType run(const RotationDerived& r, const MatrixType& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static inline void run(const TransformType& m, TransformType& res)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static inline void run(const TransformType&, TransformType&)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static void run(MatrixType &mat)$/;"	f	struct:Eigen::internal::transform_make_affine
run	Eigen/src/Geometry/Transform.h	/^  static EIGEN_STRONG_INLINE ResultType run(const TransformType& T, const MatrixType& other)$/;"	f	struct:Eigen::internal::transform_right_product_impl
run	Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::transform_transform_product_impl
run	Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other, const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other,const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	Eigen/src/Geometry/Transform.h	/^  static inline AffinePart run(MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	Eigen/src/Geometry/Transform.h	/^  static inline ConstAffinePart run(const MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	Eigen/src/Geometry/Transform.h	/^  static inline MatrixType& run(MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	Eigen/src/Geometry/Transform.h	/^  static inline const MatrixType& run(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,AffineCompact,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,Mode,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	Eigen/src/Geometry/Transform.h	/^  template<typename MatrixType> EIGEN_DEVICE_FUNC static void run(MatrixType &) { }$/;"	f	struct:Eigen::internal::transform_make_affine
run	Eigen/src/Geometry/arch/Geometry_SSE.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/LU/Determinant.h	/^  static inline typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	Eigen/src/LU/Determinant.h	/^  static typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	Eigen/src/LU/FullPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/LU/InverseImpl.h	/^  static inline void run($/;"	f	struct:Eigen::internal::compute_inverse_and_det_with_check
run	Eigen/src/LU/InverseImpl.h	/^  static inline void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse
run	Eigen/src/LU/InverseImpl.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename XprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/LU/InverseImpl.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	Eigen/src/LU/PartialPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename LuType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/LU/arch/Inverse_SSE.h	/^  static void run(const MatrixType& mat, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	Eigen/src/PardisoSupport/PardisoSupport.h	/^    static IndexType run( _MKL_DSS_HANDLE_t pt, IndexType maxfct, IndexType mnum, IndexType type, IndexType phase, IndexType n, void *a,$/;"	f	struct:Eigen::internal::pardiso_run_selector
run	Eigen/src/QR/ColPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename QrType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename CodType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/QR/FullPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename QrType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/QR/HouseholderQR.h	/^  static void run(MatrixQR& mat, HCoeffs& hCoeffs, Index maxBlockSize=32,$/;"	f	struct:Eigen::internal::householder_qr_inplace_blocked
run	Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, QRPreconditioner>&, const MatrixType&)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	Eigen/src/SVD/JacobiSVD.h	/^  static bool run(typename SVD::WorkMatrixType& work_matrix, SVD& svd, Index p, Index q, RealScalar& maxDiagEntry)$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	Eigen/src/SVD/JacobiSVD.h	/^  static bool run(typename SVD::WorkMatrixType&, SVD&, Index, Index, RealScalar&) { return true; }$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const InputMatrixType& input, ConstCholMatrixPtr &pmat, CholMatrixType &tmp)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const MatrixType& input, ConstMatrixPtr &pmat, MatrixType &\/*tmp*\/)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::conservative_sparse_sparse_product_selector
run	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::sparse_sparse_to_dense_product_selector
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrix<Scalar,Options,StorageIndex> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrixBase<DstDerived> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	Eigen/src/SparseCore/SparsePermutation.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(DynamicSparseMatrix<DestScalar,ColMajor,StorageIndex>& dst, const SrcXprType &src, const AssignOpType&\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src, const AssignFunc& func)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src, const AssignOpType&\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src,$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<Scalar,Options,DstIndex> &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseSelfAdjointView<DestType,DestMode>& dst, const SrcXprType &src, const internal::assign_op<Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res, const RealScalar& tolerance)$/;"	f	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
run	Eigen/src/SparseCore/SparseVector.h	/^  static void run(Dest& dst, const Src& src) {$/;"	f	struct:Eigen::internal::sparse_vector_assign_selector
run	Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_selector
run	Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
run	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<1>::run(const Index \/*segsize*\/, BlockScalarVector& dense, ScalarVector& \/*tempv*\/, ScalarVector& lusup, Index& luptr,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<SegSizeAtCompileTime>::run(const Index segsize, BlockScalarVector& dense, ScalarVector& tempv, ScalarVector& lusup, Index& luptr, const Index lda,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	Eigen/src/SparseQR/SparseQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static void run(MatrixType& mat, SluMatrix& res)$/;"	f	struct:Eigen::SluMatrixMapHelper
s	Eigen/src/Jacobi/Jacobi.h	/^    Scalar s() const { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	Eigen/src/Jacobi/Jacobi.h	/^    Scalar& s() { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	methods/stabilized_methods.hpp	/^    int s; \/\/ use safest value if no other is specified$/;"	m	class:ROCK2
s	methods/stabilized_methods.hpp	/^    int s;$/;"	m	class:RKC
sample	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType sample() const$/;"	f	class:Eigen::AlignedBox
sample	mcmc/mala.cpp	/^void MALA_Sampler::sample()$/;"	f	class:MALA_Sampler
sample	mcmc/pcn.cpp	/^void PCN_Sampler::sample()$/;"	f	class:PCN_Sampler
sample	mcmc/phmc.cpp	/^void PHMC_Sampler::sample()$/;"	f	class:PHMC_Sampler
sample	tools/mcmc.cpp	/^void MCMC_Sampler::sample()$/;"	f	class:MCMC_Sampler
sample	tools/random_variable.hpp	/^    std::vector<Real> sample()$/;"	f	class:DiscreteDirac
sample	tools/random_variable.hpp	/^  std::vector<Real> sample(){fprintf(stderr,"Multidimensional sampling from random variable not implemented");abort(); return std::vector<Real>();}$/;"	f	class:RandomVariable
sampled_array	mcmc/mala.hpp	/^    Real **sampled_array;$/;"	m	class:MALA_Sampler
sampled_array	mcmc/pcn.hpp	/^    Real **sampled_array;$/;"	m	class:PCN_Sampler
sampled_array	mcmc/phmc.hpp	/^    Real **sampled_array;$/;"	m	class:PHMC_Sampler
sampled_array	tools/mcmc.hpp	/^    Real **sampled_array;$/;"	m	class:MCMC_Sampler
scalar_abs2_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs2_op {$/;"	s	namespace:Eigen::internal
scalar_abs_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs_op {$/;"	s	namespace:Eigen::internal
scalar_acos_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_acos_op {$/;"	s	namespace:Eigen::internal
scalar_arg_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_arg_op {$/;"	s	namespace:Eigen::internal
scalar_asin_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_asin_op {$/;"	s	namespace:Eigen::internal
scalar_atan_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_atan_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_and_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_and_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_not_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_boolean_not_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_or_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_or_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_xor_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_xor_op {$/;"	s	namespace:Eigen::internal
scalar_cast_op	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<Eigen::half, float> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<float, Eigen::half> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<int, Eigen::half> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cast_op {$/;"	s	namespace:Eigen::internal
scalar_ceil_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_ceil_op {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_EQ> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_GE> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_GT> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_LE> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_LT> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_NEQ> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_UNORD> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_conj_product_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_conj_product_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_conjugate_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_conjugate_op {$/;"	s	namespace:Eigen::internal
scalar_constant_op	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	Eigen/src/Core/functors/NullaryFunctors.h	/^struct scalar_constant_op {$/;"	s	namespace:Eigen::internal
scalar_cos_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cos_op {$/;"	s	namespace:Eigen::internal
scalar_cosh_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cosh_op {$/;"	s	namespace:Eigen::internal
scalar_cube_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cube_op {$/;"	s	namespace:Eigen::internal
scalar_difference_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_difference_op<const std::complex<T>, const std::complex<T> >  : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_difference_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_difference_op<std::complex<T>, std::complex<T> > : scalar_difference_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_difference_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_difference_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_div_cost	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 16 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 14 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 8 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 7 }; };$/;"	s	namespace:Eigen::internal
scalar_exp_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_exp_op {$/;"	s	namespace:Eigen::internal
scalar_floor_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_floor_op {$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	Eigen/src/Core/MathFunctions.h	/^template<> struct scalar_fuzzy_impl<bool>$/;"	s	namespace:Eigen::internal
scalar_hypot_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_hypot_op<Scalar,Scalar> : binary_op_base<Scalar,Scalar>$/;"	s	namespace:Eigen::internal
scalar_identity_op	Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Scalar> struct scalar_identity_op {$/;"	s	namespace:Eigen::internal
scalar_imag_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_op {$/;"	s	namespace:Eigen::internal
scalar_imag_ref_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_ref_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_inverse_op {$/;"	s	namespace:Eigen::internal
scalar_isfinite_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isfinite_op {$/;"	s	namespace:Eigen::internal
scalar_isinf_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isinf_op {$/;"	s	namespace:Eigen::internal
scalar_isnan_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isnan_op {$/;"	s	namespace:Eigen::internal
scalar_log10_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log10_op {$/;"	s	namespace:Eigen::internal
scalar_log1p_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log1p_op {$/;"	s	namespace:Eigen::internal
scalar_log_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_max_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_min_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_min_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_opposite_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_opposite_op {$/;"	s	namespace:Eigen::internal
scalar_pow_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_pow_op  : binary_op_base<Scalar,Exponent>$/;"	s	namespace:Eigen::internal
scalar_product_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_product_op<const std::complex<T>, const std::complex<T> >  : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_product_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_product_op<std::complex<T>, std::complex<T> > : scalar_product_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_product_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_product_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_product_traits	Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct scalar_product_traits$/;"	s	namespace:Eigen
scalar_quotient_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_quotient_op<const std::complex<T>, const std::complex<T> > : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_quotient_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_quotient_op<std::complex<T>, std::complex<T> > : scalar_quotient_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_quotient_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_quotient_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_random_op	Eigen/src/Core/Random.h	/^template<typename Scalar> struct scalar_random_op {$/;"	s	namespace:Eigen::internal
scalar_real_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_op {$/;"	s	namespace:Eigen::internal
scalar_real_ref_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_ref_op {$/;"	s	namespace:Eigen::internal
scalar_round_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_round_op {$/;"	s	namespace:Eigen::internal
scalar_rsqrt_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_rsqrt_op {$/;"	s	namespace:Eigen::internal
scalar_score_coeff_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_score_coeff_op : scalar_abs_op<Scalar>$/;"	s	namespace:Eigen::internal
scalar_sign_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_sign_op<Scalar,false> {$/;"	s	namespace:Eigen::internal
scalar_sign_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_sign_op<Scalar,true> {$/;"	s	namespace:Eigen::internal
scalar_sin_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sin_op {$/;"	s	namespace:Eigen::internal
scalar_sinh_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sinh_op {$/;"	s	namespace:Eigen::internal
scalar_sqrt_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sqrt_op {$/;"	s	namespace:Eigen::internal
scalar_square_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_square_op {$/;"	s	namespace:Eigen::internal
scalar_sum_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_sum_op<const std::complex<T>, const std::complex<T> > : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_sum_op	Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_sum_op<std::complex<T>, std::complex<T> > : scalar_sum_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_sum_op	Eigen/src/Core/functors/BinaryFunctors.h	/^  scalar_sum_op() {}$/;"	f	struct:Eigen::internal::scalar_sum_op
scalar_sum_op	Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_sum_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_sum_op	Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct scalar_sum_op<bool,bool> : scalar_sum_op<int,int> {$/;"	s	namespace:Eigen::internal
scalar_tan_op	Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_tan_op {$/;"	s	namespace:Eigen::internal
scalar_tanh_op	Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_tanh_op {$/;"	s	namespace:Eigen::internal
scale	Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::scale(const Scalar& s)$/;"	f	class:Eigen::Transform
scale	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	build/plot_2d_solution.py	/^    scale=np.diag([x_scale, y_scale, z_scale, 1.0])$/;"	v
scale	build/plot_2d_solution.py	/^    scale=scale*(1.0\/scale.max())$/;"	v
scaleAndAddTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl_base
scaleAndAddTo	Eigen/src/Core/ProductEvaluators.h	/^  static inline void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/Core/ProductEvaluators.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& a_lhs, const Rhs& a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const RhsView& rhsView, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void scaleAndAddTo(Dest& dst, const LhsView& lhsView, const Rhs& rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scalingS	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const VectorRx& scalingS() const { eigen_assert("m_factorizationIsOk"); return m_scale; }$/;"	f	class:Eigen::IncompleteCholesky
scatterPacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void scatterPacket(Index i, Index j, const SubPacket &p) const {$/;"	f	class:Eigen::internal::blas_data_mapper
scheme	build/plot_all_paths.py	/^    scheme = "abdulle_garegnani"$/;"	v
scomplex	Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<float>  scomplex;$/;"	t	namespace:Eigen
scoped_array	Eigen/src/Core/util/Memory.h	/^  explicit scoped_array(std::ptrdiff_t size)$/;"	f	class:Eigen::internal::scoped_array
scoped_array	Eigen/src/Core/util/Memory.h	/^template<typename T> class scoped_array : noncopyable$/;"	c	namespace:Eigen::internal
score	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType score ; \/* the score used to maintain heap, if col is alive *\/$/;"	m	union:internal::colamd_col::__anon650
searchLowerIndex	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
searchLowerIndex	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index start, Index end, Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
second	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet second;$/;"	m	struct:Eigen::internal::DoublePacket
second_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef Arg2 second_argument_type;$/;"	t	struct:Eigen::internal::binary_op_base
second_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::second_argument_type second_argument_type;$/;"	t	struct:Eigen::internal::bind1st_op
second_argument_type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::second_argument_type second_argument_type;$/;"	t	struct:Eigen::internal::bind2nd_op
secularEq	Eigen/src/SVD/BDCSVD.h	/^typename BDCSVD<MatrixType>::RealScalar BDCSVD<MatrixType>::secularEq(RealScalar mu, const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm, const ArrayRef& diagShifted, RealScalar shift)$/;"	f	class:Eigen::BDCSVD
seed	tools/random_variable.hpp	/^    long long seed; $/;"	m	class:NormalDistribution
seed	tools/random_variable.hpp	/^    long long seed; $/;"	m	class:UniformDistribution
segment	Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType segment(Index start, Index n) const$/;"	f
segment	Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType segment(Index start, Index n)$/;"	f
segment	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type segment(Index start, Index n = N) const$/;"	f
segment	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type segment(Index start, Index n = N)$/;"	f
select	Eigen/src/Core/GenericPacketMath.h	/^  bool select[N];$/;"	m	struct:Eigen::internal::Selector
select	Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const DenseBase<ThenDerived>& thenMatrix,$/;"	f	class:Eigen::DenseBase
select	Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const typename ElseDerived::Scalar& thenScalar,$/;"	f	class:Eigen::DenseBase
selector	Eigen/src/Core/GeneralProduct.h	/^  typedef product_type_selector<rows_select, cols_select, depth_select> selector;$/;"	t	struct:Eigen::internal::product_type
selfadjointView	Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::MatrixBase
selfadjointView	Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::MatrixBase
selfadjointView	Eigen/src/Core/TriangularMatrix.h	/^    SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView()$/;"	f	class:Eigen::TriangularView
selfadjointView	Eigen/src/Core/TriangularMatrix.h	/^    const SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView() const$/;"	f	class:Eigen::TriangularView
selfadjointView	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template ConstSelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::SparseMatrixBase
selfadjointView	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template SelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::SparseMatrixBase
selfadjoint_matrix_vector_product	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_matrix_vector_product$/;"	s	namespace:Eigen::internal
selfadjoint_matrix_vector_product_symv	Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^struct selfadjoint_matrix_vector_product_symv :$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,0,true,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,0,true>$/;"	s	namespace:Eigen::internal
selfadjoint_product_selector	Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,false>$/;"	s	namespace:Eigen
selfadjoint_product_selector	Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,true>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank2_update_selector	Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Lower>$/;"	s	namespace:Eigen::internal
selfadjoint_rank2_update_selector	Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Upper>$/;"	s	namespace:Eigen::internal
set	Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
setBounds	Eigen/src/SparseCore/AmbiVector.h	/^    void setBounds(Index start, Index end) { m_start = convert_index(start); m_end = convert_index(end); }$/;"	f	class:Eigen::internal::AmbiVector
setConstant	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& val)$/;"	f	class:Eigen::DenseBase
setConstant	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index rows, Index cols, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index size, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setConstant(const Scalar& value)$/;"	f	class:Eigen::TriangularViewImpl
setCpuCacheSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void setCpuCacheSizes(std::ptrdiff_t l1, std::ptrdiff_t l2, std::ptrdiff_t l3)$/;"	f	namespace:Eigen
setDroptol	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setDroptol(const RealScalar& droptol)$/;"	f	class:Eigen::IncompleteLUT
setEmpty	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline void setEmpty()$/;"	f	class:Eigen::AlignedBox
setFillfactor	Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setFillfactor(int fillfactor)$/;"	f	class:Eigen::IncompleteLUT
setFromTriplets	Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::setFromTriplets(const InputIterators& begin, const InputIterators& end)$/;"	f	class:Eigen::SparseMatrix
setFromTriplets	Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::setFromTriplets(const InputIterators& begin, const InputIterators& end, DupFunctor dup_func)$/;"	f	class:Eigen::SparseMatrix
setFromTwoVectors	Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::QuaternionBase
setIdentity	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity()$/;"	f	class:Eigen::MatrixBase
setIdentity	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
setIdentity	Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity() { m_diagonal.setOnes(); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity(Index size) { m_diagonal.setOnes(size); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity()$/;"	f	class:Eigen::PermutationBase
setIdentity	Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity(Index newSize)$/;"	f	class:Eigen::PermutationBase
setIdentity	Eigen/src/Core/Transpositions.h	/^    void setIdentity()$/;"	f	class:Eigen::TranspositionsBase
setIdentity	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline QuaternionBase& setIdentity() { coeffs() << Scalar(0), Scalar(0), Scalar(0), Scalar(1); return *this; }$/;"	f	class:Eigen::QuaternionBase
setIdentity	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setIdentity()$/;"	f	class:Eigen::SparseMatrix
setIdentity_impl	Eigen/src/Core/CwiseNullaryOp.h	/^struct setIdentity_impl<Derived, true>$/;"	s	namespace:Eigen::internal
setInfos	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    void setInfos(Index m, Index n, ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
setInitialShift	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void setInitialShift(RealScalar shift) { m_initialShift = shift; }$/;"	f	class:Eigen::IncompleteCholesky
setLength	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setLength(Index length)$/;"	f	class:Eigen::HouseholderSequence
setLinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(Index newSize, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setLinSpaced	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setMaxIterations	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexEigenSolver
setMaxIterations	Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexSchur
setMaxIterations	Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::EigenSolver
setMaxIterations	Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::GeneralizedEigenSolver
setMaxIterations	Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealQZ
setMaxIterations	Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealSchur
setMaxIterations	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::IterativeSolverBase
setMode	Eigen/src/CholmodSupport/CholmodSupport.h	/^    void setMode(CholmodMode mode)$/;"	f	class:Eigen::CholmodDecomposition
setMode	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& setMode(SimplicialCholeskyMode mode)$/;"	f	class:Eigen::SimplicialCholesky
setNbThreads	Eigen/src/Core/products/Parallelizer.h	/^inline void setNbThreads(int v)$/;"	f	namespace:Eigen
setNull	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline void setNull() { setEmpty(); }$/;"	f	class:Eigen::AlignedBox
setOnes	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setOnes()$/;"	f	class:Eigen::DenseBase
setOnes	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setOnes	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setOnes	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setOnes() { return setConstant(Scalar(1)); }$/;"	f	class:Eigen::TriangularViewImpl
setPivotThreshold	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setPivotThreshold(const RealScalar& tol)$/;"	f	class:Eigen::SPQR
setPivotThreshold	Eigen/src/SparseLU/SparseLU.h	/^    void setPivotThreshold(const RealScalar& thresh)$/;"	f	class:Eigen::SparseLU
setPivotThreshold	Eigen/src/SparseQR/SparseQR.h	/^    void setPivotThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SparseQR
setRandom	Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setRandom	Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setRandom	Eigen/src/Core/Random.h	/^inline Derived& DenseBase<Derived>::setRandom()$/;"	f	class:Eigen::DenseBase
setSPQROrdering	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setSPQROrdering(int ord) { m_ordering = ord;}$/;"	f	class:Eigen::SPQR
setScalarType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setScalarType()$/;"	f	struct:Eigen::SluMatrix
setShift	Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& setShift(const RealScalar& offset)$/;"	f	class:Eigen::CholmodBase
setShift	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setShift(Index shift)$/;"	f	class:Eigen::HouseholderSequence
setShift	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& setShift(const RealScalar& offset, const RealScalar& scale = 1)$/;"	f	class:Eigen::SimplicialCholeskyBase
setStorageType	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setStorageType(Stype_t t)$/;"	f	struct:Eigen::SluMatrix
setSwitchSize	Eigen/src/SVD/BDCSVD.h	/^  void setSwitchSize(int s) $/;"	f	class:Eigen::BDCSVD
setThreshold	Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivLU
setThreshold	Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivLU
setThreshold	Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& setThreshold(Default_t) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
setThreshold	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& setThreshold(const RealScalar& threshold) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
setThreshold	Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(Default_t)$/;"	f	class:Eigen::SVDBase
setThreshold	Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SVDBase
setTolerance	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setTolerance(const RealScalar& tolerance)$/;"	f	class:Eigen::IterativeSolverBase
setTrans	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setTrans(bool trans)$/;"	f	class:Eigen::HouseholderSequence
setZero	Eigen/src/Cholesky/LDLT.h	/^    void setZero()$/;"	f	class:Eigen::LDLT
setZero	Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()$/;"	f	class:Eigen::DenseBase
setZero	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setZero	Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setZero	Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero() { m_diagonal.setZero(); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero(Index size) { m_diagonal.setZero(size); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setZero() { return setConstant(Scalar(0)); }$/;"	f	class:Eigen::TriangularViewImpl
setZero	Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::setZero()$/;"	f	class:Eigen::internal::AmbiVector
setZero	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setZero()$/;"	f	class:Eigen::SparseMatrix
setZero	Eigen/src/SparseCore/SparseVector.h	/^    inline void setZero() { m_data.clear(); }$/;"	f	class:Eigen::SparseVector
set_f_print	methods/core_methods.cpp	/^void NumericalMethod::set_f_print(std::string path){ $/;"	f	class:NumericalMethod
set_from_triplets	Eigen/src/SparseCore/SparseMatrix.h	/^void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, DupFunctor dup_func)$/;"	f	namespace:Eigen::internal
set_include_prior	models/inverse_model.hpp	/^    void set_include_prior(bool flag){include_prior=flag;}$/;"	f	class:InverseProblem
set_is_malloc_allowed	Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }$/;"	f	namespace:Eigen::internal
set_use_error_estimation	methods/core_methods.hpp	/^    void set_use_error_estimation(bool flag){ do_error_estimation=flag;}$/;"	f	class:StepIntegrator
set_weight	smc/smc.hpp	/^    void set_weight(Real w){weight=w;}$/;"	f	class:Particle
shared1	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon653
shared1	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon649
shared2	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon654
shared2	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon650
shared3	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared3 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon651
shared4	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared4 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon652
shear	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::shear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
shift	Eigen/src/Householder/HouseholderSequence.h	/^    Index shift() const { return m_shift; }    \/**< \\brief Returns the shift of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
short_proj	build/plot_2d_solution.py	/^    def short_proj():$/;"	f
sigma	methods/adaptive_methods.cpp	/^Real AleksaRandomPathsAdaptiveScheme::sigma(Real *x0,Real *x1,Real h)$/;"	f	class:AleksaRandomPathsAdaptiveScheme
sigma	methods/adaptive_methods.cpp	/^Real ClassicalAdaptiveScheme::sigma(Real *x0,Real *x1,Real h)$/;"	f	class:ClassicalAdaptiveScheme
sigma	methods/adaptive_methods.cpp	/^Real GiacomoRandomPathsAdaptiveScheme::sigma(Real *x0,Real *x1,Real h)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
sigma	methods/giacomo.cpp	/^Real GiacomoRandomPathsAdaptiveScheme2::sigma(Real *x0,Real *x1,Real h)$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
sigma	models/models.hpp	/^    Real sigma,rho,beta;$/;"	m	class:Lorenz
sign	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sign() const$/;"	f
signDeterminant	Eigen/src/SparseLU/SparseLU.h	/^    Scalar signDeterminant()$/;"	f	class:Eigen::SparseLU
signaling_NaN	Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half signaling_NaN() { return Eigen::half_impl::raw_uint16_to_half(0x7e00); }$/;"	f	struct:std::numeric_limits
signedDistance	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar signedDistance(const VectorType& p) const { return normal().dot(p) + offset(); }$/;"	f	class:Eigen::Hyperplane
significant_decimals_impl	Eigen/src/Core/IO.h	/^struct significant_decimals_impl$/;"	s	namespace:Eigen::internal
simplicial_cholesky_grab_input	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input {$/;"	s	namespace:Eigen::internal
simplicial_cholesky_grab_input	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input<MatrixType,MatrixType> {$/;"	s	namespace:Eigen::internal
sin	Eigen/src/Core/MathFunctions.h	/^T sin(const T &x) {$/;"	f	namespace:Eigen::numext
sin	Eigen/src/Core/MathFunctions.h	/^double sin(const double &x) { return ::sin(x); }$/;"	f	namespace:Eigen::numext
sin	Eigen/src/Core/MathFunctions.h	/^float sin(const float &x) { return ::sinf(x); }$/;"	f	namespace:Eigen::numext
sin	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half sin(const half& a) {$/;"	f	namespace:Eigen::half_impl
sin	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sin() const$/;"	f
singularValues	Eigen/src/SVD/SVDBase.h	/^  const SingularValuesType& singularValues() const$/;"	f	class:Eigen::SVDBase
sinh	Eigen/src/Core/MathFunctions.h	/^T sinh(const T &x) {$/;"	f	namespace:Eigen::numext
sinh	Eigen/src/Core/MathFunctions.h	/^double sinh(const double &x) { return ::sinh(x); }$/;"	f	namespace:Eigen::numext
sinh	Eigen/src/Core/MathFunctions.h	/^float sinh(const float &x) { return ::sinhf(x); }$/;"	f	namespace:Eigen::numext
sinh	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sinh() const$/;"	f
size	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index size() const        { return m_dstExpr.size(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
size	Eigen/src/Core/EigenBase.h	/^  inline Index size() const { return rows() * cols(); }$/;"	f	struct:Eigen::EigenBase
size	Eigen/src/Core/GenericPacketMath.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon583
size	Eigen/src/Core/Matrix.h	/^  enum { size = internal::size_at_compile_time<_Rows,_Cols>::ret };$/;"	e	enum:Eigen::internal::traits::__anon449
size	Eigen/src/Core/PermutationMatrix.h	/^    inline Index size() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
size	Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::redux_evaluator
size	Eigen/src/Core/Transpositions.h	/^    Index size() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
size	Eigen/src/Core/Transpositions.h	/^    Index size() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
size	Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::visitor_evaluator
size	Eigen/src/Core/arch/AVX/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon492
size	Eigen/src/Core/arch/AVX/Complex.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon490
size	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon493
size	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon491
size	Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon484
size	Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=8,$/;"	e	enum:Eigen::internal::packet_traits::__anon483
size	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon488
size	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon487
size	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon489
size	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    size = 16,$/;"	e	enum:Eigen::internal::packet_traits::__anon497
size	Eigen/src/Core/arch/AVX512/PacketMath.h	/^    size = 8,$/;"	e	enum:Eigen::internal::packet_traits::__anon498
size	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon499
size	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon501
size	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 8, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon500
size	Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon476
size	Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon474
size	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon477
size	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon475
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon469
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon472
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon468
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon473
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon470
size	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon471
size	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon558
size	Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon557
size	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon560
size	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon559
size	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon562
size	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon563
size	Eigen/src/Core/arch/NEON/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon510
size	Eigen/src/Core/arch/NEON/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon508
size	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon511
size	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon509
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon506
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon502
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon503
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon507
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon504
size	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon505
size	Eigen/src/Core/arch/SSE/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon542
size	Eigen/src/Core/arch/SSE/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon540
size	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon543
size	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon541
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon533
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon532
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon534
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon536
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon535
size	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon537
size	Eigen/src/Core/arch/ZVector/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon522
size	Eigen/src/Core/arch/ZVector/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon521
size	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon524
size	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon523
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon514
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon516
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon515
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon519
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon518
size	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon517
size	Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex size() const { return m_size; }$/;"	f	class:Eigen::internal::AmbiVector
size	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index size() const { return m_size; }$/;"	f	class:Eigen::internal::CompressedStorage
size	Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index size() const { return rows() * cols(); }$/;"	f	class:Eigen::SparseMatrixBase
size	build/plot_dist_from_samples.py	/^    size = (4,4)$/;"	v
size_type	Eigen/src/Core/util/Memory.h	/^  typedef std::size_t     size_type;$/;"	t	class:Eigen::aligned_allocator
size_type	Eigen/src/StlSupport/details.h	/^    typedef std::size_t     size_type;$/;"	t	class:Eigen::aligned_allocator_indirection
sizes	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const CwiseBinaryOp< internal::scalar_difference_op<Scalar,Scalar>, const VectorType, const VectorType> sizes() const$/;"	f	class:Eigen::AlignedBox
slerp	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::slerp(const Scalar& t, const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
slerp	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D slerp(const Scalar& t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
smallestAngle	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar smallestAngle() const {$/;"	f	class:Eigen::Rotation2D
smallestPositiveAngle	Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar smallestPositiveAngle() const {$/;"	f	class:Eigen::Rotation2D
smart_copy	Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC void smart_copy(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_copy_helper	Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_copy_helper	Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,true> {$/;"	s	namespace:Eigen::internal
smart_memmove	Eigen/src/Core/util/Memory.h	/^template<typename T> void smart_memmove(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_memmove_helper	Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_memmove_helper	Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,true> {$/;"	s	namespace:Eigen::internal
solve	Eigen/src/Cholesky/LDLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LDLT
solve	Eigen/src/Cholesky/LLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LLT
solve	Eigen/src/Core/SolveTriangular.h	/^TriangularViewImpl<Derived,Mode,Dense>::solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solve	Eigen/src/Core/SolverBase.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SolverBase
solve	Eigen/src/Core/TriangularMatrix.h	/^    solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    inline const Rhs& solve(const Rhs& b) const { return b; }$/;"	f	class:Eigen::IdentityPreconditioner
solve	Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::DiagonalPreconditioner
solve	Eigen/src/LU/FullPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivLU
solve	Eigen/src/LU/PartialPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PartialPivLU
solve	Eigen/src/QR/ColPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::ColPivHouseholderQR
solve	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const Solve<CompleteOrthogonalDecomposition, Rhs> solve($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
solve	Eigen/src/QR/FullPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivHouseholderQR
solve	Eigen/src/QR/HouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::HouseholderQR
solve	Eigen/src/SVD/SVDBase.h	/^  solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SVDBase
solve	Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseQR
solve	Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const SparseMatrixBase<Rhs>& B) const$/;"	f	class:Eigen::SparseQR
solveInPlace	Eigen/src/Cholesky/LDLT.h	/^bool LDLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LDLT
solveInPlace	Eigen/src/Cholesky/LLT.h	/^void LLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LLT
solveInPlace	Eigen/src/Core/SolveTriangular.h	/^void TriangularViewImpl<MatrixType,Mode,Dense>::solveInPlace(const MatrixBase<OtherDerived>& _other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	Eigen/src/Core/TriangularMatrix.h	/^    void solveInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest>   void solveInPlace(MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
solveInPlace	Eigen/src/SparseLU/SparseLU.h	/^  void solveInPlace( MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
solveInPlace	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^void MappedSuperNodalMatrix<Scalar,Index_>::solveInPlace( MatrixBase<Dest>&X) const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
solveWithGuess	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::IterativeSolverBase
solve_sparse_through_dense_panels	Eigen/src/SparseCore/SparseSolverBase.h	/^solve_sparse_through_dense_panels(const Decomposition &dec, const Rhs& rhs, Dest &dest)$/;"	f	namespace:Eigen::internal
solve_traits	Eigen/src/Core/Solve.h	/^struct solve_traits<Decomposition,RhsType,Dense>$/;"	s	namespace:Eigen::internal
solve_traits	Eigen/src/SparseCore/SparseUtil.h	/^struct solve_traits<Decomposition,RhsType,Sparse>$/;"	s	namespace:Eigen::internal
sortEigenvalues	Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::sortEigenvalues(bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
sparseView	Eigen/src/SparseCore/SparseView.h	/^const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& reference,$/;"	f	class:Eigen::MatrixBase
sparse_conjunction_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit sparse_conjunction_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::sparse_conjunction_evaluator
sparse_conjunction_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
sparse_conjunction_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
sparse_conjunction_evaluator	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
sparse_dense_outer_product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const ActualRhs &rhs, const Lhs1 &lhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const Lhs1 &lhs, const ActualRhs &rhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_dense_outer_product_evaluator$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagonalCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagCoeffType, SDP_AsCwiseProduct>$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagonalCoeffType, SDP_AsScalarProduct>$/;"	s	namespace:Eigen::internal
sparse_eval	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Cols,int Flags> struct sparse_eval<T,1,Cols,Flags> {$/;"	s	namespace:Eigen::internal
sparse_eval	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Flags> struct sparse_eval<T,1,1,Flags> {$/;"	s	namespace:Eigen::internal
sparse_eval	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Cols,int Flags> struct sparse_eval {$/;"	s	namespace:Eigen::internal
sparse_eval	Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Flags> struct sparse_eval<T,Rows,1,Flags> {$/;"	s	namespace:Eigen::internal
sparse_matrix_block_impl	Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	Eigen/src/SparseCore/SparseBlock.h	/^class sparse_matrix_block_impl$/;"	c	namespace:Eigen::internal
sparse_selfadjoint_time_dense_product	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^inline void sparse_selfadjoint_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_solve_triangular_selector	Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_sparse_selector	Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_sparse_selector<Lhs,Rhs,Mode,UpLo,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_impl	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^static void sparse_sparse_product_with_pruning_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, const typename ResultType::RealScalar& tolerance)$/;"	f	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_impl	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void sparse_sparse_to_dense_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product	Eigen/src/SparseCore/SparseDenseProduct.h	/^inline void sparse_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_time_dense_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, AlphaType, ColMajor, true>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, ColMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, true>$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Inner> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Outer> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_RuntimeSwitch> {$/;"	s	namespace:Eigen::internal
sparselu_gemm	Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^void sparselu_gemm(Index m, Index n, Index d, const Scalar* A, Index lda, const Scalar* B, Index ldb, Scalar* C, Index ldc)$/;"	f	namespace:Eigen::internal
splitOffTwoRows	Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::splitOffTwoRows(Index i)$/;"	f	class:Eigen::RealQZ
splitOffTwoRows	Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::splitOffTwoRows(Index iu, bool computeU, const Scalar& exshift)$/;"	f	class:Eigen::RealSchur
sqrt	Eigen/src/Core/MathFunctions.h	/^T sqrt(const T &x)$/;"	f	namespace:Eigen::numext
sqrt	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half sqrt(const half& a) {$/;"	f	namespace:Eigen::half_impl
sqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^double sqrt(const double &x)$/;"	f	namespace:Eigen::numext
sqrt	Eigen/src/Core/arch/SSE/MathFunctions.h	/^float sqrt(const float &x)$/;"	f	namespace:Eigen::numext
sqrt	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sqrt() const$/;"	f
sqrt_eps	models/models.cpp	/^Real sqrt_eps = sqrt(eps);$/;"	v
sqrth	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half sqrth(const Eigen::half& a) {$/;"	f
square	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^square() const$/;"	f
squaredDistance	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredExteriorDistance	Eigen/src/Geometry/AlignedBox.h	/^EIGEN_DEVICE_FUNC inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	Eigen/src/Geometry/AlignedBox.h	/^EIGEN_DEVICE_FUNC inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
squaredNorm	Eigen/src/Core/Dot.h	/^EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::MatrixBase
squaredNorm	Eigen/src/Core/VectorwiseOp.h	/^    const SquaredNormReturnType squaredNorm() const$/;"	f	class:Eigen::VectorwiseOp
squaredNorm	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar squaredNorm() const { return coeffs().squaredNorm(); }$/;"	f	class:Eigen::QuaternionBase
squaredNorm	Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::SparseMatrixBase
squeeze	Eigen/src/SparseCore/CompressedStorage.h	/^    void squeeze()$/;"	f	class:Eigen::internal::CompressedStorage
srcEvaluator	Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC const SrcEvaluatorType& srcEvaluator() const { return m_src; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
stableNorm	Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::stableNorm() const$/;"	f	class:Eigen::MatrixBase
stableNorm	Eigen/src/Core/VectorwiseOp.h	/^    const StableNormReturnType stableNorm() const$/;"	f	class:Eigen::VectorwiseOp
stableNormalize	Eigen/src/Core/Dot.h	/^inline void MatrixBase<Derived>::stableNormalize()$/;"	f	class:Eigen::MatrixBase
stableNormalized	Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::stableNormalized() const$/;"	f	class:Eigen::MatrixBase
stable_norm_kernel	Eigen/src/Core/StableNorm.h	/^inline void stable_norm_kernel(const ExpressionType& bl, Scalar& ssq, Scalar& scale, Scalar& invScale)$/;"	f	namespace:Eigen::internal
start	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first col in this row *\/$/;"	m	struct:internal::Colamd_Row
start	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first row in this column, or DEAD *\/$/;"	m	struct:internal::colamd_col
startCol	Eigen/src/Core/Block.h	/^    StorageIndex startCol() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startCol	Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::BlockImpl
startCol	Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startCol	Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return m_startCol.value(); }$/;"	f	class:Eigen::BlockImpl
startFill	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void startFill(Index reserve)$/;"	f	class:Eigen::SparseVector
startRow	Eigen/src/Core/Block.h	/^    StorageIndex startRow() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startRow	Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::BlockImpl
startRow	Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startRow	Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return m_startRow.value(); }$/;"	f	class:Eigen::BlockImpl
startVec	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseMatrix
startVec	Eigen/src/SparseCore/SparseVector.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseVector
static_assertion	Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion {};$/;"	s	namespace:Eigen::internal
static_assertion	Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion<true>$/;"	s	namespace:Eigen::internal
static_coefs_constructed	methods/stabilized_methods.cpp	/^bool ROCK2::static_coefs_constructed = false;$/;"	m	class:ROCK2	file:
static_coefs_constructed	methods/stabilized_methods.hpp	/^    static bool static_coefs_constructed;$/;"	m	class:ROCK2
std	Eigen/src/Core/arch/CUDA/Half.h	/^namespace std {$/;"	n
std	Eigen/src/StlSupport/StdDeque.h	/^namespace std {$/;"	n
std	Eigen/src/StlSupport/StdList.h	/^namespace std$/;"	n
std	Eigen/src/StlSupport/StdVector.h	/^namespace std {$/;"	n
std_devs	build/plot_function_conf_bounds.py	/^    std_devs = []$/;"	v
std_fallback	Eigen/src/Core/MathFunctions.h	/^namespace std_fallback {$/;"	n	namespace:Eigen::internal
stem_function	Eigen/src/Core/util/ForwardDeclarations.h	/^struct stem_function$/;"	s	namespace:Eigen::internal
step	Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::step(Index f, Index l, Index iter)$/;"	f	class:Eigen::RealQZ
step_perturbator	core_methods.hpp	/^    RandomVariable &step_perturbator; $/;"	m	class:AbdulleGaregnaniMethod
step_perturbator	core_methods.hpp	/^    RandomVariable &step_perturbator;$/;"	m	class:ConradNumericalMethod
step_perturbator	methods/core_methods.hpp	/^    RandomVariable &step_perturbator;$/;"	m	class:ConradNumericalMethod
storage	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  } storage;$/;"	m	struct:Eigen::SluMatrix	typeref:struct:Eigen::SluMatrix::__anon111
storage_kind_to_evaluator_kind	Eigen/src/Core/CoreEvaluators.h	/^struct storage_kind_to_evaluator_kind {$/;"	s	namespace:Eigen::internal
storage_kind_to_evaluator_kind	Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_evaluator_kind<Sparse> {$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<SolverStorage>          { typedef SolverShape Shape;           };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_shape<Sparse> {$/;"	s	namespace:Eigen::internal
storePacket	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void storePacket(Index i, const Packet &p) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
stride	Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index stride() const$/;"	f	class:Eigen::DenseCoeffsBase
stride	Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC const Index stride() const { return m_stride; }$/;"	f	class:Eigen::internal::blas_data_mapper
structured_update	Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::structured_update(Block<MatrixXr,Dynamic,Dynamic> A, const MatrixXr &B, Index n1)$/;"	f	class:Eigen::BDCSVD
sub	Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<-1>::Type sub() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<-1>::Type sub()$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
subDiagonal	Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::subDiagonal() const$/;"	f	class:Eigen::Tridiagonalization
subTo	Eigen/src/Core/EigenBase.h	/^  inline void subTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
subTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
subTo	Eigen/src/Core/ProductEvaluators.h	/^  static inline void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	Eigen/src/Core/ProductEvaluators.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	Eigen/src/SparseCore/SparseProduct.h	/^  static void subTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, typename enable_if<is_same<typename evaluator_traits<Dest>::Shape,DenseShape>::value,int*>::type* = 0)$/;"	f	struct:Eigen::internal::generic_product_impl
subVector	Eigen/src/Core/VectorwiseOp.h	/^    SubVector subVector(Index i)$/;"	f	class:Eigen::VectorwiseOp
subVectors	Eigen/src/Core/VectorwiseOp.h	/^    Index subVectors() const$/;"	f	class:Eigen::VectorwiseOp
sub_assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct sub_assign_op {$/;"	s	namespace:Eigen::internal
subdiagonalEntryIsNeglegible	Eigen/src/Eigenvalues/ComplexSchur.h	/^inline bool ComplexSchur<MatrixType>::subdiagonalEntryIsNeglegible(Index i)$/;"	f	class:Eigen::ComplexSchur
subs	Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return derived().subs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
subs	Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrix
subs	Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
sum	Eigen/src/Core/Redux.h	/^DenseBase<Derived>::sum() const$/;"	f	class:Eigen::DenseBase
sum	Eigen/src/Core/VectorwiseOp.h	/^    const SumReturnType sum() const$/;"	f	class:Eigen::VectorwiseOp
sum	Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrix<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseMatrix
sum	Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrixBase<Derived>::sum() const$/;"	f	class:Eigen::SparseMatrixBase
sum	Eigen/src/SparseCore/SparseRedux.h	/^SparseVector<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseVector
sum_h	methods/adaptive_methods.hpp	/^    double sum_h=0;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
sum_h	methods/adaptive_methods.hpp	/^    double sum_h=0;$/;"	m	class:ClassicalAdaptiveScheme
sum_h	methods/adaptive_methods.hpp	/^    double sum_h=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
sum_h	methods/adaptive_methods.hpp	/^    double sum_h=0;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
sumupDuplicates	Eigen/src/SparseCore/SparseMatrix.h	/^    void sumupDuplicates() { collapseDuplicates(internal::scalar_sum_op<Scalar,Scalar>()); }$/;"	f	class:Eigen::SparseMatrix
supIndex	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index supIndex() const { return m_supno; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
supToCol	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* supToCol() { return m_sup_to_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
supToCol	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* supToCol() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
super	Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<1>::Type super() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<1>::Type super()$/;"	f	class:Eigen::internal::TridiagonalMatrix
supers	Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return derived().supers(); }$/;"	f	class:Eigen::internal::BandMatrixBase
supers	Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrix
supers	Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
supno	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector supno; \/\/ Supernode number corresponding to this column (column to supernode mapping)$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
surf	build/plot_2d_solution.py	/^    surf = ax.plot_surface(X, Y, Z, cmap=cm.coolwarm,$/;"	v
svd_precondition_2x2_block_to_be_real	Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real {};$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, false>$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, true>$/;"	s	namespace:Eigen::internal
swap	Eigen/src/Core/DenseBase.h	/^    void swap(PlainObjectBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	Eigen/src/Core/DenseBase.h	/^    void swap(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& ) {}$/;"	f	class:Eigen::DenseStorage
swap	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }$/;"	f	class:Eigen::DenseStorage
swap	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }$/;"	f	class:Eigen::DenseStorage
swap	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }$/;"	f	class:Eigen::DenseStorage
swap	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
swap	Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> & other)$/;"	f	class:Eigen::PlainObjectBase
swap	Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> const & other)$/;"	f	class:Eigen::PlainObjectBase
swap	Eigen/src/Core/TriangularMatrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularViewImpl
swap	Eigen/src/Core/TriangularMatrix.h	/^    void swap(TriangularBase<OtherDerived> &other)$/;"	f	class:Eigen::TriangularViewImpl
swap	Eigen/src/Core/util/Memory.h	/^template<typename T> void swap(scoped_array<T> &a,scoped_array<T> &b)$/;"	f	namespace:Eigen::internal
swap	Eigen/src/Core/util/Meta.h	/^template<typename T> EIGEN_DEVICE_FUNC   void swap(T &a, T &b) { T tmp = b; b = a; a = tmp; }$/;"	f	namespace:numext
swap	Eigen/src/SparseCore/CompressedStorage.h	/^    void swap(CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
swap	Eigen/src/SparseCore/SparseMatrix.h	/^    inline void swap(SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
swap	Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseMatrix<Scalar,OtherOptions,StorageIndex>& other)$/;"	f	class:Eigen::SparseVector
swap	Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseVector& other)$/;"	f	class:Eigen::SparseVector
swap_assign_op	Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct swap_assign_op {$/;"	s	namespace:Eigen::internal
symm_pack_lhs	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_lhs$/;"	s	namespace:Eigen::internal
symm_pack_rhs	Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_rhs$/;"	s	namespace:Eigen::internal
sync	Eigen/src/Core/products/Parallelizer.h	/^  Index volatile sync;$/;"	m	struct:Eigen::internal::GemmParallelInfo
t	build/plot_all_paths.py	/^    t=1.0$/;"	v
t0	models/models.hpp	/^    Real t0,tf;$/;"	m	class:Model
t_obs	models/inverse_model.hpp	/^    std::vector<Real> t_obs;$/;"	m	class:InverseProblem
tail	Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType tail(Index n) const$/;"	f
tail	Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType tail(Index n)$/;"	f
tail	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type tail(Index n = N) const$/;"	f
tail	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type tail(Index n = N)$/;"	f
take_affine_part	Eigen/src/Geometry/Transform.h	/^  typedef internal::transform_take_affine_part<Transform> take_affine_part;$/;"	t	class:Eigen::Transform
take_matrix_for_product	Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product$/;"	s	namespace:Eigen::internal
take_matrix_for_product	Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Mode, Options> >$/;"	s	namespace:Eigen::internal
take_matrix_for_product	Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Projective, Options> >$/;"	s	namespace:Eigen::internal
tan	Eigen/src/Core/MathFunctions.h	/^T tan(const T &x) {$/;"	f	namespace:Eigen::numext
tan	Eigen/src/Core/MathFunctions.h	/^double tan(const double &x) { return ::tan(x); }$/;"	f	namespace:Eigen::numext
tan	Eigen/src/Core/MathFunctions.h	/^float tan(const float &x) { return ::tanf(x); }$/;"	f	namespace:Eigen::numext
tan	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half tan(const half& a) {$/;"	f	namespace:Eigen::half_impl
tan	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tan() const$/;"	f
tanh	Eigen/src/Core/MathFunctions.h	/^T tanh(const T &x) {$/;"	f	namespace:Eigen::numext
tanh	Eigen/src/Core/MathFunctions.h	/^double tanh(const double &x) { return ::tanh(x); }$/;"	f	namespace:Eigen::numext
tanh	Eigen/src/Core/MathFunctions.h	/^float tanh(const float &x) { return ::tanhf(x); }$/;"	f	namespace:Eigen::numext
tanh	Eigen/src/Core/MathFunctions.h	/^float tanh(float x) { return internal::generic_fast_tanh_float(x); }$/;"	f	namespace:Eigen::numext
tanh	Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half tanh(const half& a) {$/;"	f	namespace:Eigen::half_impl
tanh	Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tanh() const$/;"	f
ternary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit ternary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::ternary_evaluator
ternary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct ternary_evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3>, IndexBased, IndexBased>$/;"	s	namespace:Eigen::internal
ternary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	s	namespace:Eigen::internal
ternary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
ternary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
tf	models/models.hpp	/^    Real t0,tf;$/;"	m	class:Model
thenMatrix	Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ThenMatrixType& thenMatrix() const$/;"	f	class:Eigen::Select
thickness	Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType thickness ; \/* number of original columns represented by this *\/$/;"	m	union:internal::colamd_col::__anon649
threshold	Eigen/src/LU/FullPivLU.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivLU
threshold	Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::ColPivHouseholderQR
threshold	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  RealScalar threshold() const { return m_cpqr.threshold(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
threshold	Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivHouseholderQR
threshold	Eigen/src/SVD/SVDBase.h	/^  RealScalar threshold() const$/;"	f	class:Eigen::SVDBase
throw_std_bad_alloc	Eigen/src/Core/util/Memory.h	/^inline void throw_std_bad_alloc()$/;"	f	namespace:Eigen::internal
tinyness_before	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool tinyness_before = false;$/;"	m	struct:std::numeric_limits
tmp	core_methods.hpp	/^    double *tmp;$/;"	m	class:RK3
tmp	core_methods.hpp	/^    double *tmp;$/;"	m	class:RK4
tmp	methods/core_methods.hpp	/^    Real *tmp;$/;"	m	class:RK3
tmp	methods/core_methods.hpp	/^    Real *tmp;$/;"	m	class:RK4
tmp	methods/step_integrators.hpp	/^    Real *tmp;$/;"	m	class:RK3
tmp	methods/step_integrators.hpp	/^    Real *tmp;$/;"	m	class:RK4
toDense	Eigen/src/SparseCore/SparseMatrixBase.h	/^    DenseMatrixType toDense() const$/;"	f	class:Eigen::SparseMatrixBase
toDenseMatrix	Eigen/src/Core/BandMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::internal::BandMatrixBase
toDenseMatrix	Eigen/src/Core/DiagonalMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::DiagonalBase
toDenseMatrix	Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::InverseImpl
toDenseMatrix	Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::PermutationBase
toDenseMatrix	Eigen/src/Core/TriangularMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::TriangularBase
toQMatrix	Eigen/src/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim,Mode,Options>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQTransform	Eigen/src/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim,Mode,Options>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toRotationMatrix	Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::toRotationMatrix(void) const$/;"	f	class:Eigen::QuaternionBase
toRotationMatrix	Eigen/src/Geometry/Rotation2D.h	/^EIGEN_DEVICE_FUNC Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline Matrix<Scalar,2,2> toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen::internal
toRotationMatrix	Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline Matrix<Scalar,Dim,Dim> toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen::internal
toRotationMatrix	Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline const MatrixBase<OtherDerived>& toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen::internal
tol	methods/adaptive_methods.hpp	/^    Real tol;$/;"	m	class:AleksaRandomPathsAdaptiveScheme
tol	methods/adaptive_methods.hpp	/^    Real tol;$/;"	m	class:ClassicalAdaptiveScheme
tol	methods/adaptive_methods.hpp	/^    Real tol;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme
tol	methods/adaptive_methods.hpp	/^    Real tol;$/;"	m	class:GiacomoRandomPathsAdaptiveScheme2
tolerance	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar tolerance() const { return m_tolerance; }$/;"	f	class:Eigen::IterativeSolverBase
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline BlockXpr topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const ConstBlockXpr topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topLeftCorner() const$/;"	f
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topLeftCorner()$/;"	f
topLeftCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topLeftCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline BlockXpr topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const ConstBlockXpr topRightCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topRightCorner() const$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topRightCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topRightCorner()$/;"	f
topRightCorner	Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topRightCorner(Index cRows, Index cCols)$/;"	f
topRows	Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr topRows(Index n) const$/;"	f
topRows	Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr topRows(Index n)$/;"	f
topRows	Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type topRows(Index n = N) const$/;"	f
topRows	Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type topRows(Index n = N)$/;"	f
trace	Eigen/src/Core/Redux.h	/^MatrixBase<Derived>::trace() const$/;"	f	class:Eigen::MatrixBase
traits	Eigen/src/Core/Array.h	/^struct traits<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > : traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/ArrayWrapper.h	/^struct traits<ArrayWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/ArrayWrapper.h	/^struct traits<MatrixWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Block.h	/^struct traits<Block<XprType, BlockRows, BlockCols, InnerPanel> > : traits<XprType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CoreEvaluators.h	/^struct traits<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CwiseBinaryOp.h	/^struct traits<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CwiseNullaryOp.h	/^struct traits<CwiseNullaryOp<NullaryOp, PlainObjectType> > : traits<PlainObjectType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CwiseTernaryOp.h	/^struct traits<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> > {$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CwiseUnaryOp.h	/^struct traits<CwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/CwiseUnaryView.h	/^struct traits<CwiseUnaryView<ViewOp, MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Diagonal.h	/^struct traits<Diagonal<MatrixType,DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalMatrix<_Scalar,SizeAtCompileTime,MaxSizeAtCompileTime> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalWrapper<_DiagonalVectorType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/ForceAlignedAccess.h	/^struct traits<ForceAlignedAccess<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Inverse.h	/^struct traits<Inverse<XprType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Map.h	/^struct traits<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Matrix.h	/^struct traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/NestByValue.h	/^struct traits<NestByValue<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/PermutationMatrix.h	/^struct traits<Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Product.h	/^struct traits<Product<Lhs, Rhs, Option> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Ref.h	/^struct traits<Ref<_PlainObjectType, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Ref.h	/^struct traits<RefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Replicate.h	/^struct traits<Replicate<MatrixType,RowFactor,ColFactor> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/ReturnByValue.h	/^struct traits<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Reverse.h	/^struct traits<Reverse<MatrixType, Direction> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Select.h	/^struct traits<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/SelfAdjointView.h	/^struct traits<SelfAdjointView<MatrixType, UpLo> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Solve.h	/^struct traits<Solve<Decomposition, RhsType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/SolveTriangular.h	/^struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Transpose.h	/^struct traits<Transpose<MatrixType> > : public traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Transpositions.h	/^struct traits<Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Transpositions.h	/^struct traits<Transpose<TranspositionsBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Transpositions.h	/^struct traits<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/Transpositions.h	/^struct traits<TranspositionsWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/TriangularMatrix.h	/^struct traits<TriangularView<MatrixType, _Mode> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/VectorBlock.h	/^struct traits<VectorBlock<VectorType, Size> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/VectorwiseOp.h	/^struct traits<PartialReduxExpr<MatrixType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename T> struct traits<const T> : traits<T> {};$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^struct traits<HessenbergDecompositionMatrixHReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct traits<TridiagonalizationMatrixTReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/AngleAxis.h	/^template<typename _Scalar> struct traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Homogeneous.h	/^struct traits<Homogeneous<MatrixType,Direction> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Quaternion.h	/^struct traits<Quaternion<_Scalar,_Options> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Rotation2D.h	/^template<typename _Scalar> struct traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Geometry/Transform.h	/^struct traits<Transform<_Scalar,_Dim,_Mode,_Options> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/Householder/HouseholderSequence.h	/^struct traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct traits<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct traits<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^struct traits<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct traits<SolveWithGuess<Decomposition, RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> struct traits<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> struct traits<PartialPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<ColPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^struct traits<CompleteOrthogonalDecomposition<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/QR/FullPivHouseholderQR.h	/^struct traits<FullPivHouseholderQRMatrixQReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<FullPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType, typename Derived> struct traits<SPQR_QProduct<SPQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQTransposeReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SVD/BDCSVD.h	/^struct traits<BDCSVD<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SVD/JacobiSVD.h	/^struct traits<JacobiSVD<_MatrixType,QRPreconditioner> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType,int _UpLo, typename _Ordering> struct traits<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct traits<MappedSparseMatrix<_Scalar, _Flags, _StorageIndex> > : traits<SparseMatrix<_Scalar, _Flags, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseCompressedBase.h	/^struct traits<SparseCompressedBase<Derived> > : traits<Derived>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<SparseMatrix<_Scalar, _Options, _StorageIndex>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<const SparseMatrix<_Scalar, _Options, _StorageIndex>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<SparseMatrix<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseRef.h	/^struct traits<SparseRefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointView<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSymmetricPermutationProduct<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseVector.h	/^struct traits<SparseVector<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseCore/SparseView.h	/^struct traits<SparseView<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType, typename Derived> struct traits<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQTransposeReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/misc/Image.h	/^struct traits<image_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	Eigen/src/misc/Kernel.h	/^struct traits<kernel_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
trans	Eigen/src/Householder/HouseholderSequence.h	/^    bool trans() const { return m_trans; }     \/**< \\brief Returns the transpose flag. *\/$/;"	f	class:Eigen::HouseholderSequence
transform	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::Hyperplane
transform	tools/random_variable.hpp	/^    Eigen::MatrixXd transform;$/;"	m	struct:EigenNormalRandomVariable
transform_construct_from_matrix	Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_make_affine	Eigen/src/Geometry/Transform.h	/^struct transform_make_affine$/;"	s	namespace:Eigen::internal
transform_make_affine	Eigen/src/Geometry/Transform.h	/^struct transform_make_affine<AffineCompact>$/;"	s	namespace:Eigen::internal
transform_product_result	Eigen/src/Geometry/Transform.h	/^struct transform_product_result$/;"	s	namespace:Eigen::internal
transform_right_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 0, RhsCols>$/;"	s	namespace:Eigen::internal
transform_right_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 1, RhsCols>$/;"	s	namespace:Eigen::internal
transform_right_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2, 1> \/\/ rhs is a vector of size Dim$/;"	s	namespace:Eigen::internal
transform_right_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2, RhsCols>$/;"	s	namespace:Eigen::internal
transform_take_affine_part	Eigen/src/Geometry/Transform.h	/^struct transform_take_affine_part<Transform<Scalar,Dim,AffineCompact, Options> > {$/;"	s	namespace:Eigen::internal
transform_take_affine_part	Eigen/src/Geometry/Transform.h	/^template<typename TransformType> struct transform_take_affine_part {$/;"	s	namespace:Eigen::internal
transform_traits	Eigen/src/Geometry/Transform.h	/^struct transform_traits$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,AffineCompact,LhsOptions>,Transform<Scalar,Dim,Projective,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,false >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,Projective,LhsOptions>,Transform<Scalar,Dim,AffineCompact,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
translate	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& translate(const MatrixBase<Derived>& a_t)$/;"	f	class:Eigen::AlignedBox
translate	Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translation	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstTranslationPart translation() const { return ConstTranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline TranslationPart translation() { return TranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC VectorType& translation() { return m_coeffs; }$/;"	f	class:Eigen::Translation
translation	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC const VectorType& translation() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
translationExt	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt()$/;"	f	class:Eigen::Transform
translationExt	Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt() const$/;"	f	class:Eigen::Transform
transpose	Eigen/src/Core/PermutationMatrix.h	/^    inline InverseReturnType transpose() const$/;"	f	class:Eigen::PermutationBase
transpose	Eigen/src/Core/SelfAdjointView.h	/^    inline TransposeReturnType transpose()$/;"	f	class:Eigen::SelfAdjointView
transpose	Eigen/src/Core/SelfAdjointView.h	/^    inline const ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::SelfAdjointView
transpose	Eigen/src/Core/SolverBase.h	/^    inline ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::SolverBase
transpose	Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose() const$/;"	f	class:Eigen::DenseBase
transpose	Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose()$/;"	f	class:Eigen::DenseBase
transpose	Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> transpose() const$/;"	f	class:Eigen::TranspositionsBase
transpose	Eigen/src/Core/TriangularMatrix.h	/^    inline TransposeReturnType transpose()$/;"	f	class:Eigen::TriangularView
transpose	Eigen/src/Core/TriangularMatrix.h	/^    inline const ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::TriangularView
transpose	Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence transpose() const$/;"	f	class:Eigen::HouseholderSequence
transpose	Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation transpose() const { using numext::conj; return JacobiRotation(m_c, -conj(m_s)); }$/;"	f	class:Eigen::JacobiRotation
transpose	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> transpose() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
transpose	Eigen/src/SparseCore/SparseMatrixBase.h	/^    TransposeReturnType transpose() { return TransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	Eigen/src/SparseCore/SparseMatrixBase.h	/^    const ConstTransposeReturnType transpose() const { return ConstTransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> transpose() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
transposeInPlace	Eigen/src/Core/Transpose.h	/^inline void DenseBase<Derived>::transposeInPlace()$/;"	f	class:Eigen::DenseBase
transposition_matrix_product	Eigen/src/Core/ProductEvaluators.h	/^struct transposition_matrix_product$/;"	s	namespace:Eigen::internal
transpositionsP	Eigen/src/Cholesky/LDLT.h	/^    inline const TranspositionType& transpositionsP() const$/;"	f	class:Eigen::LDLT
traps	Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool traps = true;$/;"	m	struct:std::numeric_limits
treePostorder	Eigen/src/SparseCore/SparseColEtree.h	/^void treePostorder(typename IndexVector::Scalar n, IndexVector& parent, IndexVector& post)$/;"	f	namespace:Eigen::internal
triangularView	Eigen/src/Core/SelfAdjointView.h	/^    triangularView() const$/;"	f	class:Eigen::SelfAdjointView
triangularView	Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::MatrixBase
triangularView	Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView()$/;"	f	class:Eigen::MatrixBase
triangularView	Eigen/src/SparseCore/SparseTriangularView.h	/^SparseMatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::SparseMatrixBase
triangular_assignment_loop	Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, 0, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, Dynamic, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_dense_assignment_kernel	Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	Eigen/src/Core/SelfAdjointView.h	/^class triangular_dense_assignment_kernel<UpLo,SelfAdjoint,SetOpposite,DstEvaluatorTypeT,SrcEvaluatorTypeT,Functor,Version>$/;"	c	namespace:Eigen::internal
triangular_dense_assignment_kernel	Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	Eigen/src/Core/TriangularMatrix.h	/^class triangular_dense_assignment_kernel : public generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>$/;"	c	namespace:Eigen::internal
triangular_matrix_vector_product	Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product_trmv	Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^struct triangular_matrix_vector_product_trmv :$/;"	s	namespace:Eigen::internal
triangular_product_impl	Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct triangular_product_impl<Mode,LhsIsTriangular,Lhs,false,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,false,Lhs,true,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,true,Lhs,false,Rhs,true>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,Side,Mode,Conjugate,TriStorageOrder,RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_retval	Eigen/src/Core/SolveTriangular.h	/^  triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solve_retval
triangular_solve_retval	Eigen/src/Core/SolveTriangular.h	/^template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval$/;"	s	namespace:Eigen::internal
triangular_solve_vector	Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheLeft,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheRight,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,LoopIndex,Size,false> {$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,LoopIndex,Size,true> {$/;"	s	namespace:Eigen::internal
tribb_kernel	Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct tribb_kernel$/;"	s	namespace:Eigen::internal
tridiagonal_qr_step	Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& matA, CoeffVectorType& hCoeffs)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace_selector	Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,1,IsComplex>$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,3,false>$/;"	s	namespace:Eigen::internal
trmv_selector	Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,ColMajor>$/;"	s	namespace:Eigen::internal
trmv_selector	Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,RowMajor>$/;"	s	namespace:Eigen::internal
trsolve_traits	Eigen/src/Core/SolveTriangular.h	/^class trsolve_traits$/;"	c	namespace:Eigen::internal
true_model	models/inverse_model.hpp	/^    Model *true_model=0;$/;"	m	class:InverseProblem
true_model	smc/smc.hpp	/^    Model* true_model;$/;"	m	class:PF_SMC
true_model	smc/smc.hpp	/^    Model* true_model;$/;"	m	class:Stuart_SMC
true_type	Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
true_y	build/plot_function_conf_bounds.py	/^    true_y = []$/;"	v
twistedBy	Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseSymmetricPermutationProduct<Derived,Upper|Lower> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseMatrixBase
twistedBy	Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct<_MatrixTypeNested,Mode> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseSelfAdjointView
type	Eigen/src/Core/DenseCoeffsBase.h	/^  typedef typename conditional<is_arithmetic<T>::value, T, typename add_const_on_value_type<T>::type>::type type;$/;"	t	struct:Eigen::internal::add_const_on_value_type_if_arithmetic
type	Eigen/src/Core/GenericPacketMath.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::conj_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::log1p_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::random_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::round_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::imag_ref_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::real_ref_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs2_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::arg_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::hypot_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::imag_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::norm1_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::real_retval
type	Eigen/src/Core/MathFunctions.h	/^  typedef typename T::Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	t	struct:Eigen::internal::always_void
type	Eigen/src/Core/MatrixBase.h	/^      typedef Matrix<Scalar,MatrixBase::RowsAtCompileTime,MatrixBase::ColsAtCompileTime> type;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
type	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedAlignedMapType
type	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstAlignedMapType
type	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstMapType
type	Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedMapType
type	Eigen/src/Core/Ref.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	Eigen/src/Core/ReturnByValue.h	/^  typedef typename traits<Derived>::ReturnType type;$/;"	t	struct:Eigen::internal::nested_eval
type	Eigen/src/Core/SolverBase.h	/^  typedef SolverBase<Derived> type;$/;"	t	struct:Eigen::internal::generic_xpr_base
type	Eigen/src/Core/Transpose.h	/^  typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;$/;"	t	struct:Eigen::internal::TransposeImpl_base
type	Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet4cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet8f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet16f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef double type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef float type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef int type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^  typedef half2 type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef bool type;$/;"	t	struct:Eigen::internal::result_of
type	Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef ComplexScalar type(ComplexScalar, int);$/;"	t	struct:Eigen::internal::stem_function
type	Eigen/src/Core/util/Meta.h	/^    typedef typename binary_result_of_select<Func, ArgType0, ArgType1, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	Eigen/src/Core/util/Meta.h	/^    typedef typename ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	Eigen/src/Core/util/Meta.h	/^    typedef typename unary_result_of_select<Func, ArgType, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	Eigen/src/Core/util/Meta.h	/^  typedef typename remove_all<type1>::type type;$/;"	t	struct:Eigen::internal::result_of
type	Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	t	struct:Eigen::internal::conditional
type	Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	t	struct:Eigen::internal::conditional
type	Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef typename internal::remove_all<ArgType>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	t	struct:Eigen::internal::remove_const
type	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	t	struct:Eigen::internal::remove_const
type	Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	t	struct:Eigen::internal::add_const
type	Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	t	struct:Eigen::internal::add_const
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	Eigen/src/Core/util/Meta.h	/^{ typedef T type; };$/;"	t	struct:Eigen::internal::enable_if
type	Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1)>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1,ArgType2)>::type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	Eigen/src/Core/util/XprHelper.h	/^  typedef PromotedType type;$/;"	t	struct:Eigen::internal::promote_scalar_arg_unsupported
type	Eigen/src/Core/util/XprHelper.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::promote_scalar_arg
type	Eigen/src/Geometry/Homogeneous.h	/^  typedef MatrixOrTransformType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename TransformType::MatrixType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	Eigen/src/Geometry/Homogeneous.h	/^  typedef typename internal::add_const<typename TransformType::ConstAffinePart>::type type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	Eigen/src/Geometry/Umeyama.h	/^  > type;$/;"	t	struct:Eigen::internal::umeyama_transform_matrix_type
type	Eigen/src/LU/PartialPivLU.h	/^  typedef Derived type;$/;"	t	struct:Eigen::internal::enable_if_ref
type	Eigen/src/SparseCore/SparseRef.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	Eigen/src/SparseCore/SparseUtil.h	/^    typedef Matrix<_Scalar, 1, 1> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::plain_matrix_type
type	Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, ColMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, RowMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	Eigen/src/SparseCore/SparseUtil.h	/^  typedef SparseMatrixBase<Derived> type;$/;"	t	struct:Eigen::internal::generic_xpr_base
type	Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type	Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type1	Eigen/src/Core/util/Meta.h	/^  typedef typename std::result_of<T>::type type1;$/;"	t	struct:Eigen::internal::result_of
type_casting_traits	Eigen/src/Core/GenericPacketMath.h	/^template <typename Src, typename Tgt> struct type_casting_traits {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<Eigen::half, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<float, Eigen::half> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<float, half> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<half, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<double, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, double> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
types	build/compare_schemes.py	/^    types=["fixed_timestepping","classical_adaptive","r_adaptive"]$/;"	v
types	build/study_err.py	/^    types=["fixed_timestepping","aleksa_adaptive","classical_adaptive"]$/;"	v
u	Eigen/src/Core/arch/CUDA/Half.h	/^  unsigned int u;$/;"	m	union:Eigen::half_impl::FP32
ucol	Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  ucol; \/\/ nonzero values of U ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
ui	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  uint32_t ui[4];$/;"	m	union:Eigen::internal::__anon513
ul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  uint64_t ul[2];$/;"	m	union:Eigen::internal::__anon513
umeyama	Eigen/src/Geometry/Umeyama.h	/^umeyama(const MatrixBase<Derived>& src, const MatrixBase<OtherDerived>& dst, bool with_scaling = true)$/;"	f	namespace:Eigen
umeyama_transform_matrix_type	Eigen/src/Geometry/Umeyama.h	/^struct umeyama_transform_matrix_type$/;"	s	namespace:Eigen::internal
umfpackControl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline UmfpackControl& umfpackControl()$/;"	f	class:Eigen::UmfPackLU
umfpackControl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const UmfpackControl& umfpackControl() const$/;"	f	class:Eigen::UmfPackLU
umfpackFactorizeReturncode	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline int umfpackFactorizeReturncode() const$/;"	f	class:Eigen::UmfPackLU
umfpackReportControl	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void umfpackReportControl()$/;"	f	class:Eigen::UmfPackLU
umfpackReportInfo	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void umfpackReportInfo()$/;"	f	class:Eigen::UmfPackLU
umfpackReportStatus	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void umfpackReportStatus() {$/;"	f	class:Eigen::UmfPackLU
umfpack_defaults	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], double)$/;"	f	namespace:Eigen
umfpack_defaults	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], std::complex<double>)$/;"	f	namespace:Eigen
umfpack_free_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double)$/;"	f	namespace:Eigen
umfpack_free_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_free_symbolic	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double)$/;"	f	namespace:Eigen
umfpack_free_symbolic	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_determinant	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_determinant	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_lunz	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, double)$/;"	f	namespace:Eigen
umfpack_get_lunz	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], double Lx[], int Up[], int Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], std::complex<double> Lx[], int Up[], int Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_report_control	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], double)$/;"	f	namespace:Eigen
umfpack_report_control	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], std::complex<double>)$/;"	f	namespace:Eigen
umfpack_report_info	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], double)$/;"	f	namespace:Eigen
umfpack_report_info	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], std::complex<double>)$/;"	f	namespace:Eigen
umfpack_report_status	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, double)$/;"	f	namespace:Eigen
umfpack_report_status	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_solve	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_symbolic	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_symbolic(int n_row,int n_col,$/;"	f	namespace:Eigen
unaligned_dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop$/;"	s	namespace:Eigen::internal
unaligned_dense_assignment_loop	Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop<false>$/;"	s	namespace:Eigen::internal
unaryExpr	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryExpr(const CustomUnaryOp& func = CustomUnaryOp()) const$/;"	f
unaryViewExpr	Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryViewExpr(const CustomViewOp& func = CustomViewOp()) const$/;"	f
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& replicate)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& reverse)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& t) : m_argImpl(t.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& wrapper)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^  explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<ArrayWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp, ArgType>, IndexBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryView<UnaryOp, ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<MatrixWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Replicate<ArgType, RowFactor, ColFactor> >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Reverse<ArgType, Direction> >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Transpose<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/Inverse.h	/^  unary_evaluator(const InverseType& inv_xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/Inverse.h	/^struct unary_evaluator<Inverse<ArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Core/TriangularMatrix.h	/^  unary_evaluator(const XprType &xpr) : Base(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Core/TriangularMatrix.h	/^struct unary_evaluator<TriangularView<MatrixType,Mode>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/Geometry/Homogeneous.h	/^struct unary_evaluator<Homogeneous<ArgType,Direction>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseBlock.h	/^    explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseBlock.h	/^  explicit unary_evaluator(const XprType &xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    explicit unary_evaluator(const XprType& op) : m_functor(op.functor()), m_argImpl(op.nestedExpression())$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseProduct.h	/^  explicit unary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseProduct.h	/^struct unary_evaluator<SparseView<Product<Lhs, Rhs, Options> >, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseTranspose.h	/^    explicit unary_evaluator(const XprType& op) :m_argImpl(op.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseTranspose.h	/^struct unary_evaluator<Transpose<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseTriangularView.h	/^  explicit unary_evaluator(const XprType &xpr) : m_argImpl(xpr.nestedExpression()), m_arg(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseTriangularView.h	/^struct unary_evaluator<TriangularView<ArgType,Mode>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseView.h	/^    explicit unary_evaluator(const XprType& xpr) : m_argImpl(xpr.nestedExpression()), m_view(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef typename internal::remove_all<ArgType>::type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	s	namespace:Eigen::internal
unblocked	Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	Eigen/src/Cholesky/LDLT.h	/^  static bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked	Eigen/src/Cholesky/LLT.h	/^  static Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked_lu	Eigen/src/LU/PartialPivLU.h	/^  static Index unblocked_lu(MatrixType& lu, PivIndex* row_transpositions, PivIndex& nb_transpositions)$/;"	f	struct:Eigen::internal::partial_lu_impl
uncompress	Eigen/src/SparseCore/SparseMatrix.h	/^    void uncompress()$/;"	f	class:Eigen::SparseMatrix
uniform_distribution	methods/core_methods.hpp	/^    UniformDistribution uniform_distribution; $/;"	m	class:AbdulleGaregnaniMethod
unitOrthogonal	Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::unitOrthogonal() const$/;"	f	class:Eigen::MatrixBase
unitOrthogonal_selector	Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,2>$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,3>$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet16f> {$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet16i> {$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet8d> {$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	s	namespace:Eigen::internal
up_bound	smc/pf_smc.cpp	/^  double up_bound;$/;"	m	struct:ShuffleSelect	file:
up_bound	smc/stuart_smc.cpp	/^  double up_bound;$/;"	m	struct:ShuffleSelect	file:
up_bound	tools/random_variable.hpp	/^    Real up_bound;$/;"	m	class:DirSample
update	Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool update(MatrixType& mat, TranspositionType& transpositions, Workspace& tmp, WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	Eigen/src/Cholesky/LDLT.h	/^  static bool update(MatrixType& mat, const TranspositionType& transpositions, Workspace& tmp, const WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateInPlace	Eigen/src/Cholesky/LDLT.h	/^  static bool updateInPlace(MatrixType& mat, MatrixBase<WDerived>& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateList	Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^inline void IncompleteCholesky<Scalar,_UpLo, OrderingType>::updateList(Ref<const VectorIx> colPtr, Ref<VectorIx> rowIdx, Ref<VectorSx> vals, const Index& col, const Index& jk, VectorIx& firstElt, VectorList& listCol)$/;"	f	class:Eigen::IncompleteCholesky
update_segrep	Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  bool update_segrep(Index \/*krep*\/, Index \/*jj*\/)$/;"	f	struct:Eigen::internal::column_dfs_traits
update_segrep	Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  bool update_segrep(Index krep, StorageIndex jj)$/;"	f	struct:Eigen::internal::panel_dfs_traits
upperbidiagonalization_blocked_helper	Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_blocked_helper(MatrixType& A,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_blocked	Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_blocked(MatrixType& A, BidiagType& bidiagonal,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_unblocked	Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_unblocked(MatrixType& mat,$/;"	f	namespace:Eigen::internal
useSpecificBlockingSizes	Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline bool useSpecificBlockingSizes(Index& k, Index& m, Index& n)$/;"	f	namespace:Eigen::internal
users	Eigen/src/Core/products/Parallelizer.h	/^  int volatile users;$/;"	m	struct:Eigen::internal::GemmParallelInfo
usub	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector usub; \/\/ row indices of U columns in ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
v	Eigen/src/Core/arch/AVX/Complex.h	/^  __m256  v;$/;"	m	struct:Eigen::internal::Packet4cf
v	Eigen/src/Core/arch/AVX/Complex.h	/^  __m256d  v;$/;"	m	struct:Eigen::internal::Packet2cd
v	Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	Eigen/src/Core/arch/NEON/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	Eigen/src/Core/arch/NEON/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	Eigen/src/Core/arch/SSE/Complex.h	/^  __m128  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	Eigen/src/Core/arch/SSE/Complex.h	/^  __m128d  v;$/;"	m	struct:Eigen::internal::Packet1cd
v	Eigen/src/Core/arch/ZVector/Complex.h	/^    Packet4f v;$/;"	m	union:Eigen::internal::Packet2cf::__anon520
v	Eigen/src/Core/arch/ZVector/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v2d	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2d  v2d;$/;"	m	union:Eigen::internal::__anon513
v2l	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2l  v2l;$/;"	m	union:Eigen::internal::__anon513
v2ul	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2ul v2ul;$/;"	m	union:Eigen::internal::__anon513
v4f	Eigen/src/Core/arch/ZVector/PacketMath.h	/^	Packet2d  v4f[2];$/;"	m	struct:Eigen::internal::__anon512
v4i	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet4i  v4i;$/;"	m	union:Eigen::internal::__anon513
v4ui	Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet4ui v4ui;$/;"	m	union:Eigen::internal::__anon513
vals	tools/random_variable.hpp	/^  std::vector<Real*> vals;$/;"	m	class:DiscreteDirac
value	Eigen/src/Core/CoreEvaluators.h	/^  static const bool value = false;$/;"	m	struct:Eigen::internal::evaluator_assume_aliasing
value	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const          { return m_iter.value(); }$/;"	f	class:Eigen::InnerIterator
value	Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::inner_iterator_selector
value	Eigen/src/Core/DenseBase.h	/^    CoeffReturnType value() const$/;"	f	class:Eigen::DenseBase
value	Eigen/src/Core/GeneralProduct.h	/^         value = is_large  ? Large$/;"	e	enum:Eigen::internal::product_size_category::__anon587
value	Eigen/src/Core/GeneralProduct.h	/^    value = selector::ret,$/;"	e	enum:Eigen::internal::product_type::__anon590
value	Eigen/src/Core/MathFunctions.h	/^         value = (upper <= lower + 1) ? int(meta_floor_log2_terminate)$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon464
value	Eigen/src/Core/MathFunctions.h	/^  enum { value = (n >= ((unsigned int)(1) << (lower+1))) ? lower+1 : lower };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon467
value	Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, lower, meta_floor_log2_selector<n, lower, upper>::middle>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon465
value	Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, meta_floor_log2_selector<n, lower, upper>::middle, upper>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon466
value	Eigen/src/Core/ProductEvaluators.h	/^  static const bool value = true;$/;"	m	struct:Eigen::internal::evaluator_assume_aliasing
value	Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size+5) * NumTraits<Scalar>::MulCost + (Size-1)*NumTraits<Scalar>::AddCost }; };$/;"	e	enum:Eigen::internal::member_lpnorm::Cost::__anon433
value	Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size-1) * functor_traits<BinaryOp>::Cost }; };$/;"	e	enum:Eigen::internal::member_redux::Cost::__anon434
value	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon480
value	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon482
value	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon481
value	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 16 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon486
value	Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 14 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon485
value	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon494
value	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon495
value	Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon496
value	Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct is_arithmetic<half> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon566
value	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon556
value	Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon555
value	Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct is_arithmetic<half2> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon561
value	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon529
value	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon531
value	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon530
value	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 8 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon539
value	Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 7 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon538
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon410
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon404
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon407
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon413
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon408
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon402
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon405
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon411
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon409
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon403
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon406
value	Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon412
value	Eigen/src/Core/util/ForwardDeclarations.h	/^         value = has_direct_access ? (has_write_access ? DirectWriteAccessors : DirectAccessors)$/;"	e	enum:Eigen::internal::accessors_level::__anon134
value	Eigen/src/Core/util/Meta.h	/^  enum { value = is_convertible_impl<typename remove_all<From>::type,$/;"	e	enum:Eigen::internal::is_convertible::__anon207
value	Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(test(ms_from, 0))==sizeof(yes) };$/;"	e	enum:Eigen::internal::is_convertible_impl::__anon206
value	Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon214
value	Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon212
value	Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon213
value	Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor<T>(0)) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_ReturnType::__anon211
value	Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::false_type::__anon176
value	Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	e	enum:Eigen::internal::true_type::__anon175
value	Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_const::__anon204
value	Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_const::__anon205
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon183
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon184
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon181
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon180
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon182
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon185
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon189
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon191
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon187
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon186
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon190
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon192
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon188
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<bool>            { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon194
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<char>            { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon195
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed char>     { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon196
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed int>      { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon200
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed long>     { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon202
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed short>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon198
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon197
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon201
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon203
value	Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon199
value	Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_same::__anon177
value	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon179
value	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_integral        { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_integral::__anon193
value	Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_same::__anon178
value	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  enum { value = is_ref_compatible_impl<typename remove_all<MatrixType>::type>::value };$/;"	e	enum:Eigen::internal::is_ref_compatible::__anon658
value	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  enum { value = sizeof(test<MatrixType>(ms_from, 0))==sizeof(yes) };$/;"	e	enum:Eigen::internal::is_ref_compatible_impl::__anon657
value	Eigen/src/SparseCore/AmbiVector.h	/^      Scalar value;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
value	Eigen/src/SparseCore/AmbiVector.h	/^    Scalar value() const { return m_cachedValue; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
value	Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& value(Index i) { eigen_internal_assert(m_values!=0); return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Scalar& value(Index i) const { eigen_internal_assert(m_values!=0); return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	Eigen/src/SparseCore/SparseBlock.h	/^  inline Scalar value() const { return m_it.value(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
value	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
value	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
value	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { eigen_internal_assert(m_id<m_innerSize); return m_value; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(m_lhsIter.value(), m_rhsIter.value()); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return LhsIterator::value() * m_factor; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_coeff * SparseXprInnerIterator::value(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Scalar value() const { return m_sparseIter.value() * m_diagCoeffNested.coeff(index()); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseTriangularView.h	/^      inline Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	Eigen/src/SparseCore/SparseUtil.h	/^  const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::Triplet
value	Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_idval]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
valuePtr	Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* valuePtr() { return m_values; }$/;"	f	class:Eigen::internal::CompressedStorage
valuePtr	Eigen/src/SparseCore/CompressedStorage.h	/^    const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::internal::CompressedStorage
valuePtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar* valuePtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar* valuePtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar* valuePtr() { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar* valuePtr() const { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar* valuePtr()              { return Base::m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	Eigen/src/SparseCore/SparseMap.h	/^    inline const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar* valuePtr() { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar* valuePtr() const { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline Scalar* valuePtr() { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	Eigen/src/SparseCore/SparseTranspose.h	/^    inline const Scalar* valuePtr() const { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Scalar* valuePtr() { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseVector
valuePtr	Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseVector
valuePtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* valuePtr() {  return m_nzval; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valuePtr	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Scalar* valuePtr() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valueRef	Eigen/src/SparseCore/SparseBlock.h	/^  inline Scalar& valueRef() { return m_it.valueRef(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
valueRef	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id-1]); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
valueRef	Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
valueRef	Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
valueRef	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_idval]); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
value_type	Eigen/src/Core/DenseBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::DenseBase
value_type	Eigen/src/Core/util/Memory.h	/^  typedef T               value_type;$/;"	t	class:Eigen::aligned_allocator
value_type	Eigen/src/SparseCore/SparseMatrix.h	/^        typedef StorageIndex value_type;$/;"	t	class:Eigen::SparseMatrix::SingletonVector
value_type	Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::SparseMatrixBase
value_type	Eigen/src/StlSupport/details.h	/^    typedef T               value_type;$/;"	t	class:Eigen::aligned_allocator_indirection
values	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void *values;$/;"	m	struct:Eigen::SluMatrix::__anon111
variance	tools/random_variable.hpp	/^    Real mean,variance;$/;"	m	class:NormalDistribution
vec	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline VectorBlock<Coefficients,3> vec() { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const VectorBlock<const Coefficients,3> vec() const { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec2d_swizzle1	Eigen/src/Core/arch/SSE/PacketMath.h	70;"	d
vec4f_swizzle1	Eigen/src/Core/arch/SSE/PacketMath.h	64;"	d
vec4f_swizzle2	Eigen/src/Core/arch/SSE/PacketMath.h	73;"	d
vec4i_swizzle1	Eigen/src/Core/arch/SSE/PacketMath.h	67;"	d
vec4i_swizzle2	Eigen/src/Core/arch/SSE/PacketMath.h	76;"	d
vec_splat_dbl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d vec_splat_dbl<0>(Packet2d& a)$/;"	f	namespace:Eigen::internal
vec_splat_dbl	Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d vec_splat_dbl<1>(Packet2d& a)$/;"	f	namespace:Eigen::internal
vec_splat_packet4f	Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<int element> EIGEN_STRONG_INLINE Packet4f vec_splat_packet4f(const Packet4f&   from)$/;"	f	namespace:Eigen::internal
vector	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	Eigen/src/StlSupport/StdVector.h	/^  class vector<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
vectorD	Eigen/src/Cholesky/LDLT.h	/^    inline Diagonal<const MatrixType> vectorD() const$/;"	f	class:Eigen::LDLT
vectorD	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialCholesky
vectorD	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialLDLT
vector_base	Eigen/src/StlSupport/StdVector.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > vector_base;$/;"	t	class:std::vector
vectorwise_reverse_inplace_impl	Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Horizontal>$/;"	s	namespace:Eigen::internal
vectorwise_reverse_inplace_impl	Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Vertical>$/;"	s	namespace:Eigen::internal
viewAsCholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_dense viewAsCholmod(MatrixBase<Derived>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(Ref<SparseMatrix<_Scalar,_Options,_StorageIndex> > mat)$/;"	f	namespace:Eigen
viewAsCholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(const SparseSelfAdjointView<const SparseMatrix<_Scalar,_Options,_Index>, UpLo>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseVector<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsEigen	Eigen/src/CholmodSupport/CholmodSupport.h	/^MappedSparseMatrix<Scalar,Flags,StorageIndex> viewAsEigen(cholmod_sparse& cm)$/;"	f	namespace:Eigen
visit	Eigen/src/Core/Visitor.h	/^void DenseBase<Derived>::visit(Visitor& visitor) const$/;"	f	class:Eigen::DenseBase
visitor_evaluator	Eigen/src/Core/Visitor.h	/^  explicit visitor_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::visitor_evaluator
visitor_evaluator	Eigen/src/Core/Visitor.h	/^class visitor_evaluator$/;"	c	namespace:Eigen::internal
visitor_impl	Eigen/src/Core/Visitor.h	/^struct visitor_impl$/;"	s	namespace:Eigen::internal
visitor_impl	Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, 1>$/;"	s	namespace:Eigen::internal
visitor_impl	Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, Dynamic>$/;"	s	namespace:Eigen::internal
vld1_dup_f32	Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_dup_f32 (const float* x) { return ::vld1_dup_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1_f32	Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_f32 (const float* x) { return ::vld1_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1q_f32	Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x4_t vld1q_f32(const float* x) { return ::vld1q_f32((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vml_assign_traits	Eigen/src/Core/Assign_MKL.h	/^class vml_assign_traits$/;"	c	namespace:Eigen::internal
volatile	build/CMakeFiles/3.9.5/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volatile	cmake-build-debug/CMakeFiles/3.8.2/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volume	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline Scalar volume() const$/;"	f	class:Eigen::AlignedBox
vreinterpretq_f64_u64	Eigen/src/Core/arch/NEON/PacketMath.h	/^float64x2_t vreinterpretq_f64_u64(T a)$/;"	f	namespace:Eigen::internal
vreinterpretq_u64_f64	Eigen/src/Core/arch/NEON/PacketMath.h	/^uint64x2_t vreinterpretq_u64_f64(T a)$/;"	f	namespace:Eigen::internal
vst1_f32	Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1_f32 (float* to, float32x2_t from) { ::vst1_f32 ((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
vst1q_f32	Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1q_f32(float* to, float32x4_t from) { ::vst1q_f32((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
w	Eigen/src/Core/DenseCoeffsBase.h	/^    w() const$/;"	f	class:Eigen::DenseCoeffsBase
w	Eigen/src/Core/DenseCoeffsBase.h	/^    w()$/;"	f	class:Eigen::DenseCoeffsBase
w	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar w() const { return this->derived().coeffs().coeff(3); }$/;"	f	class:Eigen::QuaternionBase
w	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar& w() { return this->derived().coeffs().coeffRef(3); }$/;"	f	class:Eigen::QuaternionBase
w0	methods/stabilized_methods.hpp	/^    Real w0;$/;"	m	class:RKC
w1	methods/stabilized_methods.hpp	/^    Real w1;$/;"	m	class:RKC
weight	smc/smc.hpp	/^    Real weight;$/;"	m	class:Particle
workaround_msvc_stl_support	Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support() : T() {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support(const T& other) : T(other) {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	Eigen/src/StlSupport/details.h	/^  template<typename T> struct workaround_msvc_stl_support : public T$/;"	s	namespace:Eigen::internal
writePacket	Eigen/src/Core/Block.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	Eigen/src/Core/Block.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
x	Eigen/src/Core/DenseCoeffsBase.h	/^    x() const { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	Eigen/src/Core/DenseCoeffsBase.h	/^    x() { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	Eigen/src/Core/arch/CUDA/Half.h	/^  unsigned short x;$/;"	m	struct:Eigen::half_impl::__half
x	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar x() const { return this->derived().coeffs().coeff(0); }$/;"	f	class:Eigen::QuaternionBase
x	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar& x() { return this->derived().coeffs().coeffRef(0); }$/;"	f	class:Eigen::QuaternionBase
x	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar x() const { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& x() { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	build/plot_data_series.py	/^x=[i for i in range(len(a))]$/;"	v
x	build/plot_function_conf_bounds.py	/^    x = []$/;"	v
x	mcmc/mala.hpp	/^    Real*x;$/;"	m	class:MALA_Sampler
x	mcmc/pcn.hpp	/^    Real*x;$/;"	m	class:PCN_Sampler
x	mcmc/phmc.hpp	/^    Real*x;$/;"	m	class:PHMC_Sampler
x	smc/smc.hpp	/^    std::vector<Real> x;$/;"	m	class:Particle
x	tools/mcmc.hpp	/^    Real*x;$/;"	m	class:MCMC_Sampler
x0	models/models.hpp	/^    Real *x0;$/;"	m	class:Model
x_Real	models/inverse_model.hpp	/^    Real *x_Real;$/;"	m	class:BrusselatorInverse
x_Real	models/inverse_model.hpp	/^    Real *x_Real;$/;"	m	class:FitzHughInverse
x_Real	models/inverse_model.hpp	/^    Real *x_Real;$/;"	m	class:TestInverse
x_m	core_methods.hpp	/^    double *x_m,*x_t;$/;"	m	class:Heun
x_m	methods/core_methods.hpp	/^    Real *x_m,*x_t;$/;"	m	class:Heun
x_m	methods/step_integrators.hpp	/^    Real *x_m,*x_t;$/;"	m	class:Heun
x_obs	models/inverse_model.hpp	/^    std::vector<Real*> x_obs;$/;"	m	class:InverseProblem
x_scale	build/plot_2d_solution.py	/^    x_scale=1$/;"	v
x_t	core_methods.hpp	/^    double *x_m,*x_t;$/;"	m	class:Heun
x_t	methods/core_methods.hpp	/^    Real *x_m,*x_t;$/;"	m	class:Heun
x_t	methods/step_integrators.hpp	/^    Real *x_m,*x_t;$/;"	m	class:Heun
x_tmp	build/plot_2d_solution.py	/^        x_tmp=[]$/;"	v
x_tmp	core_methods.hpp	/^    double *x_tmp;$/;"	m	class:Heun
x_tmp	methods/core_methods.hpp	/^    Real *x_tmp;$/;"	m	class:Heun
x_tmp	methods/core_methods.hpp	/^    Real *x_tmp;$/;"	m	class:NumericalMethod
x_tmp	methods/step_integrators.hpp	/^    Real *x_tmp;$/;"	m	class:Heun
x_val	build/plot_function_conf_bounds.py	/^        x_val=1.0\/(no_nodes-1) * i$/;"	v
xlsub	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlsub; \/\/ pointers to the beginning of each column in lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xlusup	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlusup; \/\/ pointers to the beginning of each column in lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xsup	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xsup; \/\/First supernode column ... xsup(s) points to the beginning of the s-th supernode$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xusub	Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xusub; \/\/ Pointers to the beginning of each column of U in ucol $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
y	Eigen/src/Core/DenseCoeffsBase.h	/^    y() const$/;"	f	class:Eigen::DenseCoeffsBase
y	Eigen/src/Core/DenseCoeffsBase.h	/^    y()$/;"	f	class:Eigen::DenseCoeffsBase
y	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar y() const { return this->derived().coeffs().coeff(1); }$/;"	f	class:Eigen::QuaternionBase
y	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar& y() { return this->derived().coeffs().coeffRef(1); }$/;"	f	class:Eigen::QuaternionBase
y	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar y() const { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& y() { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y_scale	build/plot_2d_solution.py	/^    y_scale=10$/;"	v
y_tmp	build/plot_2d_solution.py	/^        y_tmp=[]$/;"	v
yes	Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	s	struct:Eigen::internal::is_convertible_impl
yes	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct yes {int a[1];};$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
z	Eigen/src/Core/DenseCoeffsBase.h	/^    z() const$/;"	f	class:Eigen::DenseCoeffsBase
z	Eigen/src/Core/DenseCoeffsBase.h	/^    z()$/;"	f	class:Eigen::DenseCoeffsBase
z	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar z() const { return this->derived().coeffs().coeff(2); }$/;"	f	class:Eigen::QuaternionBase
z	Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar& z() { return this->derived().coeffs().coeffRef(2); }$/;"	f	class:Eigen::QuaternionBase
z	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar z() const { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& z() { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
zCoeffs	Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const HCoeffsType& zCoeffs() const { return m_zCoeffs; }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
z_scale	build/plot_2d_solution.py	/^    z_scale=2$/;"	v
z_tmp	build/plot_2d_solution.py	/^        z_tmp=[]$/;"	v
zeta	Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^zeta(const EIGEN_CURRENT_STORAGE_BASE_CLASS<DerivedQ> &q) const$/;"	f
~AleksaRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^    ~AleksaRandomPathsAdaptiveScheme()$/;"	f	class:AleksaRandomPathsAdaptiveScheme
~AlignedBox	Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AmbiVector	Eigen/src/SparseCore/AmbiVector.h	/^    ~AmbiVector() { delete[] m_buffer; }$/;"	f	class:Eigen::internal::AmbiVector
~BDCSVD	Eigen/src/SVD/BDCSVD.h	/^  ~BDCSVD() $/;"	f	class:Eigen::BDCSVD
~BiCGSTAB	Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  ~BiCGSTAB() {}$/;"	f	class:Eigen::BiCGSTAB
~CholmodBase	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodBase()$/;"	f	class:Eigen::CholmodBase
~CholmodDecomposition	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodDecomposition() {}$/;"	f	class:Eigen::CholmodDecomposition
~CholmodSimplicialLDLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLDLT() {}$/;"	f	class:Eigen::CholmodSimplicialLDLT
~CholmodSimplicialLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLLT() {}$/;"	f	class:Eigen::CholmodSimplicialLLT
~CholmodSupernodalLLT	Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSupernodalLLT() {}$/;"	f	class:Eigen::CholmodSupernodalLLT
~CompressedStorage	Eigen/src/SparseCore/CompressedStorage.h	/^    ~CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
~ConjugateGradient	Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ~ConjugateGradient() {}$/;"	f	class:Eigen::ConjugateGradient
~DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~Equation	models/models.hpp	/^    virtual ~Equation()$/;"	f	class:Equation
~GiacomoRandomPathsAdaptiveScheme	methods/adaptive_methods.hpp	/^    ~GiacomoRandomPathsAdaptiveScheme()$/;"	f	class:GiacomoRandomPathsAdaptiveScheme
~GiacomoRandomPathsAdaptiveScheme2	methods/adaptive_methods.hpp	/^    ~GiacomoRandomPathsAdaptiveScheme2()$/;"	f	class:GiacomoRandomPathsAdaptiveScheme2
~Heun	core_methods.hpp	/^  ~Heun(){delete[] x_m;delete[] x_t;delete[] x_tmp;}$/;"	f	class:Heun
~Heun	methods/core_methods.hpp	/^  ~Heun(){delete[] x_m;delete[] x_t;delete[] x_tmp;}$/;"	f	class:Heun
~Heun	methods/step_integrators.hpp	/^  ~Heun(){delete[] x_m;delete[] x_t;delete[] x_tmp;}$/;"	f	class:Heun
~Hyperplane	Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~InverseProblem	models/inverse_model.hpp	/^    ~InverseProblem()$/;"	f	class:InverseProblem
~IterativeSolverBase	Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ~IterativeSolverBase() {}$/;"	f	class:Eigen::IterativeSolverBase
~LeastSquaresConjugateGradient	Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  ~LeastSquaresConjugateGradient() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
~MCMC_Sampler	tools/mcmc.hpp	/^  ~MCMC_Sampler()$/;"	f	class:MCMC_Sampler
~Map	Eigen/src/SparseCore/SparseMap.h	/^    inline ~Map() {}$/;"	f	class:Eigen::Map
~MappedSparseMatrix	Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ~MappedSparseMatrix() {}$/;"	f	class:Eigen::MappedSparseMatrix
~MappedSuperNodalMatrix	Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    ~MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
~Model	models/models.hpp	/^    virtual ~Model()$/;"	f	class:Model
~NumericalMethod	methods/core_methods.hpp	/^    virtual ~NumericalMethod(){delete[] cur_x; delete [] next_x; delete[] x_tmp;}$/;"	f	class:NumericalMethod
~ParametrizedLine	Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~PardisoImpl	Eigen/src/PardisoSupport/PardisoSupport.h	/^    ~PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
~PastixBase	Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ~PastixBase() $/;"	f	class:Eigen::PastixBase
~RK3	core_methods.hpp	/^    ~RK3(){delete[] k1;delete[] k2;delete[] k3;;delete[] tmp;}$/;"	f	class:RK3
~RK3	methods/core_methods.hpp	/^    ~RK3(){delete[] k1;delete[] k2;delete[] k3;;delete[] tmp;}$/;"	f	class:RK3
~RK3	methods/step_integrators.hpp	/^    ~RK3(){delete[] k1;delete[] k2;delete[] k3;;delete[] tmp;}$/;"	f	class:RK3
~RK4	core_methods.hpp	/^    ~RK4(){delete[] k1;delete[] k2;delete[] k3;delete[] k4;delete[] tmp;}$/;"	f	class:RK4
~RK4	methods/core_methods.hpp	/^    ~RK4(){delete[] k1;delete[] k2;delete[] k3;delete[] k4;delete[] tmp;}$/;"	f	class:RK4
~RK4	methods/step_integrators.hpp	/^    ~RK4(){delete[] k1;delete[] k2;delete[] k3;delete[] k4;delete[] tmp;}$/;"	f	class:RK4
~RKC	methods/stabilized_methods.hpp	/^    ~RKC(){}$/;"	f	class:RKC
~ROCK2	methods/stabilized_methods.hpp	/^    ~ROCK2()$/;"	f	class:ROCK2
~Ref	Eigen/src/SparseCore/SparseRef.h	/^    ~Ref() {$/;"	f	class:Eigen::Ref
~SPQR	Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ~SPQR()$/;"	f	class:Eigen::SPQR
~SimplicialCholeskyBase	Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ~SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
~SolverBase	Eigen/src/Core/SolverBase.h	/^    ~SolverBase()$/;"	f	class:Eigen::SolverBase
~SparseLU	Eigen/src/SparseLU/SparseLU.h	/^    ~SparseLU()$/;"	f	class:Eigen::SparseLU
~SparseMapBase	Eigen/src/SparseCore/SparseMap.h	/^    inline ~SparseMapBase() {}$/;"	f	class:Eigen::SparseMapBase
~SparseMatrix	Eigen/src/SparseCore/SparseMatrix.h	/^    inline ~SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
~SparseSolverBase	Eigen/src/SparseCore/SparseSolverBase.h	/^    ~SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
~SparseVector	Eigen/src/SparseCore/SparseVector.h	/^    inline ~SparseVector() {}$/;"	f	class:Eigen::SparseVector
~StepIntegrator	methods/core_methods.hpp	/^    virtual ~StepIntegrator(){}$/;"	f	class:StepIntegrator
~SuperILU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperILU()$/;"	f	class:Eigen::SuperILU
~SuperLU	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLU()$/;"	f	class:Eigen::SuperLU
~SuperLUBase	Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLUBase()$/;"	f	class:Eigen::SuperLUBase
~UmfPackLU	Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ~UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
~aligned_allocator	Eigen/src/Core/util/Memory.h	/^  ~aligned_allocator() {}$/;"	f	class:Eigen::aligned_allocator
~aligned_allocator_indirection	Eigen/src/StlSupport/details.h	/^    ~aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
~aligned_stack_memory_handler	Eigen/src/Core/util/Memory.h	/^    ~aligned_stack_memory_handler()$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
~gemm_blocking_space	Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    ~gemm_blocking_space()$/;"	f	class:Eigen::internal::gemm_blocking_space
~noncopyable	Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC ~noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
~scoped_array	Eigen/src/Core/util/Memory.h	/^  ~scoped_array()$/;"	f	class:Eigen::internal::scoped_array
